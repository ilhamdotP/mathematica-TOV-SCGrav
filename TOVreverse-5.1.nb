(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    707467,      13418]
NotebookOptionsPosition[    703148,      13277]
NotebookOutlinePosition[    703557,      13294]
CellTagsIndexPosition[    703514,      13291]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
KASUS TOV SCgrav Ho-Matsuo (juga pakai constant energy density)\
\>", "Title",
 CellChangeTimes->{{3.819689072691533*^9, 3.8196891039060545`*^9}, {
  3.8196891532308736`*^9, 3.819689177239542*^9}}],

Cell[CellGroupData[{

Cell["Pers gerak", "Section",
 CellChangeTimes->{{3.819598708482489*^9, 3.819598715470104*^9}, {
  3.819689144132033*^9, 3.819689146190527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"pers\[Nu]", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
       "\[Kappa]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
       "\[Rho]0"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"r", "[", "rs", "]"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["r", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"r", "[", "rs", "]"}], " ", 
    RowBox[{
     SuperscriptBox["r", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Nu]", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}]}], "+", 
   RowBox[{"\[Alpha]", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], 
     "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"persr", ":=", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0", 
     " ", 
     SuperscriptBox[
      RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["r", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
    RowBox[{"\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Nu]", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"r", "[", "rs", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Nu]", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"4", " ", "\[Alpha]", " ", 
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}]}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Rho]0", "[", "rs_", "]"}], "=", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["0.", "\[Kappa]"], ",", 
           RowBox[{"rs", ">", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["25.", "\[Kappa]"], ",", 
           RowBox[{"rs", "\[LessEqual]", "y"}]}], "}"}]}], "}"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"y", "\[Rule]", 
        RowBox[{"-", "60."}]}], "}"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"pers\[Nu]", "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"\[Nu]", "'"}], "[", "rs", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"limit\[Alpha]nol", "\[Rule]", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pers\[Nu]", "/.", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", "\[Rule]", "0"}], "}"}]}], ")"}], "\[Equal]", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"\[Nu]", "'"}], "[", "rs", "]"}]}], "]"}]}], "//", 
   "FullSimplify"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"persr", "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"r", "''"}], "[", "rs", "]"}]}], "]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.819597833118269*^9, 3.8195979462017326`*^9}, {
  3.8195979791012154`*^9, 3.8195980185289416`*^9}, {3.8195980505750003`*^9, 
  3.81959810688099*^9}, {3.819598170058075*^9, 3.8195982511345987`*^9}, {
  3.8195989307985*^9, 3.8195989450874195`*^9}, {3.8196053134903593`*^9, 
  3.81960535457714*^9}, {3.819605384903529*^9, 3.8196054117224865`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"r", "[", "rs", "]"}], " ", 
           RowBox[{
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["r", "\[Prime]",
                  MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}],
             "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                "\[Alpha]", " ", "\[Kappa]"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                "\[Kappa]", " ", "\[Rho]0"}], "+", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["r", "\[Prime]",
                  MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
              ")"}]}]}]]}], ")"}]}], "\[Alpha]"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"r", "[", "rs", "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
           "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
               "\[Alpha]", " ", "\[Kappa]"}], "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
               "\[Kappa]", " ", "\[Rho]0"}], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
             ")"}]}]}]]}], ")"}]}], "\[Alpha]"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8195979396513147`*^9, 3.8195979472170873`*^9}, 
   3.819597989035618*^9, 3.8195980197979355`*^9, {3.8195980639451036`*^9, 
   3.819598107550228*^9}, 3.8195981872799263`*^9, {3.8195982276062*^9, 
   3.819598251799633*^9}, {3.8195989243097024`*^9, 3.8195989455441694`*^9}, {
   3.819605307933508*^9, 3.819605356074437*^9}, {3.8196053970504446`*^9, 
   3.819605412678954*^9}, 3.8196145939735665`*^9, 3.8196896855789757`*^9, 
   3.8199397615688334`*^9, 3.8199404230854597`*^9, 3.819943255796587*^9, 
   3.819943319359148*^9, 3.8199514960080414`*^9, 3.81995467098164*^9}],

Cell[BoxData[
 RowBox[{"limit\[Alpha]nol", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
           "\[Kappa]"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
           "\[Rho]0"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
      RowBox[{
       RowBox[{"r", "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}]]}], "}"}], 
   "}"}]}]], "Output",
 CellChangeTimes->{{3.8195979396513147`*^9, 3.8195979472170873`*^9}, 
   3.819597989035618*^9, 3.8195980197979355`*^9, {3.8195980639451036`*^9, 
   3.819598107550228*^9}, 3.8195981872799263`*^9, {3.8195982276062*^9, 
   3.819598251799633*^9}, {3.8195989243097024`*^9, 3.8195989455441694`*^9}, {
   3.819605307933508*^9, 3.819605356074437*^9}, {3.8196053970504446`*^9, 
   3.819605412678954*^9}, 3.8196145939735665`*^9, 3.8196896855789757`*^9, 
   3.8199397615688334`*^9, 3.8199404230854597`*^9, 3.819943255796587*^9, 
   3.819943319359148*^9, 3.8199514960080414`*^9, 3.8199546711043835`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["r", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0", 
       " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"r", "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Nu]", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}], "+", 
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Nu]", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}], "-", 
      RowBox[{"4", " ", "\[Alpha]", " ", 
       RowBox[{
        SuperscriptBox["\[Nu]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}]}], 
     RowBox[{"8", " ", 
      RowBox[{"r", "[", "rs", "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8195979396513147`*^9, 3.8195979472170873`*^9}, 
   3.819597989035618*^9, 3.8195980197979355`*^9, {3.8195980639451036`*^9, 
   3.819598107550228*^9}, 3.8195981872799263`*^9, {3.8195982276062*^9, 
   3.819598251799633*^9}, {3.8195989243097024`*^9, 3.8195989455441694`*^9}, {
   3.819605307933508*^9, 3.819605356074437*^9}, {3.8196053970504446`*^9, 
   3.819605412678954*^9}, 3.8196145939735665`*^9, 3.8196896855789757`*^9, 
   3.8199397615688334`*^9, 3.8199404230854597`*^9, 3.819943255796587*^9, 
   3.819943319359148*^9, 3.8199514960080414`*^9, 3.819954671232766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rootpertama", "\[Rule]", " ", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "\[Alpha]"]}], "2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", "rs", "]"}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
          "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
              "\[Alpha]", " ", "\[Kappa]"}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
              "\[Kappa]", " ", "\[Rho]0"}], "+", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
            ")"}]}]}]]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rootkedua", "\[Rule]", " ", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "\[Alpha]"], "2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"r", "[", "rs", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
          "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
              "\[Alpha]", " ", "\[Kappa]"}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
              "\[Kappa]", " ", "\[Rho]0"}], "+", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
            ")"}]}]}]]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "//", 
  "Simplify"}]}], "Input"],

Cell[BoxData[
 RowBox[{"rootpertama", "\[Rule]", 
  InterpretationBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "[", "rs", "]"}], " ", 
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["r", "\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}], "2"]}]]}], ")"}]}], 
      "\[Alpha]"]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]]}], " ", "p0", " ", 
          "\[Kappa]"}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
          "\[Rho]0"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}], "2"]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]]}], " ", "p0", " ", 
             "\[Kappa]"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
             "\[Rho]0"}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"r", "[", "rs", "]"}], "2"]}], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}], "2"], 
      " ", "\[Alpha]"}], 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"r", "[", "rs", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "4"]}]], "+", 
    InterpretationBox[
     SuperscriptBox[
      RowBox[{"O", "[", "\[Alpha]", "]"}], "2"],
     SeriesData[$CellContext`\[Alpha], 0, {}, -1, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`\[Alpha], 
    0, {(-2) ($CellContext`r[$CellContext`rs] 
       Derivative[
        1][$CellContext`r][$CellContext`rs] + \
($CellContext`r[$CellContext`rs]^2 
        Derivative[1][$CellContext`r][$CellContext`rs]^2)^
       Rational[1, 2]), ($CellContext`r[$CellContext`rs]^2 
       Derivative[1][$CellContext`r][$CellContext`rs]^2)^
      Rational[-1, 2] (-
       E^$CellContext`\[Nu][$CellContext`rs] + (-
         E^(Rational[
            1, 2] $CellContext`\[Nu][$CellContext`rs]) $CellContext`p0 \
$CellContext`\[Kappa] + 
        E^$CellContext`\[Nu][$CellContext`rs] $CellContext`\[Kappa] \
$CellContext`\[Rho]0) $CellContext`r[$CellContext`rs]^2 + 
      Derivative[1][$CellContext`r][$CellContext`rs]^2), 
     Rational[1, 4] $CellContext`r[$CellContext`rs]^(-4) 
     Derivative[
       1][$CellContext`r][$CellContext`rs]^(-4) \
($CellContext`r[$CellContext`rs]^2 
       Derivative[1][$CellContext`r][$CellContext`rs]^2)^
      Rational[1, 2] (-
        E^$CellContext`\[Nu][$CellContext`rs] + (-
          E^(Rational[
             1, 2] $CellContext`\[Nu][$CellContext`rs]) $CellContext`p0 \
$CellContext`\[Kappa] + 
         E^$CellContext`\[Nu][$CellContext`rs] $CellContext`\[Kappa] \
$CellContext`\[Rho]0) $CellContext`r[$CellContext`rs]^2 + 
       Derivative[1][$CellContext`r][$CellContext`rs]^2)^2}, -1, 2, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8196054187414927`*^9, 3.819614594529151*^9, 
  3.8196896860168037`*^9, 3.8199397623234277`*^9, 3.8199404240040216`*^9, 
  3.8199432563571243`*^9, 3.819943319913391*^9, 3.8199514967367043`*^9, 
  3.8199546717274914`*^9}],

Cell[BoxData[
 RowBox[{"rootkedua", "\[Rule]", 
  InterpretationBox[
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"r", "[", "rs", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}]}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}], "2"]}]]}], ")"}]}], 
     "\[Alpha]"], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
          "\[Kappa]"}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
          "\[Rho]0"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}], "2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]]}], " ", "p0", " ", 
               "\[Kappa]"}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
               "\[Rho]0"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"r", "[", "rs", "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["r", "\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}], 
         "2"]}], ")"}], " ", "\[Alpha]"}], 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "rs", "]"}], "4"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}], "4"]}], ")"}]}]], "+", 
    InterpretationBox[
     SuperscriptBox[
      RowBox[{"O", "[", "\[Alpha]", "]"}], "2"],
     SeriesData[$CellContext`\[Alpha], 0, {}, -1, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`\[Alpha], 0, {
    2 (-$CellContext`r[$CellContext`rs] 
       Derivative[
        1][$CellContext`r][$CellContext`rs] + \
($CellContext`r[$CellContext`rs]^2 
        Derivative[1][$CellContext`r][$CellContext`rs]^2)^
       Rational[1, 2]), ($CellContext`r[$CellContext`rs]^2 
       Derivative[1][$CellContext`r][$CellContext`rs]^2)^Rational[-1, 2] (
      E^$CellContext`\[Nu][$CellContext`rs] + (
        E^(Rational[
            1, 2] $CellContext`\[Nu][$CellContext`rs]) $CellContext`p0 \
$CellContext`\[Kappa] - 
        E^$CellContext`\[Nu][$CellContext`rs] $CellContext`\[Kappa] \
$CellContext`\[Rho]0) $CellContext`r[$CellContext`rs]^2 - 
      Derivative[1][$CellContext`r][$CellContext`rs]^2), 
     Rational[-1, 4] $CellContext`r[$CellContext`rs]^(-4) 
     Derivative[
       1][$CellContext`r][$CellContext`rs]^(-4) \
($CellContext`r[$CellContext`rs]^2 
       Derivative[1][$CellContext`r][$CellContext`rs]^2)^
      Rational[1, 2] (-
        E^$CellContext`\[Nu][$CellContext`rs] + (-
          E^(Rational[
             1, 2] $CellContext`\[Nu][$CellContext`rs]) $CellContext`p0 \
$CellContext`\[Kappa] + 
         E^$CellContext`\[Nu][$CellContext`rs] $CellContext`\[Kappa] \
$CellContext`\[Rho]0) $CellContext`r[$CellContext`rs]^2 + 
       Derivative[1][$CellContext`r][$CellContext`rs]^2)^2}, -1, 2, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8196054187414927`*^9, 3.819614594529151*^9, 
  3.8196896860168037`*^9, 3.8199397623234277`*^9, 3.8199404240040216`*^9, 
  3.8199432563571243`*^9, 3.819943319913391*^9, 3.8199514967367043`*^9, 
  3.819954671849169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jadi pers geraknya yg bisa ditulis eksplisit adalah", "Subsection",
 CellChangeTimes->{{3.819599008979782*^9, 3.8195990246140304`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pers1", ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Nu]", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", " ", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], "2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"r", "[", "rs", "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["r", "\[Prime]",
               MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
         "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              FractionBox[
               RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
             "\[Alpha]", " ", "\[Kappa]"}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
             "\[Kappa]", " ", "\[Rho]0"}], "+", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["r", "\[Prime]",
               MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
           ")"}]}]}]]}], ")"}]}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Persamaan", " ", "differensial", " ", "metrik"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"pers2", ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["r", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8", " ", 
      RowBox[{"r", "[", "rs", "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"], " ", "\[Rho]0"}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"r", "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Nu]", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}], "+", 
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Nu]", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}], "-", 
      RowBox[{"4", " ", "\[Alpha]", " ", 
       RowBox[{
        SuperscriptBox["\[Nu]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}], 
    RowBox[{"(*", 
     RowBox[{"Persamaan", " ", "differensial", " ", "radius"}], 
     "*)"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.819599044460258*^9, 3.8195990684403734`*^9}, {
   3.819599099132464*^9, 3.8195991112745614`*^9}, 3.8196053014544897`*^9, 
   3.819605441980394*^9, {3.819605504203198*^9, 3.8196055053675137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pers2", "/.", 
   RowBox[{"{", 
    RowBox[{"pers1", ",", 
     RowBox[{"D", "[", 
      RowBox[{"pers1", ",", "rs"}], "]"}]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.819599074462921*^9, 3.8195990798422155`*^9}, {
  3.819599121971274*^9, 3.8195991728975945`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["r", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     RowBox[{"r", "[", "rs", "]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0", 
      " ", 
      SuperscriptBox[
       RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"r", "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"r", "[", "rs", "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
           "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
               "\[Alpha]", " ", "\[Kappa]"}], "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
               "\[Kappa]", " ", "\[Rho]0"}], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
             ")"}]}]}]]}], ")"}]}], "\[Alpha]"], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"r", "[", "rs", "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["r", "\[Prime]",
                  MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}],
             "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 FractionBox[
                  RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                "\[Alpha]", " ", "\[Kappa]"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                "\[Kappa]", " ", "\[Rho]0"}], "+", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["r", "\[Prime]",
                  MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
              ")"}]}]}]]}], ")"}], "2"]}], "\[Alpha]"], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"r", "[", "rs", "]"}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"r", "[", "rs", "]"}], " ", 
            RowBox[{
             SuperscriptBox["r", "\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                FractionBox[
                 RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
               "\[Alpha]", " ", "\[Kappa]"}], "-", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
               "\[Kappa]", " ", "\[Rho]0"}], "+", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
           "+", 
           RowBox[{"2", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", 
               RowBox[{
                SuperscriptBox["\[Nu]", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], " ", 
               RowBox[{
                SuperscriptBox["r", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                  "\[Alpha]", " ", "\[Kappa]"}], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                  "\[Kappa]", " ", "\[Rho]0"}]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["\[Nu]", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}]}], "+", 
              RowBox[{"4", " ", 
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], " ", 
               RowBox[{
                SuperscriptBox["r", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["r", "\[Prime]",
                   MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
               ")"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                 "\[Alpha]", " ", "\[Kappa]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                 "\[Kappa]", " ", "\[Rho]0"}], "+", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["r", "\[Prime]",
                   MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
               ")"}]}]}]]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8195990805325923`*^9, {3.819599115072156*^9, 3.8195991744843826`*^9}, 
   3.819605519822111*^9, 3.8196145957983675`*^9, 3.819689687168234*^9, 
   3.819939764269637*^9, 3.8199404255799704`*^9, 3.8199432576358304`*^9, 
   3.819943321212778*^9, 3.819951498126954*^9, 3.8199546730874124`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["r", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], "==", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        RowBox[{"r", "[", "rs", "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0",
          " ", 
         SuperscriptBox[
          RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
        FractionBox[
         RowBox[{"8", " ", 
          RowBox[{"r", "[", "rs", "]"}], " ", 
          RowBox[{
           SuperscriptBox["r", "\[Prime]",
            MultilineFunction->None], "[", "rs", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"r", "[", "rs", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["r", "\[Prime]",
               MultilineFunction->None], "[", "rs", "]"}]}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                  "\[Alpha]", " ", "\[Kappa]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                  "\[Kappa]", " ", "\[Rho]0"}], "+", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}]}]]}], ")"}]}], "\[Alpha]"], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"r", "[", "rs", "]"}]}], " ", 
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}]}], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"\[Alpha]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                  SuperscriptBox[
                   RowBox[{
                    SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                 ")"}]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                   "\[Alpha]", " ", "\[Kappa]"}], "-", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                   "\[Kappa]", " ", "\[Rho]0"}], "+", 
                  SuperscriptBox[
                   RowBox[{
                    SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                 ")"}]}]}]]}], ")"}], "2"]}], "\[Alpha]"], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["r", "\[Prime]",
               MultilineFunction->None], "[", "rs", "]"}], "2"]}], "-", 
           RowBox[{
            RowBox[{"r", "[", "rs", "]"}], " ", 
            RowBox[{
             SuperscriptBox["r", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"r", "[", "rs", "]"}], " ", 
               RowBox[{
                SuperscriptBox["r", "\[Prime]",
                 MultilineFunction->None], "[", "rs", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                  "\[Alpha]", " ", "\[Kappa]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                  "\[Kappa]", " ", "\[Rho]0"}], "+", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}], "+", 
              RowBox[{"2", " ", "\[Alpha]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", 
                  RowBox[{
                   SuperscriptBox["\[Nu]", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], " ", 
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}], 
              "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                    "\[Alpha]", " ", "\[Kappa]"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                    "\[Kappa]", " ", "\[Rho]0"}]}], ")"}], " ", 
                  RowBox[{
                   SuperscriptBox["\[Nu]", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}]}], "+", 
                 RowBox[{"4", " ", 
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], " ", 
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}]}],
              ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"4", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                  ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                    "\[Alpha]", " ", "\[Kappa]"}], "-", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                    "\[Kappa]", " ", "\[Rho]0"}], "+", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                  ")"}]}]}]]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     SuperscriptBox["r", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.8200325322538757`*^9, 3.8200325589706326`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["r", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "-", 
         SuperscriptBox[
          RowBox[{"r", "[", "rs", "]"}], "2"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"r", "[", "rs", "]"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
           "\[Alpha]", " ", "\[Kappa]"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
           "\[Kappa]", " ", "\[Rho]0"}], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["r", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["r", "\[Prime]",
                   MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
               ")"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                 "\[Alpha]", " ", "\[Kappa]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                 "\[Kappa]", " ", "\[Rho]0"}], "+", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["r", "\[Prime]",
                   MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
               ")"}]}]}]]}], "-", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{
            SuperscriptBox["\[Nu]", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "p0"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "\[Rho]0"}]}], 
         ")"}], " ", 
        SuperscriptBox[
         RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["r", "\[Prime]",
                   MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
               ")"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  FractionBox[
                   RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                 "\[Alpha]", " ", "\[Kappa]"}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                 "\[Kappa]", " ", "\[Rho]0"}], "+", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["r", "\[Prime]",
                   MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
               ")"}]}]}]]}], "-", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{
            SuperscriptBox["\[Nu]", "\[Prime]",
             MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.820032559905136*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Membandingkan dengan persaman TOV GR", "Subsection",
 CellChangeTimes->{{3.8199399329176364`*^9, 3.819939942089511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"pers\[Nu]", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
       "\[Kappa]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
       "\[Rho]0"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"r", "[", "rs", "]"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["r", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"r", "[", "rs", "]"}], " ", 
    RowBox[{
     SuperscriptBox["r", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Nu]", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}]}], "+", 
   RowBox[{"0", "\[Alpha]", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}], 
     "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"persr", ":=", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Nu]", "[", "rs", "]"}]]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0", 
     " ", 
     SuperscriptBox[
      RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["r", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
    RowBox[{"0", "\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Nu]", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}], "2"]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"r", "[", "rs", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Nu]", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}], "-", 
    RowBox[{"4", " ", "0", " ", "\[Alpha]", " ", 
     RowBox[{
      SuperscriptBox["\[Nu]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "rs", "]"}]}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Rho]0", "[", "rs_", "]"}], "=", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["0.", "\[Kappa]"], ",", 
           RowBox[{"rs", ">", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["25.", "\[Kappa]"], ",", 
           RowBox[{"rs", "\[LessEqual]", "y"}]}], "}"}]}], "}"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"y", "\[Rule]", 
        RowBox[{"-", "60."}]}], "}"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"pers\[Nu]", "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Nu]", "'"}], "[", "rs", "]"}]}], "]"}], "//", 
   "FullSimplify"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"persr", "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"r", "''"}], "[", "rs", "]"}]}], "]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.8199399572548337`*^9, 3.819939987236865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Nu]", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
          "\[Kappa]"}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
          "\[Rho]0"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"r", "[", "rs", "]"}], " ", 
      RowBox[{
       SuperscriptBox["r", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8199399885991344`*^9, 3.819940425882949*^9, 
  3.819943257875225*^9, 3.8199433214138126`*^9, 3.8199514983947678`*^9, 
  3.8199546733691697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["r", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0", 
       " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"r", "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Nu]", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"r", "[", "rs", "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8199399885991344`*^9, 3.819940425882949*^9, 
  3.819943257875225*^9, 3.8199433214138126`*^9, 3.8199514983947678`*^9, 
  3.8199546734958344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pers3", ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Nu]", "\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
          "\[Kappa]"}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
          "\[Rho]0"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"r", "[", "rs", "]"}], " ", 
      RowBox[{
       SuperscriptBox["r", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}]}]]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Persamaan", " ", "differensial", " ", "metrik"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pers4", ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["r", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", "\[Rho]0", 
       " ", 
       SuperscriptBox[
        RowBox[{"r", "[", "rs", "]"}], "2"]}], "-", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"r", "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["r", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Nu]", "\[Prime]",
         MultilineFunction->None], "[", "rs", "]"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"r", "[", "rs", "]"}]}]]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Persamaan", " ", "differensial", " ", "radius"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pers4", "/.", 
   RowBox[{"{", "pers3", "}"}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.819599044460258*^9, 3.8195990684403734`*^9}, {
   3.819599099132464*^9, 3.8195991112745614`*^9}, 3.8196053014544897`*^9, 
   3.819605441980394*^9, {3.819605504203198*^9, 3.8196055053675137`*^9}, {
   3.819940033147209*^9, 3.819940092736805*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["r", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "rs", "]"}], "\[Rule]", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
        "\[Kappa]"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Kappa]", " ", 
        "\[Rho]0"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"r", "[", "rs", "]"}], "2"]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}]}], 
   RowBox[{"2", " ", 
    RowBox[{"r", "[", "rs", "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.81994008636524*^9, 3.819940093231096*^9}, 
   3.81994042605404*^9, 3.8199432581015863`*^9, 3.8199433216361823`*^9, 
   3.8199514987189016`*^9, 3.819954673652991*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Backward calculation Ho-Matsuo", "Subsection",
 CellChangeTimes->{{3.8185728778223925`*^9, 3.8185728830864954`*^9}, {
  3.818575735831116*^9, 3.818575736548994*^9}, {3.8199401347772384`*^9, 
  3.8199401383612556`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pers1", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["\[Nu]", "\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "\[Alpha]"], "2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"r", "[", "rs", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
          "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
              "\[Alpha]", " ", "\[Kappa]"}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
              "\[Kappa]", " ", "\[Rho]0"}], "+", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["r", "\[Prime]",
                MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
            ")"}]}]}]]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Persamaan", " ", "differensial", " ", "metrik"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pers2", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["r", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "rs", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "-", 
          SuperscriptBox[
           RowBox[{"r", "[", "rs", "]"}], "2"]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["r", "\[Prime]",
          MultilineFunction->None], "[", "rs", "]"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"r", "[", "rs", "]"}], " ", 
         RowBox[{
          SuperscriptBox["r", "\[Prime]",
           MultilineFunction->None], "[", "rs", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
            "\[Alpha]", " ", "\[Kappa]"}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
            "\[Kappa]", " ", "\[Rho]0"}], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["r", "\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}], "2"]}], ")"}]}], 
        "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                  "\[Alpha]", " ", "\[Kappa]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                  "\[Kappa]", " ", "\[Rho]0"}], "+", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}]}]]}], "-", 
           RowBox[{"\[Alpha]", " ", 
            RowBox[{
             SuperscriptBox["\[Nu]", "\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "p0"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "\[Rho]0"}]}], 
          ")"}], " ", 
         SuperscriptBox[
          RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[Nu]", "[", "rs", "]"}]], "-", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"r", "[", "rs", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   FractionBox[
                    RowBox[{"\[Nu]", "[", "rs", "]"}], "2"]], " ", "p0", " ", 
                  "\[Alpha]", " ", "\[Kappa]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"\[Nu]", "[", "rs", "]"}]], " ", "\[Alpha]", " ", 
                  "\[Kappa]", " ", "\[Rho]0"}], "+", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["r", "\[Prime]",
                    MultilineFunction->None], "[", "rs", "]"}], "2"]}], 
                ")"}]}]}]]}], "-", 
           RowBox[{"\[Alpha]", " ", 
            RowBox[{
             SuperscriptBox["\[Nu]", "\[Prime]",
              MultilineFunction->None], "[", "rs", "]"}]}]}], ")"}]}]}], 
       ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Persamaan", " ", "differensial", " ", "radius"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6188152411846027`*^9, 3.618815387646455*^9}, {
   3.618815518306885*^9, 3.618815518447918*^9}, {3.618815996116453*^9, 
   3.618815996553217*^9}, {3.676515982690648*^9, 3.6765162506055145`*^9}, {
   3.6765162987003984`*^9, 3.67651631088402*^9}, {3.6765179619525366`*^9, 
   3.67651796760286*^9}, {3.676518161770539*^9, 3.676518243632221*^9}, {
   3.676518560085295*^9, 3.676518568324766*^9}, {3.6765186019006696`*^9, 
   3.6765186031357403`*^9}, {3.6765189517368603`*^9, 3.676518971547993*^9}, 
   3.676519355645135*^9, {3.676520312350812*^9, 3.67652034046942*^9}, {
   3.6765203756434107`*^9, 3.6765203993057632`*^9}, {3.676520483185561*^9, 
   3.676520488986893*^9}, {3.6765206567554893`*^9, 3.67652066131875*^9}, {
   3.676520742734187*^9, 3.67652076009618*^9}, {3.678420709285184*^9, 
   3.678420724935079*^9}, {3.6798889505256925`*^9, 3.679889058670878*^9}, {
   3.679889165060963*^9, 3.6798893108803034`*^9}, 3.679889572937292*^9, {
   3.679889605701166*^9, 3.6798896147116814`*^9}, {3.6798896549609838`*^9, 
   3.6798896611643386`*^9}, {3.679889698376467*^9, 3.679889823365616*^9}, {
   3.679889917004972*^9, 3.6798899692329593`*^9}, {3.6798900458503413`*^9, 
   3.679890079780282*^9}, {3.6798901472581415`*^9, 3.679890251094081*^9}, {
   3.6798902986197987`*^9, 3.679890460996086*^9}, {3.6798910081063795`*^9, 
   3.6798910170848927`*^9}, {3.6798911659654083`*^9, 
   3.6798911682255373`*^9}, {3.679891448213552*^9, 3.6798914589401655`*^9}, {
   3.67989169819785*^9, 3.6798917434334373`*^9}, {3.679892003399307*^9, 
   3.6798920673649654`*^9}, {3.6798921089803457`*^9, 
   3.6798921501677017`*^9}, {3.6798922181545897`*^9, 
   3.6798922297522535`*^9}, {3.6798922944129515`*^9, 
   3.6798922995702467`*^9}, {3.6798975176945868`*^9, 
   3.6798975249173994`*^9}, {3.6798977375301704`*^9, 3.679897795250271*^9}, {
   3.6798978256235237`*^9, 3.679897834359539*^9}, {3.679897906977666*^9, 
   3.6798979956638203`*^9}, {3.6798980455371075`*^9, 3.679898048313912*^9}, {
   3.6798987542967434`*^9, 3.6798987545931435`*^9}, 3.6798988046692305`*^9, {
   3.679901483238519*^9, 3.6799015482282324`*^9}, {3.6799015820646915`*^9, 
   3.6799015894747047`*^9}, {3.67990167273205*^9, 3.6799016863976736`*^9}, {
   3.67990193704331*^9, 3.6799019392585144`*^9}, {3.679902133541253*^9, 
   3.6799021407640657`*^9}, {3.679904869239098*^9, 3.6799048997683516`*^9}, {
   3.6803254759551883`*^9, 3.68032549981433*^9}, {3.680500001797659*^9, 
   3.680500138751877*^9}, {3.680500412044261*^9, 3.6805005112414207`*^9}, {
   3.6805005714295187`*^9, 3.6805008292009706`*^9}, {3.680500892918086*^9, 
   3.680500902704116*^9}, {3.6805009398961687`*^9, 3.6805010673123665`*^9}, {
   3.680501105904442*^9, 3.680501346121872*^9}, {3.6805014216059914`*^9, 
   3.6805014449200363`*^9}, {3.680503811518516*^9, 3.6805038414695683`*^9}, {
   3.681098934284997*^9, 3.681098943052088*^9}, {3.6810990022203307`*^9, 
   3.681099085138081*^9}, {3.6811043827028723`*^9, 3.681104394179944*^9}, {
   3.681163088444064*^9, 3.681163091957265*^9}, {3.6811654883329463`*^9, 
   3.6811654976259995`*^9}, {3.6815131856936607`*^9, 3.68151326205579*^9}, {
   3.6815136409123735`*^9, 3.681513651452388*^9}, {3.681513712156537*^9, 
   3.6815137467187924`*^9}, 3.6815141401224422`*^9, {3.681514237030901*^9, 
   3.6815142421959457`*^9}, {3.6815264209302826`*^9, 3.681526441643427*^9}, {
   3.6815549351291275`*^9, 3.68155510144664*^9}, {3.681555147266261*^9, 
   3.6815551519465284`*^9}, 3.68155522400965*^9, {3.681555281312928*^9, 
   3.6815553011090603`*^9}, {3.681555347350705*^9, 3.6815553817866745`*^9}, {
   3.681555797509453*^9, 3.681555835620632*^9}, {3.7662001638057013`*^9, 
   3.766200170999628*^9}, {3.766207983116074*^9, 3.7662079881813545`*^9}, {
   3.7662080797524652`*^9, 3.7662080808117313`*^9}, {3.819598439793068*^9, 
   3.8195984976879625`*^9}, {3.8195989584642887`*^9, 3.819598982909424*^9}, {
   3.819599251702099*^9, 3.819599275748514*^9}, {3.81959996776359*^9, 
   3.81959997250451*^9}, {3.8196002461722074`*^9, 3.819600284378295*^9}, {
   3.819603761512675*^9, 3.819603762201831*^9}, {3.819605479662697*^9, 
   3.819605494321657*^9}, 3.819605537142398*^9, 3.8200325813051753`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GS", "=", 
    RowBox[{"1.325", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "12"}]]}]}], ";", " ", 
   RowBox[{"MSS", "=", " ", 
    RowBox[{"1.1155", " ", "*", " ", 
     SuperscriptBox["10", "15"]}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.8196104322392483`*^9, 3.8196104350423183`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "60."}], "\[Equal]", 
    RowBox[{"x", "+", 
     RowBox[{"10.", 
      RowBox[{"Log", "[", 
       RowBox[{
        FractionBox["x", "10."], "-", "1."}], "]"}]}]}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8199486816480026`*^9, 3.8199487168219748`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8199487180662117`*^9, 3.819951498962251*^9, 
  3.8199515741729665`*^9, 3.8199546738943787`*^9, 3.820032590097847*^9, 
  3.826949043436713*^9, 3.8269539301375265`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "10.009110515723789`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.819948718153943*^9, 3.8199514991178727`*^9, 
  3.8199515743285522`*^9, 3.8199546740091143`*^9, 3.8200325901237416`*^9, 
  3.82694904347412*^9, 3.8269539301824074`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]", " ", "=", 
   RowBox[{"8", "\[Pi]", " ", "GS"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a0", ":=", "10."}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]00", ":=", 
   RowBox[{"18.076", "*", 
    SuperscriptBox["10", "0"]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{"R", ":=", 
  RowBox[{"10.", "/", "0.9999999999728"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rn", "=", 
   RowBox[{"-", "20000000"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rs0", "=", 
   RowBox[{"R", "+", 
    RowBox[{"a0", " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox["R", "a0"], "-", "1"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]0", "=", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     FractionBox["a0", "R"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   FractionBox["\[Rho]00", "\[Kappa]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{
    FractionBox["\[Rho]00", "\[Kappa]"], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"\[Nu]0", "/", "2."}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pers1", "\[Equal]", "0"}], ",", 
      RowBox[{"pers2", "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Nu]", "[", "rs0", "]"}], "\[Equal]", "\[Nu]0"}], ",", 
      RowBox[{
       RowBox[{"r", "[", "rs0", "]"}], "\[Equal]", "R"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "'"}], "[", "rs0", "]"}], "\[Equal]", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["a0", "R"]}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Nu]", ",", "r"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"rs", ",", "rs0", ",", "rn"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]o", "[", "rs_", "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"\[Nu]", "[", "rs", "]"}], "/.", "s"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ro", "[", "rs_", "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"r", "[", "rs", "]"}], "/.", "s"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Po", "[", "rs_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "\[Rho]0"}], " ", "+", 
    RowBox[{"p0", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Nu]o", "[", "rs", "]"}]}], "/", "2"}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", "=", "rn"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Po", "[", "rs", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "xx", ",", "rs0"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<P\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"\[Nu]o", "[", "rs", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "xx", ",", "rs0"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(e\), \(\[Nu]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"ro", "[", "rs", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"rs", ",", "xx", ",", "rs0"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<r\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ro", "[", "rn", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Po", "[", "rn", "]"}]}], "Input",
 CellChangeTimes->{
  3.8196000661062555`*^9, {3.819600182017686*^9, 3.819600218558123*^9}, {
   3.819600539484494*^9, 3.819600543251277*^9}, {3.8196006036860404`*^9, 
   3.8196006043167095`*^9}, {3.8196009387478685`*^9, 
   3.8196009853221416`*^9}, {3.819601034305726*^9, 3.8196010347767572`*^9}, 
   3.8196023526349*^9, {3.8196028081181407`*^9, 3.819602810855534*^9}, {
   3.8196028785056696`*^9, 3.819602901817107*^9}, {3.819602936012368*^9, 
   3.8196030173200197`*^9}, {3.8196030794214883`*^9, 
   3.8196030798920207`*^9}, {3.8196033658354225`*^9, 3.819603381308672*^9}, 
   3.8196034124091325`*^9, {3.8196036866683245`*^9, 3.8196037127943387`*^9}, {
   3.819603753660741*^9, 3.819603861750885*^9}, {3.819603894185177*^9, 
   3.819603905350355*^9}, {3.819604149354998*^9, 3.8196041636282687`*^9}, {
   3.8196042206598854`*^9, 3.8196042485677695`*^9}, {3.8196055430917397`*^9, 
   3.819605546105903*^9}, {3.8196055922089653`*^9, 3.819605626731885*^9}, {
   3.81960710640801*^9, 3.819607133362749*^9}, {3.819607163715796*^9, 
   3.8196071678860583`*^9}, {3.8196072908657*^9, 3.8196073371878505`*^9}, {
   3.8196075051875095`*^9, 3.8196075401823826`*^9}, {3.819607577359539*^9, 
   3.819607621378767*^9}, {3.819610320492747*^9, 3.819610359034463*^9}, {
   3.819610867920559*^9, 3.81961095165374*^9}, {3.8196109873891983`*^9, 
   3.819611212329981*^9}, {3.819611276610508*^9, 3.8196112792437997`*^9}, {
   3.8196114296376495`*^9, 3.8196115330446043`*^9}, {3.819613902117654*^9, 
   3.8196139222916107`*^9}, {3.819614488926916*^9, 3.819614561392481*^9}, {
   3.8199432503072367`*^9, 3.8199432518438435`*^9}, {3.8199433024102798`*^9, 
   3.819943309163018*^9}, 3.819948728570704*^9, {3.819948764515224*^9, 
   3.819948766788138*^9}, {3.819948796950981*^9, 3.8199489641827974`*^9}, {
   3.819949021721629*^9, 3.8199490418746667`*^9}, {3.819951100721383*^9, 
   3.8199512499807053`*^9}, {3.8199512840859203`*^9, 
   3.8199513282346272`*^9}, {3.8199513971406546`*^9, 3.819951408418233*^9}, {
   3.819951580145011*^9, 3.8199516683938255`*^9}, {3.8199516989298496`*^9, 
   3.8199522750273857`*^9}, {3.819952317019247*^9, 3.819952397629362*^9}, {
   3.819952445900113*^9, 3.8199525972139206`*^9}, {3.819952643591488*^9, 
   3.819952706361499*^9}, {3.819952738546051*^9, 3.8199527794229927`*^9}, {
   3.819952811809486*^9, 3.819953070598136*^9}, {3.8199531354895124`*^9, 
   3.819953542462285*^9}, {3.82694900650861*^9, 3.8269490135919847`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Nu]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAqIqT+s8Sc8Fg1KyHstBGwHSJygY3
w3LBTz6LAl7PRsANs0IT7Gxywbp0RqsgzUbAuSfKDVkccsEZ91wvYcpGwAsy
HKdazXHBcq/SqCHHRsAqZ69Aqndxwa0PqcEJw0bAXOdRyLEnccEDMHzlt75G
wFqSNVAH0XDBR7sExIW5RsD/0uN28XtwwSwk3oXss0bAt16hi5MscMG48wjN
Ra5GwHYqQEEHrW/BHCmdcbCnRsCkLVxHVwxvwVsEUq8foUbAH1wNi9BubsE9
7+2mTJpGwDPgQM/lw23Bs8igtXaSRsBt+pLvaiRtwdniWKa/ikbAQGpnEIx3
bMGLtcvb8YFGwF8F0W7WzWvBdUYcUtp4RsCkNlmpkC9rwQYDQvL3b0bAgr1j
5OaDasHsmmFr4mVGwIbajPus42nBlMVwTgtcRsAkTTgTDzZpwZr46bDnUEbA
Dut4aJqLaMEayraKeUVGwB4f2JmV7GfB1RK/oFs6RsDHqLnLLEBnwXfSaIjL
LUbAlsi52TOfZsHn/RQbkiFGwLITTyVkAWbBQfa+GBsVRsBntGZxMFZlwf5x
Ii8GB0bAQuucmWy2ZMG3dLAYVvlFwLZ3VcJECWTBWiA9nuDpRcB2L6MoRl9j
wedb1ssJ2kXAXH0Pa7fAYsH+SbdepMpFwNsg/q3EFGLBdwfjejq5RcCAWgvN
QXRhweI927BCqEXAcr+tKejWYMHtEiv/6pZFwP150oYqLGDB5CM7EkGDRcBd
lSuAuRlfwVwVgFMPcEXA8uG281XAXcHVoQQxQlpFwNNafx/SfVzBRPCZMuVE
RcBNKnLGoEFbwZR7IjPuLkXA+aRpbqfqWcE/sDQb3RVFwPFLns6NqljBLJgu
IDL9RMAcntcvrE9XwQUIW67v4ETA4EY7DB37VcE6xgquesNEwO8b3KBtvVTB
paoyq0umRMAxnIE29mRTwU6GbDuQhETAv0hkhF4jUsEjjjAu22JEwOZLcU0Z
6FDBtZVDXnI/RMB99AUvGCRPwYq2g4b7FUTAxqmjM72lTMEEg0i/9utDwHS1
SjrS8UnBJKTTcR66Q8BTbkY3jEpHwawNjHvwg0PAyn+8pAXRRMFATh21p0tD
wKbnOxTvIULB6guoW7UGQ8A0UGvoL0E/wXEnJ6/DvELA5n1xrGHTOcGY//Ee
d15CwPsFIV3dfjTBZT9HUUftQcB/fordrwsvwZbuqpQbZ0HAm0r4CGVDJMGd
0C4+Z55AwC3ynuwvZBTBgsWlXCbePsBoIrk60j4UwelIpkko0j7AvznlEA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -47.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{-2.*^7, -233.2780340678693}, \
{-45.63044830264039, -30.820927241417767`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAqIqT+s8Sc8Fg1KyHstBGwHSJygY3
w3LBTz6LAl7PRsANs0IT7Gxywbp0RqsgzUbAuSfKDVkccsEZ91wvYcpGwAsy
HKdazXHBcq/SqCHHRsAqZ69Aqndxwa0PqcEJw0bAXOdRyLEnccEDMHzlt75G
wFqSNVAH0XDBR7sExIW5RsD/0uN28XtwwSwk3oXss0bAt16hi5MscMG48wjN
Ra5GwHYqQEEHrW/BHCmdcbCnRsCkLVxHVwxvwVsEUq8foUbAH1wNi9BubsE9
7+2mTJpGwDPgQM/lw23Bs8igtXaSRsBt+pLvaiRtwdniWKa/ikbAQGpnEIx3
bMGLtcvb8YFGwF8F0W7WzWvBdUYcUtp4RsCkNlmpkC9rwQYDQvL3b0bAgr1j
5OaDasHsmmFr4mVGwIbajPus42nBlMVwTgtcRsAkTTgTDzZpwZr46bDnUEbA
Dut4aJqLaMEayraKeUVGwB4f2JmV7GfB1RK/oFs6RsDHqLnLLEBnwXfSaIjL
LUbAlsi52TOfZsHn/RQbkiFGwLITTyVkAWbBQfa+GBsVRsBntGZxMFZlwf5x
Ii8GB0bAQuucmWy2ZMG3dLAYVvlFwLZ3VcJECWTBWiA9nuDpRcB2L6MoRl9j
wedb1ssJ2kXAXH0Pa7fAYsH+SbdepMpFwNsg/q3EFGLBdwfjejq5RcCAWgvN
QXRhweI927BCqEXAcr+tKejWYMHtEiv/6pZFwP150oYqLGDB5CM7EkGDRcBd
lSuAuRlfwVwVgFMPcEXA8uG281XAXcHVoQQxQlpFwNNafx/SfVzBRPCZMuVE
RcBNKnLGoEFbwZR7IjPuLkXA+aRpbqfqWcE/sDQb3RVFwPFLns6NqljBLJgu
IDL9RMAcntcvrE9XwQUIW67v4ETA4EY7DB37VcE6xgquesNEwO8b3KBtvVTB
paoyq0umRMAxnIE29mRTwU6GbDuQhETAv0hkhF4jUsEjjjAu22JEwOZLcU0Z
6FDBtZVDXnI/RMB99AUvGCRPwYq2g4b7FUTAxqmjM72lTMEEg0i/9utDwHS1
SjrS8UnBJKTTcR66Q8BTbkY3jEpHwawNjHvwg0PAyn+8pAXRRMFATh21p0tD
wKbnOxTvIULB6guoW7UGQ8A0UGvoL0E/wXEnJ6/DvELA5n1xrGHTOcGY//Ee
d15CwPsFIV3dfjTBZT9HUUftQcB/fordrwsvwZbuqpQbZ0HAm0r4CGVDJMGd
0C4+Z55AwC3ynuwvZBTBgsWlXCbePsBoIrk60j4UwelIpkko0j7AvznlEA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -47.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> N\
one}, PlotRange -> {{-2.*^7, -233.2780340678693}, {-45.63044830264039, \
-30.820927241417767`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                              7\nInterpolatingFunction[{{-2. 10 , \
-233.278}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"r", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAqIqT+s8Sc8F+JxsD+D7UP3SJygY3
w3LBisheEf3d1D8Ns0IT7GxywQFzeVBBgdU/uSfKDVkccsESZkM56xLWPwsy
HKdazXHBIFBAAaGc1j8qZ69AqndxwYxjwKZoLdc/XOdRyLEnccE36ETBC7HX
P1qSNVAH0XDBI6+xeLI82D//0uN28XtwwXXvfrVvw9g/t16hi5MscMETEzpH
iT/ZP3YqQEEHrW/BbyZmYOTE2T+kLVxHVwxvwfnH20muQNo/H1wNi9BubsGZ
hBHUv7naPzPgQM/lw23Bx0AWVTA92z9t+pLvaiRtwZZY/E9EuNs/QGpnEIx3
bMECuMj7iz7cP18F0W7WzWvB3p2l46TD3D+kNlmpkC9rwcKK79FCQd0/gr1j
5OaDasGlUVVehcvdP4bajPus42nBI7R/wNRO3j8kTTgTDzZpwcNQwPUC4N4/
Dut4aJqLaME76A2873HfPx4f2JmV7GfBSJ50BYf93z/HqLnLLEBnwRuTNGSS
TOA/lsi52TOfZsGGbNWxeJfgP7ITTyVkAWbBnf3uJkPj4D9ntGZxMFZlwZQd
dstuOOE/QuucmWy2ZMFADocf/orhP7Z3VcJECWTBYeMh6jbo4T92L6MoRl9j
wfV5yP7zR+I/XH0Pa7fAYsH3LtlHcqXiP9sg/q3EFGLBUk4trO8P4z+AWgvN
QXRhwWJs7/WseOM/cr+tKejWYMG6sLiS7OTjP/150oYqLGDBsupq9Fph5D9d
lSuAuRlfwSENKnbG3OQ/8uG281XAXcGgALawkWvlP9Nafx/SfVzBI/t6knH6
5T9NKnLGoEFbwS7zK1OkkOY/+aRpbqfqWcGti/6rc0DnP/FLns6NqljBjOcv
P13y5z8cntcvrE9XwV3613uPxOg/4EY7DB37VcFhyF4TYqfpP+8b3KBtvVTB
L0pUNFqQ6j8xnIE29mRTwZj7QZh8qOs/v0hkhF4jUsGe59NhuszsP+ZLcU0Z
6FDB2gY3O8UN7j999AUvGCRPwX2vYtIame8/xqmjM72lTME5QGfDMqDwP3S1
SjrS8UnBDhBnMw6r8T9TbkY3jEpHwcWFDMHw4fI/yn+8pAXRRMH/Ye1Lnz30
P6bnOxTvIULB6FV2WbkM9j80UGvoL0E/wRyMtY0UL/g/5n1xrGHTOcFW8D4U
gjr7P/sFIV3dfjTBZrRR5wts/z+1NUYhfDkywT886QACDAFABlrT1g==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.1}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{-2.*^7, -233.2780340678693}, {
                    0.31634331038787156`, 2.1308631964853073`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAqIqT+s8Sc8F+JxsD+D7UP3SJygY3
w3LBisheEf3d1D8Ns0IT7GxywQFzeVBBgdU/uSfKDVkccsESZkM56xLWPwsy
HKdazXHBIFBAAaGc1j8qZ69AqndxwYxjwKZoLdc/XOdRyLEnccE36ETBC7HX
P1qSNVAH0XDBI6+xeLI82D//0uN28XtwwXXvfrVvw9g/t16hi5MscMETEzpH
iT/ZP3YqQEEHrW/BbyZmYOTE2T+kLVxHVwxvwfnH20muQNo/H1wNi9BubsGZ
hBHUv7naPzPgQM/lw23Bx0AWVTA92z9t+pLvaiRtwZZY/E9EuNs/QGpnEIx3
bMECuMj7iz7cP18F0W7WzWvB3p2l46TD3D+kNlmpkC9rwcKK79FCQd0/gr1j
5OaDasGlUVVehcvdP4bajPus42nBI7R/wNRO3j8kTTgTDzZpwcNQwPUC4N4/
Dut4aJqLaME76A2873HfPx4f2JmV7GfBSJ50BYf93z/HqLnLLEBnwRuTNGSS
TOA/lsi52TOfZsGGbNWxeJfgP7ITTyVkAWbBnf3uJkPj4D9ntGZxMFZlwZQd
dstuOOE/QuucmWy2ZMFADocf/orhP7Z3VcJECWTBYeMh6jbo4T92L6MoRl9j
wfV5yP7zR+I/XH0Pa7fAYsH3LtlHcqXiP9sg/q3EFGLBUk4trO8P4z+AWgvN
QXRhwWJs7/WseOM/cr+tKejWYMG6sLiS7OTjP/150oYqLGDBsupq9Fph5D9d
lSuAuRlfwSENKnbG3OQ/8uG281XAXcGgALawkWvlP9Nafx/SfVzBI/t6knH6
5T9NKnLGoEFbwS7zK1OkkOY/+aRpbqfqWcGti/6rc0DnP/FLns6NqljBjOcv
P13y5z8cntcvrE9XwV3613uPxOg/4EY7DB37VcFhyF4TYqfpP+8b3KBtvVTB
L0pUNFqQ6j8xnIE29mRTwZj7QZh8qOs/v0hkhF4jUsGe59NhuszsP+ZLcU0Z
6FDB2gY3O8UN7j999AUvGCRPwX2vYtIame8/xqmjM72lTME5QGfDMqDwP3S1
SjrS8UnBDhBnMw6r8T9TbkY3jEpHwcWFDMHw4fI/yn+8pAXRRMH/Ye1Lnz30
P6bnOxTvIULB6FV2WbkM9j80UGvoL0E/wRyMtY0UL/g/5n1xrGHTOcFW8D4U
gjr7P/sFIV3dfjTBZrRR5wts/z+1NUYhfDkywT886QACDAFABlrT1g==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.1}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{-2.*^7, -233.2780340678693}, {
                    0.31634331038787156`, 2.1308631964853073`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                              7\nInterpolatingFunction[{{-2. 10 , \
-233.278}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8196009861761627`*^9, 3.819601035605873*^9, 3.819601079241997*^9, 
   3.819602398709695*^9, 3.819602822568759*^9, {3.819602879435936*^9, 
   3.81960290263552*^9}, {3.8196029394963017`*^9, 3.8196030180010123`*^9}, 
   3.819603080605582*^9, {3.819603366715105*^9, 3.8196034135252495`*^9}, {
   3.819603687859588*^9, 3.8196037135576134`*^9}, {3.8196037667787457`*^9, 
   3.8196038623912034`*^9}, {3.819603895296897*^9, 3.81960390600261*^9}, 
   3.8196041643506403`*^9, 3.8196042212424364`*^9, 3.8196044494655886`*^9, 
   3.8196055474875045`*^9, {3.81960559456889*^9, 3.8196056276260357`*^9}, 
   3.819607018404158*^9, {3.819607107735076*^9, 3.819607134103179*^9}, 
   3.8196071686286163`*^9, {3.8196072925758505`*^9, 3.8196073379394426`*^9}, {
   3.8196075068209925`*^9, 3.8196075405770874`*^9}, {3.8196075781528254`*^9, 
   3.8196076221317453`*^9}, {3.819610329084736*^9, 3.8196103596255627`*^9}, {
   3.819610869899456*^9, 3.819610952261091*^9}, {3.8196109890928187`*^9, 
   3.819611213001111*^9}, 3.819611279817121*^9, {3.8196114310093136`*^9, 
   3.8196115336300383`*^9}, {3.8196139031699905`*^9, 3.819613922932641*^9}, {
   3.8196144899732065`*^9, 3.819614562066307*^9}, 3.819614595998414*^9, 
   3.8196896873726883`*^9, 3.819939764902182*^9, 3.8199404264713087`*^9, 
   3.8199432582791133`*^9, 3.8199433218197193`*^9, {3.8199487432467985`*^9, 
   3.819948767445608*^9}, {3.819948799103739*^9, 3.8199489647717943`*^9}, {
   3.819949023068206*^9, 3.819949042380265*^9}, {3.8199511321889143`*^9, 
   3.81995125056496*^9}, {3.8199512847241416`*^9, 3.8199513288184867`*^9}, {
   3.8199513977054987`*^9, 3.8199514092091084`*^9}, 3.8199514992983904`*^9, {
   3.819951581612563*^9, 3.819951669105211*^9}, {3.8199517085747576`*^9, 
   3.8199517237825327`*^9}, {3.81995175732333*^9, 3.819952275670162*^9}, {
   3.8199523176865363`*^9, 3.8199523983378167`*^9}, {3.8199524475153995`*^9, 
   3.8199525979000716`*^9}, {3.8199526446993637`*^9, 
   3.8199527070690756`*^9}, {3.8199527401411457`*^9, 
   3.8199527801021996`*^9}, {3.8199528148350363`*^9, 3.819953071287312*^9}, {
   3.8199531367839236`*^9, 3.8199535430746517`*^9}, 3.8199546742619777`*^9, 
   3.820032591535571*^9, 3.8269490449957347`*^9, 3.826953931327859*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVkGc81e8fxqWEo4xQZvYhv7KPTsi474gi4xw72SOrfFVWsiIlVFS0qVQS
ZTQI50OhnJxIyIqsEkJWFH//B9frer0fXA/el4zHERtvdjY2tler+X+/Vwn/
w9oUCndXfuxVP0THDjz+160EQqHb9EVAqwsdD484727mC4WxuHaeE6vMnmMQ
17IhFJ7U7a8rPUjHOoKc3J/Xh4IFLjSVdqbj/PnLIp2LBOTtJh49tadjauuZ
cqc/BPQGslT1VrnuacTBrnkCHmr67K2zo+Nvh13udM8QUK3Go9pmS8di3fJK
XycI8GU2rBmi0fE5RsnOwW8ENPC41lRb0rHIzftfvPoJ4OS4Naa1ynkRV6OG
vhKwJv1excMDdFyjEVU93E2A2qK8+XkLOl68h/b+aCNgPCybhvfTsf/ZZruJ
9wSkx5K+hZjQsZnNr+MLxQQcVy/R6NBd9fEt6XB4RsB5VtBroVVWPhmm+6qI
gOa6F62WOnRMylthiywg4MKNwDKg0jHzD9/5pfsElHcl2WVS6NgqRy13OYsA
8wlPgTmV1T8nQ5rWxRDAmEP6JdJ0bMqhre4dTcBtAb+aWik63iW2mPE2igDl
f1sWWrau+u+Jd0wKJ+AkdT5qXIKOu69eGuQkCEgsa2YTFKVjV4OSRZI3ARwK
eh3SAnTskzZDFthPQBrtWeIBNjpOsD8plGq2+mdoeJ7ZCg3fkV7Hzm1KgP3v
J5V4mYa7igV72IwJuCQq3qL1l4at2jUyJvUJKDJizyMt0LCOdMgKS4OA7q+W
lxJ/0TBv8Xh7mhgBv4JoRpU9NFz2eTh5w2gIOLlPudq/oOHX23YKXvgeAmmf
/qaLP6fhmugzNwVHQoDfy3ukt5SGPyooFYsNhsBlXSNez2IaHj1+uEupNwR+
M5lm7k9oeOvmsR3GLSHAkX9hiHKXhpPtplqiy0NAqa9RHKfRsHP7ksSvcyGg
rBBmxeVBw7enbg2BXAhkG75oNFuwwZu3qLqG1R6FkbCR6p/nbPB/thYbJZ2P
gtR3t1Ivkg1WuS7RRftxBMjXC92TEqyxf274Pw3lI6A+rqsutmKFBzsnk6ed
guF0yXEl38NWuGYbPhGWHQSt4dfaSp9ZYovxzvr3XYHQavJ942jaASz8LS1+
eWMgKMfuWMcyt8BG4xK35y0CoCZuc2aSuDnO31Yv3xztD3OSK1v/MvdhRudz
3ohnhyE5icXtEG+GdXJjnYan/YB9cVSFamGKp6/58GnJ+8GxYPHNjssmmDef
TN7r6Qt75N2Z+vXG2HeUPU/nkg8wc71XesP34KDb8uf+vvEGIfqVpUAtjNv9
pT8mcHhD1ZEHT4RJCJ/ypcb8pHhBnnJtoDHTEJ+LVL4gcswTsmSFB0xpBhiz
e3AIPfeAyJc9Vibk3XhXRdnArxF3GM/wam3+ooMzzg3IXVR0B/aGtvx3b6hY
OWXHh032brDwhbR97rI27maLLHsr5ArBdbrJ+YlaeIeIRebkFRcokjJKFSjQ
wAsXHYy7F5xB5+LS74MMNXyeKlJuc8IJLEMp2qeEVXBEg8e895IDkCgayUuD
yrivfGi9jps9HD0tsabzliLm75TozOqzhQesT9G/q+RxhfP5mJeGdJDf9Xdd
dqsMViE9/e7x2gZ2J4eaVWRvxUs5h8TyDaxhWKa/0nGNGE6gpuh5GVvCRvep
zJQjwjg3CRrPInP4kaIXHnVBAD/P9ltRWzGFas3yXNo1HnwyRuGNQKMxCFsc
4FvewoFbq/bxczUh+KAdyd90awUNbd44KQAI5G9+i7Q9toLmglks8VIE6Ob3
i3/MVpCoFD1d9RqCExHU2quzy+hQjAuvvQ8Cj8Y59e0HltGIwdENectG8Nz2
Tk7Zun9okXGZa4+qEfzq9nbcd2YRGSXBGjYZA5AJrv8T8W0WqUXEBTG5DKB+
KhcSYBZtDTT6kjWpD3cUvE/n3ZlFf63hqTpDH8pNEv5ou86il5Lg6umqD19z
PAoSemaQWhmjsu7mbugtmvuP2fsbSQ9WR6SK6cHcpoTDIjNTiK89ZsiRXQ/I
FzP8jdqm0PI7A2vyqC4kaJx2T3g5hbqLqpWqX+kCsUjStImeQllR1e2TDroQ
57Y/VJxrdS9YTaFf1YEb9+RXnGUn0bJR1ZSY0C5Iv9rcqPhpDMUPrFd2/0sF
N0FZeu2tMcSZaOnxYJAK8e+Z79L8xxB/Q1+LZhkVVi5fP1nGPoZkD6wtNbej
wtSLtZKI8hOZOJmeOJW1ExZk3dLt7/5A6UTLYr+ENkyeEWUduTuMhITENZU4
tEEvM8mR6/gwyirzDAgep0AHZQY+mgyj3IWZrsVKCngLiGlMjQ6h0lNbKgVd
KXBPmC/iKGUIdZw7GGOcowUV7hWLvp8GkPTd4bWPFDShDIxAW7MfMd/bmP3k
0YSexho1F85+FD5dlbZjWgMOVi/2VXT1oWajq6LFVRqQvy2CWzaxD8X37VWt
sNcAgQ26ZbJlX9GA5COnD2fVYTYkNWBOqgeZq7d7DHSpAsska3nUrAPdiy0a
932oCmmauRRjtg70j3UmfOyYKkQXWBfzvWhHhcHUtNmNqlB5+mHirEI74ivI
fsVpqAKZDuT4ddxtqIV8kH/7ve3gIxL+ecfgJ2Qv0V95LHAbuMUuzBr0sJDp
lGqOv942ONHS5zcdxEI6dadOu23YBm0fMhd8V5qQxFGJ/eYFSmC142TcDfkm
9K3WvkNuTBEOWaWcVw5nouCApumWADIcLc6qbsfvkJuhZFuDLhku7BN5Wd7X
gKyFA19V8ZBBUcXqrtupBqRVzR2b/1gBpLgNNGcr6tHiJuON8T/lQWEsssLQ
sA4llVcoqgfIgZitXtGhoFoUnk7iUdSVg+c8Cs3Bm2vRYS/HCQkeObhnt++2
EaMGmfPOl3I9loWd+pJOqptr0CYPDdQ3KgMveF3vKDcy0E3uRwfT/aXBycOM
W7fkNUrrnTdI1JGGSq6g7ELJ1yi2xEQuiiQNH/St+B+crUB15Q2fPtClwDs/
pp3sU45sPAwmTrZKwnUZaoub+kt0+Nl2ua5PYoB6BvFL/lJUevea9TU/MQgd
w4psiSVo+TJXrOM/UXjqcERg+1IxuhQ52N1OFoWzHKHmauPP0Gt840prxBYY
3rR2uJlVhNZrk95m8G6BxFShNzlthchaKfy3zd3NwJuwP2xX/xM0vIFu1cwU
Bvkvgyer1xQg/jYeUpOUEOx+vfuI/NGHyKkhgppaKgi3lC63qF5+gO6Xj/iY
mwnCNM9BJfaqPKRzu7b2PbEJXNtlfy6J3UdeflHR9W/5wbHUZdyQPRcVOv14
nOTEDz2vbxbFG+eg6ezC0pRePtBbos2cO38HiXv6BCer8wI7/Rare/8tFDz7
uT+unQQX+wqIZZ5stLbzmT7bGhJQHRyLBpuuoqyq1OunlLlhwsEzxS77Cqo5
Y2wbFc0Jur1LZt17MpF9oEzxn7z1YK//pemXQgYas/rHG/6RA/o7zfal8V5C
wmJlDcfk1kFTnZpi21g6yl++oPDbfC1MqN1csP6ZivQHAuNDTrDDYvG+gf6F
FORXIK8X/I4NpJ+wxPSMklF4tJIrq3eRgRuc6e+T4lCuSZ8IU/0Pg0Q2vl64
FIOYfFktDafnGRdU/LSGOaORVC6nSY3yDON96pLd/cgwZBpQvVIVPc2YER3b
pth/DBFaYa8qPk4y1PlFN1Z4Eygl9YOj//go40pivQbpUgDqldr9wTNjhFFl
ZpvpbOmLNIoLDF12DTLWd6j3Zpl6oqQ9EqV2X/sYJvvvuRxYOoSKn2yxvEPq
YjBdlHhqu+2RY8scJcOulTH5b0MVmWKN2CYe79pg3MigX0lNq+I0QdeDW3kH
X1UwFlQ7U9dJUxCLLL1vlhLEYGPbMaxURjP6H35Lrvc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
    FormBox["\"P\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8196009861761627`*^9, 3.819601035605873*^9, 3.819601079241997*^9, 
   3.819602398709695*^9, 3.819602822568759*^9, {3.819602879435936*^9, 
   3.81960290263552*^9}, {3.8196029394963017`*^9, 3.8196030180010123`*^9}, 
   3.819603080605582*^9, {3.819603366715105*^9, 3.8196034135252495`*^9}, {
   3.819603687859588*^9, 3.8196037135576134`*^9}, {3.8196037667787457`*^9, 
   3.8196038623912034`*^9}, {3.819603895296897*^9, 3.81960390600261*^9}, 
   3.8196041643506403`*^9, 3.8196042212424364`*^9, 3.8196044494655886`*^9, 
   3.8196055474875045`*^9, {3.81960559456889*^9, 3.8196056276260357`*^9}, 
   3.819607018404158*^9, {3.819607107735076*^9, 3.819607134103179*^9}, 
   3.8196071686286163`*^9, {3.8196072925758505`*^9, 3.8196073379394426`*^9}, {
   3.8196075068209925`*^9, 3.8196075405770874`*^9}, {3.8196075781528254`*^9, 
   3.8196076221317453`*^9}, {3.819610329084736*^9, 3.8196103596255627`*^9}, {
   3.819610869899456*^9, 3.819610952261091*^9}, {3.8196109890928187`*^9, 
   3.819611213001111*^9}, 3.819611279817121*^9, {3.8196114310093136`*^9, 
   3.8196115336300383`*^9}, {3.8196139031699905`*^9, 3.819613922932641*^9}, {
   3.8196144899732065`*^9, 3.819614562066307*^9}, 3.819614595998414*^9, 
   3.8196896873726883`*^9, 3.819939764902182*^9, 3.8199404264713087`*^9, 
   3.8199432582791133`*^9, 3.8199433218197193`*^9, {3.8199487432467985`*^9, 
   3.819948767445608*^9}, {3.819948799103739*^9, 3.8199489647717943`*^9}, {
   3.819949023068206*^9, 3.819949042380265*^9}, {3.8199511321889143`*^9, 
   3.81995125056496*^9}, {3.8199512847241416`*^9, 3.8199513288184867`*^9}, {
   3.8199513977054987`*^9, 3.8199514092091084`*^9}, 3.8199514992983904`*^9, {
   3.819951581612563*^9, 3.819951669105211*^9}, {3.8199517085747576`*^9, 
   3.8199517237825327`*^9}, {3.81995175732333*^9, 3.819952275670162*^9}, {
   3.8199523176865363`*^9, 3.8199523983378167`*^9}, {3.8199524475153995`*^9, 
   3.8199525979000716`*^9}, {3.8199526446993637`*^9, 
   3.8199527070690756`*^9}, {3.8199527401411457`*^9, 
   3.8199527801021996`*^9}, {3.8199528148350363`*^9, 3.819953071287312*^9}, {
   3.8199531367839236`*^9, 3.8199535430746517`*^9}, 3.8199546742619777`*^9, 
   3.820032591535571*^9, 3.8269490449957347`*^9, 3.8269539314550695`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVx3c81fsfwPEj61jHHomyCRFJ8v18UooQ18jIuq6RZHWMRK7RUkRlRrmZ
dTNyZSXzvEVJiIOESFk3yt7zd39/vB7Px0vS5ZLF+V0kEqngv/5vi0rw2ke+
AJDjGW7+a6uTOMfh+diMNwA8hSJ7T2x3EuMT9riTOwBYlpjS//3vd2XpXKNz
BoDOy+M6x0h0Qpufla2HJQAMsVEVGyOdyF9JFulf94flioaRfWx0IoZWemT0
uz8Y2dq0ImE6YWgxc3m1xB/cQ0/2jWnTCfd7i3K8Z/zBczWjkvKcTpT3jN/h
nPQDh38Fq6QPdRH2vRtiMzF+UKhgOPZwsIvImHsyBtJ+sMTQqRpS200ICas6
XXlDha2fCvvnynoIJSsTLnF7KlQ18k/fnv5EqDwWGzj74xKYaKTWM1p9Jjyz
g7fUFS/BMy/f5J89fcRo/+ydeTtfkCMviGSWDxAN+08GXUnzgVXnAsq+ykHC
5Ff/u5YBb+jK/ilLrH4lBL/fu77N5Q1eyaGBoq7fiBO/xDJWTLwgsTwGfRj9
TuTvfyfTGeYJVP9x6tK7UYLWX0EJeXkRShwvHzeaHSe0syPtxuc9gOJU72St
/4OYf+TOrSHjAbMrHbKXiJ8EJV9O7rTrBRit8ZMMD54hLkzueqad4A5Zl9Um
strnCJ8MmZjNxvNQv6M4uBctEr2eEh03mM/DrZ/pN0gzy0T4Ba2IqcNusCUm
6t3hv07EXFV8IBLoCoN5JlL9XtvEyV0uzAIVLpDg7BIx+oABHa0uH5mZcIaJ
RkWm6lImlBgzIh0v7wwN/AzfpC3JSPHugTY+mz+gaHy+XFSXC30hXS1vEnCC
pEDPJNZKXnRAxCRpNsURcnM1vxldEESr8ef0vqzaQ49y7mLRQ1EUqyVSZRFk
Bzek+07bhkmgkGaXlfMb5+DZJn9cW5YMGq4aY9H+wwZSnz8UU61XRDz9Yv2p
w1YQYUJ1G7FSQ9X2sRGVxy3BJp3O7nflCFJhL/7XpcYC3p50LuIY0kEbWb+L
5uuYw5Cp60c/bn10Q+suctMzBXZ97lsehBnKjoIP0brGsNGRqMSnfA5VpHns
HNwxAOfWtSbmBFf0Z4RsI+8HPdBnDdnkplFRd50RD7ldF6an22d028LQiShg
IEnqgFE/V8YTgfto+0TdnKjAUUj0jwmoH8lC10dYFJ03tSAtj3rfWjYbsd4y
dfl7VAsq6E2sezyyEU/zMP1QuRYQyi909OeykdRvjGXG1lpwbep2wDhfLtK3
MwgKTz0CIY3RiXNpz9B9f/r6NzFNeNK5v333aiESENhzSIFZE5KSxTXXLr1A
qeWuXr6/DkOAV02k/uQLlL26OLBeexhOcZm2XBgvQmXhwrX8Todh7PzfonoR
xehzjEOEXpYGJF+VjOP8WoIkcsYZ82QPwYJ3/1Y852vU2mJhOMVxCJgVCtZo
ca9R8HzdvQPz6tCkUCiswVeFOk883F1Spw5nHUl+JrLV6PrwadVqG3XQqX97
1/xKLRoRz7Nri1aD/slmI8UAQA/0BDO5qWrQY8KmS+oBhHyujZlbq8HWqPha
1NEGlFRjS/0kpQYmVQfadnG8Qafs2aO+Vh+Es5PTeT70RmSs1usyMqAKwRIM
Um6c7xF3Ydpr1uMqoFLsULTh3o7ocg48yrnKcMZ1gacri44OudUSxz4pQc36
gu2P8m6UlLX3ghlZCQyKO6e1hHrR8lBEgou2IjyIJi8QHX3IRuxbbaD3fgjT
7TU1XPyCxKhiZ4wLFcA1J26yf/8w+v7G5rP0T3mwLTmuqy36HT0XTjy/oSQP
jhHvn2nbjCJfr/Z5upccZM1OaoTPjCONerbI/AJZ8FkuOsO09AOt8+lxXZ+S
gdDsU4784b/QYM33Lp+7MlBabudm++cMorlHPrJVkgE3iyYNza5ZFFVVLa/m
JQ0X8yzK/AwW0EU322kxDmlYqWI8s69oERlTVsrIBVIwqeUrCRrLSLUyKXTR
SApWq6becg6vID4Xdd3hSUkgjk3paZatoSWODnJrjCRECkV+ZqrYQJ/LfT6+
UpQEeneK3Y/JLVTlxJGS0yIB4o9EuOKUSfgvtjyH+54SoP67wHrfDQZ8b2hF
55a2BPTuFszpRrtwZKm+dCi7BNiYBW1e2tmF31Y1d7VZ7gORQEoSQy4TznNz
f/R6cS/g/FgDi9vMOJbC5Pw0aS/Mkq0erwexYAsXnek/u8VBq0dIPyucjA9z
DpZ5BIoD9WVlil8qGxapuBpqKSAOZROisToN7HiIrYKsbCkGr6Prci2MuDCU
nv0ovLgHDA8yv+ItoOBcx7lkxqQ9IJWpetOVhwdffKksPdAlCnUvB6cyn/Pi
spxH5o88RKF3qrw2LpsPbyeTI223dkPa2FvK6gt+bHAnqEgkYTcUf3P0c2gV
wAlXR7/0yu2GK7bxW447gviLtwXHw2oRuPfmWGOLgTCWd6IdtTYTAaLpnxOZ
+SK45mR6SneIMPzygJF7tD2YRZO9KZEiDF3ffyi0hIhjc4XgBYscIfBeTmdq
sNqH00XHJfm0hODLo9jnYwUSeJzT0qyzVRAkTpaatoEkPrgD4Q+cBWFJKMk3
b1oKh86pvjBdFoDI6xoK7zVkMM8nDvb2fQKwZ9uNEiosj+2aQ7TiyvhB59B2
lkaVAn5aNeFubMgPownmlWnXFfFsoVUyxxAfbNULrn8IVMbaGW/etPjzQbxV
6Y0rySr4ZrzafDQrHygmuDotBB7EH29kSBim8wLtn85LXDVqWDSIy5Ssxgsk
eistUPoQdvMIDXvXxAONvywDKf9o4CK7HwVRdjwwPaSlbuqqiefTisruDnFD
vJrgJ3M9LRwVHsPLTuYGsjzH4KKdNt7j6u57R40CQ5T0sY18hItP635gseeC
lB/XGo9gHXxKea/CrZuccKAabB24TuA+nvWbjEUcQH56NIjpb13su9Tz7Vov
O4QVDRtV+Z3CjP0vj5EY2GGRgcgpDtTHqXVxj8MV2eBgtGShQ6UBPpBzcXXz
LBm+pGZNvNI/gxtu61mFhrGCRkuET7zSb9jGW7Jk7RkLxE4sXwypMsM/zbYo
wR3MYHNuZro9zQJHHu7zWl5jgnmLzYaeWkssKFreHCjNBOV7zaXy1G1w/vYD
2QVjRmjoUmmZY7HDx0a8r/sF7YLxpTCP28aOuOudwdeZDAb4FP1KMjP2D+xR
KIN835NgcPXy6vYbF7wuyaDeN7ZDa4gunWR2PI9lpiqnerS2aaExGmWXvT3w
b2XUp/S7m7SQ5OeEPac3Dg5TcPo4tE4TFNukdqlQcbb+sEir2hqtt6uTtL/J
H7dyp9Kbb67Q5B8/AdnRy3j5s2lsU+8SrWN3yIW6ohC8L5tVv0Fxkcb0Imuz
2CIcG3jV79SFzdOCU84aa7Ncx/4aV15Xd8zSgMSS6ZlyC2ttOI5TT0/TMueX
jG/zxOC7cW22nr8maQN9ZpLW9ffx0D7c5po4QQtNUlo2uZWI1UsKjzseHaVd
fvjgsY5uKo46JVZm/XWYRnZUlBSOeIJLXgibZrIP0N5/drMV8czBtvTlw4nW
3bR7Gw5uM7x5mDRdcJRT7wPNyMvpJ9WvGD/27aaMvq6mNXcrWxGL5fijnITR
0mEf2hSj8sv1iVr8PyZMQFk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[\\(e\\), \\(\[Nu]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8196009861761627`*^9, 3.819601035605873*^9, 3.819601079241997*^9, 
   3.819602398709695*^9, 3.819602822568759*^9, {3.819602879435936*^9, 
   3.81960290263552*^9}, {3.8196029394963017`*^9, 3.8196030180010123`*^9}, 
   3.819603080605582*^9, {3.819603366715105*^9, 3.8196034135252495`*^9}, {
   3.819603687859588*^9, 3.8196037135576134`*^9}, {3.8196037667787457`*^9, 
   3.8196038623912034`*^9}, {3.819603895296897*^9, 3.81960390600261*^9}, 
   3.8196041643506403`*^9, 3.8196042212424364`*^9, 3.8196044494655886`*^9, 
   3.8196055474875045`*^9, {3.81960559456889*^9, 3.8196056276260357`*^9}, 
   3.819607018404158*^9, {3.819607107735076*^9, 3.819607134103179*^9}, 
   3.8196071686286163`*^9, {3.8196072925758505`*^9, 3.8196073379394426`*^9}, {
   3.8196075068209925`*^9, 3.8196075405770874`*^9}, {3.8196075781528254`*^9, 
   3.8196076221317453`*^9}, {3.819610329084736*^9, 3.8196103596255627`*^9}, {
   3.819610869899456*^9, 3.819610952261091*^9}, {3.8196109890928187`*^9, 
   3.819611213001111*^9}, 3.819611279817121*^9, {3.8196114310093136`*^9, 
   3.8196115336300383`*^9}, {3.8196139031699905`*^9, 3.819613922932641*^9}, {
   3.8196144899732065`*^9, 3.819614562066307*^9}, 3.819614595998414*^9, 
   3.8196896873726883`*^9, 3.819939764902182*^9, 3.8199404264713087`*^9, 
   3.8199432582791133`*^9, 3.8199433218197193`*^9, {3.8199487432467985`*^9, 
   3.819948767445608*^9}, {3.819948799103739*^9, 3.8199489647717943`*^9}, {
   3.819949023068206*^9, 3.819949042380265*^9}, {3.8199511321889143`*^9, 
   3.81995125056496*^9}, {3.8199512847241416`*^9, 3.8199513288184867`*^9}, {
   3.8199513977054987`*^9, 3.8199514092091084`*^9}, 3.8199514992983904`*^9, {
   3.819951581612563*^9, 3.819951669105211*^9}, {3.8199517085747576`*^9, 
   3.8199517237825327`*^9}, {3.81995175732333*^9, 3.819952275670162*^9}, {
   3.8199523176865363`*^9, 3.8199523983378167`*^9}, {3.8199524475153995`*^9, 
   3.8199525979000716`*^9}, {3.8199526446993637`*^9, 
   3.8199527070690756`*^9}, {3.8199527401411457`*^9, 
   3.8199527801021996`*^9}, {3.8199528148350363`*^9, 3.819953071287312*^9}, {
   3.8199531367839236`*^9, 3.8199535430746517`*^9}, 3.8199546742619777`*^9, 
   3.820032591535571*^9, 3.8269490449957347`*^9, 3.8269539315318623`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
xA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
    FormBox["\"r\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8196009861761627`*^9, 3.819601035605873*^9, 3.819601079241997*^9, 
   3.819602398709695*^9, 3.819602822568759*^9, {3.819602879435936*^9, 
   3.81960290263552*^9}, {3.8196029394963017`*^9, 3.8196030180010123`*^9}, 
   3.819603080605582*^9, {3.819603366715105*^9, 3.8196034135252495`*^9}, {
   3.819603687859588*^9, 3.8196037135576134`*^9}, {3.8196037667787457`*^9, 
   3.8196038623912034`*^9}, {3.819603895296897*^9, 3.81960390600261*^9}, 
   3.8196041643506403`*^9, 3.8196042212424364`*^9, 3.8196044494655886`*^9, 
   3.8196055474875045`*^9, {3.81960559456889*^9, 3.8196056276260357`*^9}, 
   3.819607018404158*^9, {3.819607107735076*^9, 3.819607134103179*^9}, 
   3.8196071686286163`*^9, {3.8196072925758505`*^9, 3.8196073379394426`*^9}, {
   3.8196075068209925`*^9, 3.8196075405770874`*^9}, {3.8196075781528254`*^9, 
   3.8196076221317453`*^9}, {3.819610329084736*^9, 3.8196103596255627`*^9}, {
   3.819610869899456*^9, 3.819610952261091*^9}, {3.8196109890928187`*^9, 
   3.819611213001111*^9}, 3.819611279817121*^9, {3.8196114310093136`*^9, 
   3.8196115336300383`*^9}, {3.8196139031699905`*^9, 3.819613922932641*^9}, {
   3.8196144899732065`*^9, 3.819614562066307*^9}, 3.819614595998414*^9, 
   3.8196896873726883`*^9, 3.819939764902182*^9, 3.8199404264713087`*^9, 
   3.8199432582791133`*^9, 3.8199433218197193`*^9, {3.8199487432467985`*^9, 
   3.819948767445608*^9}, {3.819948799103739*^9, 3.8199489647717943`*^9}, {
   3.819949023068206*^9, 3.819949042380265*^9}, {3.8199511321889143`*^9, 
   3.81995125056496*^9}, {3.8199512847241416`*^9, 3.8199513288184867`*^9}, {
   3.8199513977054987`*^9, 3.8199514092091084`*^9}, 3.8199514992983904`*^9, {
   3.819951581612563*^9, 3.819951669105211*^9}, {3.8199517085747576`*^9, 
   3.8199517237825327`*^9}, {3.81995175732333*^9, 3.819952275670162*^9}, {
   3.8199523176865363`*^9, 3.8199523983378167`*^9}, {3.8199524475153995`*^9, 
   3.8199525979000716`*^9}, {3.8199526446993637`*^9, 
   3.8199527070690756`*^9}, {3.8199527401411457`*^9, 
   3.8199527801021996`*^9}, {3.8199528148350363`*^9, 3.819953071287312*^9}, {
   3.8199531367839236`*^9, 3.8199535430746517`*^9}, 3.8199546742619777`*^9, 
   3.820032591535571*^9, 3.8269490449957347`*^9, 3.826953931609613*^9}],

Cell[BoxData["0.31634329999462263`"], "Output",
 CellChangeTimes->{
  3.8196009861761627`*^9, 3.819601035605873*^9, 3.819601079241997*^9, 
   3.819602398709695*^9, 3.819602822568759*^9, {3.819602879435936*^9, 
   3.81960290263552*^9}, {3.8196029394963017`*^9, 3.8196030180010123`*^9}, 
   3.819603080605582*^9, {3.819603366715105*^9, 3.8196034135252495`*^9}, {
   3.819603687859588*^9, 3.8196037135576134`*^9}, {3.8196037667787457`*^9, 
   3.8196038623912034`*^9}, {3.819603895296897*^9, 3.81960390600261*^9}, 
   3.8196041643506403`*^9, 3.8196042212424364`*^9, 3.8196044494655886`*^9, 
   3.8196055474875045`*^9, {3.81960559456889*^9, 3.8196056276260357`*^9}, 
   3.819607018404158*^9, {3.819607107735076*^9, 3.819607134103179*^9}, 
   3.8196071686286163`*^9, {3.8196072925758505`*^9, 3.8196073379394426`*^9}, {
   3.8196075068209925`*^9, 3.8196075405770874`*^9}, {3.8196075781528254`*^9, 
   3.8196076221317453`*^9}, {3.819610329084736*^9, 3.8196103596255627`*^9}, {
   3.819610869899456*^9, 3.819610952261091*^9}, {3.8196109890928187`*^9, 
   3.819611213001111*^9}, 3.819611279817121*^9, {3.8196114310093136`*^9, 
   3.8196115336300383`*^9}, {3.8196139031699905`*^9, 3.819613922932641*^9}, {
   3.8196144899732065`*^9, 3.819614562066307*^9}, 3.819614595998414*^9, 
   3.8196896873726883`*^9, 3.819939764902182*^9, 3.8199404264713087`*^9, 
   3.8199432582791133`*^9, 3.8199433218197193`*^9, {3.8199487432467985`*^9, 
   3.819948767445608*^9}, {3.819948799103739*^9, 3.8199489647717943`*^9}, {
   3.819949023068206*^9, 3.819949042380265*^9}, {3.8199511321889143`*^9, 
   3.81995125056496*^9}, {3.8199512847241416`*^9, 3.8199513288184867`*^9}, {
   3.8199513977054987`*^9, 3.8199514092091084`*^9}, 3.8199514992983904`*^9, {
   3.819951581612563*^9, 3.819951669105211*^9}, {3.8199517085747576`*^9, 
   3.8199517237825327`*^9}, {3.81995175732333*^9, 3.819952275670162*^9}, {
   3.8199523176865363`*^9, 3.8199523983378167`*^9}, {3.8199524475153995`*^9, 
   3.8199525979000716`*^9}, {3.8199526446993637`*^9, 
   3.8199527070690756`*^9}, {3.8199527401411457`*^9, 
   3.8199527801021996`*^9}, {3.8199528148350363`*^9, 3.819953071287312*^9}, {
   3.8199531367839236`*^9, 3.8199535430746517`*^9}, 3.8199546742619777`*^9, 
   3.820032591535571*^9, 3.8269490449957347`*^9, 3.8269539316405315`*^9}],

Cell[BoxData["2.2932261253844976`*^16"], "Output",
 CellChangeTimes->{
  3.8196009861761627`*^9, 3.819601035605873*^9, 3.819601079241997*^9, 
   3.819602398709695*^9, 3.819602822568759*^9, {3.819602879435936*^9, 
   3.81960290263552*^9}, {3.8196029394963017`*^9, 3.8196030180010123`*^9}, 
   3.819603080605582*^9, {3.819603366715105*^9, 3.8196034135252495`*^9}, {
   3.819603687859588*^9, 3.8196037135576134`*^9}, {3.8196037667787457`*^9, 
   3.8196038623912034`*^9}, {3.819603895296897*^9, 3.81960390600261*^9}, 
   3.8196041643506403`*^9, 3.8196042212424364`*^9, 3.8196044494655886`*^9, 
   3.8196055474875045`*^9, {3.81960559456889*^9, 3.8196056276260357`*^9}, 
   3.819607018404158*^9, {3.819607107735076*^9, 3.819607134103179*^9}, 
   3.8196071686286163`*^9, {3.8196072925758505`*^9, 3.8196073379394426`*^9}, {
   3.8196075068209925`*^9, 3.8196075405770874`*^9}, {3.8196075781528254`*^9, 
   3.8196076221317453`*^9}, {3.819610329084736*^9, 3.8196103596255627`*^9}, {
   3.819610869899456*^9, 3.819610952261091*^9}, {3.8196109890928187`*^9, 
   3.819611213001111*^9}, 3.819611279817121*^9, {3.8196114310093136`*^9, 
   3.8196115336300383`*^9}, {3.8196139031699905`*^9, 3.819613922932641*^9}, {
   3.8196144899732065`*^9, 3.819614562066307*^9}, 3.819614595998414*^9, 
   3.8196896873726883`*^9, 3.819939764902182*^9, 3.8199404264713087`*^9, 
   3.8199432582791133`*^9, 3.8199433218197193`*^9, {3.8199487432467985`*^9, 
   3.819948767445608*^9}, {3.819948799103739*^9, 3.8199489647717943`*^9}, {
   3.819949023068206*^9, 3.819949042380265*^9}, {3.8199511321889143`*^9, 
   3.81995125056496*^9}, {3.8199512847241416`*^9, 3.8199513288184867`*^9}, {
   3.8199513977054987`*^9, 3.8199514092091084`*^9}, 3.8199514992983904`*^9, {
   3.819951581612563*^9, 3.819951669105211*^9}, {3.8199517085747576`*^9, 
   3.8199517237825327`*^9}, {3.81995175732333*^9, 3.819952275670162*^9}, {
   3.8199523176865363`*^9, 3.8199523983378167`*^9}, {3.8199524475153995`*^9, 
   3.8199525979000716`*^9}, {3.8199526446993637`*^9, 
   3.8199527070690756`*^9}, {3.8199527401411457`*^9, 
   3.8199527801021996`*^9}, {3.8199528148350363`*^9, 3.819953071287312*^9}, {
   3.8199531367839236`*^9, 3.8199535430746517`*^9}, 3.8199546742619777`*^9, 
   3.820032591535571*^9, 3.8269490449957347`*^9, 3.8269539316724453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["0.31634329999462263`", 
  RowBox[{"Sqrt", "[", "0.05", "]"}]]], "Input",
 CellChangeTimes->{{3.82694917259437*^9, 3.8269491788290777`*^9}}],

Cell[BoxData["1.4147302460291702`"], "Output",
 CellChangeTimes->{3.8269491794893494`*^9, 3.8269539340693483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hasil ini sesuai dengan solusi eksterior", "Subsubsection",
 CellChangeTimes->{{3.8199497522465305`*^9, 3.8199497672818756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "-", "a0"}]], "Input",
 CellChangeTimes->{{3.819950044313305*^9, 3.8199500450198154`*^9}, {
  3.8199502026672697`*^9, 3.819950213495901*^9}}],

Cell[BoxData["2.7199931196264515`*^-10"], "Output",
 CellChangeTimes->{3.8199500456312156`*^9, 3.8199502141560264`*^9, 
  3.81995142694146*^9, 3.819951500388688*^9, 3.819953565754775*^9, 
  3.8199546752928085`*^9, 3.8200325968948755`*^9, 3.826953936217182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["rs0"], "Input",
 CellChangeTimes->{{3.8199506079032316`*^9, 3.8199506085086465`*^9}}],

Cell[BoxData[
 RowBox[{"-", "233.2780340678693`"}]], "Output",
 CellChangeTimes->{3.8199506091517115`*^9, 3.8199514307458534`*^9, 
  3.8199515005536537`*^9, 3.8199535676078815`*^9, 3.819954675461868*^9, 
  3.820032598156488*^9, 3.826953938561839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "[", "i_", "]"}], ":=", 
  RowBox[{"R", "+", 
   RowBox[{"i", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"300", "-", "R"}], ")"}], "/", 
     "10000"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "1", "]"}], "+", 
  RowBox[{"10.", 
   RowBox[{"Log", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"x", "[", "1", "]"}], "10."], "-", "1"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabel", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "i", "]"}], "+", 
        RowBox[{"10.", 
         RowBox[{"Log", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"x", "[", "i", "]"}], "10."], "-", "1"}], "]"}]}]}], ",", 
       RowBox[{"x", "[", "i", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"tabel", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\) (m)\>\"", ",", "\"\<r (m)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabel2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "i", "]"}], "+", 
        RowBox[{"10.", 
         RowBox[{"Log", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"x", "[", "i", "]"}], "10."], "-", "1"}], "]"}]}]}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"10.", "/", 
         RowBox[{"x", "[", "i", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"tabel2", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\) (m)\>\"", ",", 
      "\"\<(1-2G M/r)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.819949072182714*^9, 3.819949073810643*^9}, {
   3.8199491070191765`*^9, 3.8199492961633472`*^9}, {3.819949339029502*^9, 
   3.8199493516953273`*^9}, {3.819949413548671*^9, 3.8199495071496315`*^9}, {
   3.819949604918751*^9, 3.8199496974774065`*^9}, {3.819949825913066*^9, 
   3.819949873006548*^9}, 3.8199500148724546`*^9, {3.8199500555448327`*^9, 
   3.819950072132497*^9}, {3.8199502750168686`*^9, 3.8199503361597366`*^9}, {
   3.819950596228142*^9, 3.8199506281805897`*^9}}],

Cell[BoxData[
 RowBox[{"-", "48.40144532584147`"}]], "Output",
 CellChangeTimes->{
  3.8199491332947397`*^9, 3.819949299834363*^9, {3.819949339770439*^9, 
   3.819949353772887*^9}, {3.819949416131957*^9, 3.8199494510247726`*^9}, {
   3.819949500795576*^9, 3.8199495088595743`*^9}, {3.8199496208518825`*^9, 
   3.8199496306765137`*^9}, 3.819949697954501*^9, 3.8199498353344445`*^9, {
   3.819949867699834*^9, 3.81994987344401*^9}, 3.819950015544816*^9, 
   3.819950073438878*^9, {3.819950313520076*^9, 3.8199503367411814`*^9}, 
   3.819950447737217*^9, 3.81995063047612*^9, 3.819951432439743*^9, 
   3.819951500729188*^9, 3.8199535701943684`*^9, 3.8199546756317754`*^9, 
   3.820032599673008*^9, 3.8269539471133013`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vPFri29mxfPsNZWez/VGnYYFI69fZq8+1vktXs/BRTkrr2uwpQo9X+SNHmci
bCy57JVHz5d6o0Lkg1+Od9hrCz2P9UazF3+PFz7QID+Inq/k+6tcse/OJ+zV
hZ6v4fuvZBcT9Jy9yljnvbwhv2mR6PZaA7ur9DzBGxP3Bs/+9J69VtPzrd44
3Ol7kyOlGiwMoOc7vBE/5MmSGd816NfWOg/G6/Gr54mef9jrCz3f5w1caJH2
r6wWJzPoeQrX29jUKZm2WkxfSs/T+Pmjf/6OqKpFZ5N1XswbR4/X1irstfjk
RM9PeGPOtIYjKtfWYv8ben7GG24ezgOu1tci6Ag9P+eNQYO83kU31sJlHj2/
6I0PPdcM1jlr8cyHnmd5Y0Az9zU1XLTYUsc6X+aN5l6t19501cK/kJ7neuP6
tXUBKzpo0WAfPc/zhsPd1Z9EDy3yQ+n5PW8Mn9xVW6uHFnF9rfNn3sjcFDch
t48Wgh09f+KNYsV5v5VeWtjdoefPvKEzPKwpqbTI2krPi73hsvZrbE2dFguD
6flbb0Tkt7xzU9KiX1d6XsI/nxXxMtasRZly1nk1rjfHVmd1fux1jdvtmzeG
jW4+vNpQ9lpLz396w6vnqptXR2jhEUjP/3rjSt0o26gg9nK1zrMpUBjcxFY5
nr2+0XNbBTZvHnOjwhQtgjPpeWUFetvOCTw3nb2W0fNqCnR7NfXM3NnsZbbO
uymgXzD8Ra/5WiQ2o+cOCiwrO/TOz4Xs9Y6e11MgYMG8lUeXslc6PXdUIL5B
Qd0py7W4O5+eOykQfnXhKPfV7KWl584KZEevnfd2PXvVs87HKXBb0Xzk7gQt
qj+l520VCLrbr/bwbeyVTM/dFKhRrXJsk91aLJ5Ozzsq8HRn9K37+7Tw6m+d
n1Mgw/dp0eqD7FWdnndXANeanRKOaHH6Lj3vxZ+vDQisekKLsG30vK8CU5Sp
uRfOsFcIPR+gQOjgdtXnntficzd6rlTgtPKlg+cVLVJsrPN2fL7xX16UXmev
bHouKPDBZVxEcq4WbdbTc1mB8xnD3o28o8WLYfTcrMC1Ke+bOhWwl5t1Hk+B
7qHNmt17okXAD3o+RIGBrxzer3iuheN5eh6owMnn9yPVr9krhp6PVKBl6JJX
5Uq0WONrnddTIHFdl/onSrWQmtPzcQqs6v3ZYfJ39iqh5xMVSNfcL2jzR4tr
x+j5VAXcNv6eUFRWh8UR9HyGAlFfxuest9XBS0/PZynwqIHqr1BVh3INrPN9
Chw5Ff+tor0Op5/R8wgFukbMOXXaQYewA+RtkQKOlWyFqfV16BZGz5cqcCrf
60Dbxjp89rLO/ynQfKLwoLCZjvex9HyVAg6aXrfXttIh5D49X6OA7c0mG7Su
OrTZQc83KODla9fOpoMOL8bT8wQFSrrWXZbeRYftnvR8qwK/DhiOj/PUIaCC
dV5QAfWPu2nN+ujgeJOe71EgtU/6rDv9dbi/gZ4nK/At0bZWtFKHNSPoeYoC
bzzuToFWB8ndOk+oQIhN3x2fRR3sf9HzdAXGlTdu223S4doFen5CgTJtXMb7
DdIhajk9P6OAvyW7kn2ADt6DrPOGCvwcNWjCueHs1ZKeX1JgfounO0LH6JDx
gZ5nKVAkztjTOkSHWSfoeTavb2KHmQWT2GshPc9VYHFGk4ax03T4KtDzPAWG
qM1L+s7SIbWhdT6RPXLfXCidy14v6PlDBewff7i5I1IH14P0vFCB/97OSDJH
6VA8k54/4/oYs0GqHMte3tb5RQXSjo+4cnyVDoE16flbrofuJdWD1+nQuICe
lyiQ20nt3GgTe+2k56UKCG+W2GZv1WHdRHr+jddv7dn08J06GHrS818KVBlW
3rP9XvaqaJ135P4dPyLq8QEdsnPoeTklMnK+7YlNY694em6rxIdV2ev6HGOv
UfS8shJVD/82lZzSoXxH6zykEm9dVj9LyGSv3/S8phKj7yb11V1ir0v03EEJ
5VYh5M9VHTxX0vN6Sgim9UH7brKXn3VeUgnTmbUeg/LYqxU9d1Ki73r/3Mr3
dZjwiZ47K1FpTZne6Y/Y6xQ9b6XETb/lM0Y+Za9F9LytEi+WOEU6FOuwU6Ln
bkqc338uIPMtezWyzlcq4SJF2034yF7F5NxDCYcP0YsbfdWhIJWeeypx/ced
21k/2Ws2Pe+lxJe8OR+n/WMvpXX+UomlT9Y8al5ej1r/0fMBSrwLah+fU0mP
7If0XMnHJwa1Ca+mR/Rueq5R4moNtyVtaumhnEzPBSV81qWn59fRo3xvem5Q
4sisasfmN9Qjs5J1XlOJ+/d6R7k56RF+i54PUqJlpr/r/eZ6eCbQ8yFKJPaa
szmytR7fR9PzQCW+q1KfurvpkdbJOs+pxLz7lX886KjHhL99uvgHKSHdXft4
YVc93K7Q8xAlOjYLWduhpx6vV3E5T1QiLTrBqQB67PS3znsq4VnkOXPhAD2G
t6bnM5T4VGTY5a7Ww+kzPZ/F6+v1d/t9nR4Fp+n5XCWc0pRTImQ9Niyh5xFK
jMwdUNvNoofJQM8XK7Gya8XFd/zYq4l1PlSJ0IkJ1+YO1ePmKz5drBIPbBo9
bT2SvdLo+SolEkbHXc0NYq859HyNEvtq1Fk4c7wetmrr/KgSFYccqtV8Cns5
0PMEJfJSZ0+8Np29HtPzRCVGDV6YOGW2Hj2T6PkOJbrserTDcT57TaHne5T4
mr125vmF7NWHnifz9Sqfcw5eqsekKtZ5UyWGzZ+Y8N9y9sqj52m8fgPT3hyP
Y6/N9DxdiUNJ8VUD1+uxO4ien+T1nNvjb6UE9upinUdVov2TrecOJLJXGXp+
TonhF54MMu3S41EWPb+khKVp5Uu/97LXanqepcTPB20rbEthrwDrvKoS6bd8
66gO6+HQlp7n8no+3Pbz/TH2+kLP89nrfIPUuNN6xGTQ83tK3Pa50dPznB7q
pfT8oRLN2uZueHyJvUz0vFAJx1qdr0Vc0+O8k3W+VYljOyvktM7RY+4bel7M
vpHmPdl57HWEnr9VIqCfp3HyfT1+zqXnH3j9R56+XfexHkd8rPOvSshTPrc6
+ZS96tDzb0r0LHqrCyjWw72Qnv/i+mqSrir/To+3e+n5XyU2Lx9Zb/dH9gql
5+VUyFpZ6YTPVz1G9qXntioUTN/foeSnHs3srPOyKpRGj5618h975dPzairU
WrzteoNyAuK30vOaKvRo1E4RXF6AJZie11YhvNG9pFO2Ahy6WudpVSjeeOB7
9coCcsvSc0cVqu5Kdw+oKiDmGrevkwqVVL+lg9UEqNfSc2cVli2aP6ScvYBK
gdZ5WxXuDpNNci0B513peVsVTt8P7brdQcDcb/S8vQr7n30u96WOgN6Z1v8d
iAr7pualD6gv4Ge09Z8HqxAw28l3TUMBR8z03FOFOi8fPn3RSMCUZtb5XBXS
19f27eokwP0dPe+rwqNpN9IXNRPw9ig9H8A+Q/6zudtcQNJ8eq5SIajtq64u
rQSM1Frnd1UYmmIxT28toFk9ei7w82SMGXq5rYAnRfTcoEJwq+amem7slUzP
zSqYD8R2Ge3OXtPp+SAVDI5p/452FFCnPz0fokKS2/q0il3Yq5p13pevl+ht
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
RsS7k+pByuomxDam58tFbJ25Wpxkb8I7G3q+UsTRMq6942uZoHlFz+NELD5g
3/SigwlJ2fR8jYiY1wN+ltQxoZLV83Uihv2XfaV+fRNGrafnG0ScjNob27+h
CRfC6flGERNSnviMa2SC83B6vknEjKfj/65pYsJ8FT3fLOLtvEG7Mpqa8MSN
nm8VYfNqh/drZxN6O9DzbSLqTxUL/mtpwqYf9HwH99O8gNG9XEx0jJ7vYs8x
ea9HtmGv8/R8t4jbkanDlruakL6HnieJcHD/mXvMjb1i6fk+7oeM/d2eurPX
FF7e/Vxvy3Lj7DqZcMuXnqeIEN+NetmlC3v1oeepIgZ4THQf0tWE5c3peZqI
qJMfxi/ubsL7yvT8sIjCW8U7DvZgrxJ6fpT7/8ag3Pu9TNh7m54fExFZRvPF
BiZUtnp+gufRsRPV2/Vjr830/JQId1VyY5OXCRcj6PkZEcPLOLeY421C8yB6
flaEpV2TZruV7KWn55kinjTaXjtHbUJhZ3p+XsS3xmn/fmhM6NOAnl8UkTlL
fNJMz17/nFImXRaxan74UR/RhN/P6HkWfz+sV+QU2YSBWfT8mgj9geWqTUb2
OkDPs0WkjA4rf9FsQt3V9PwGz9f3vw+/9zVhahg9z+H7WdLAv64few2h57dE
NAjP+93H34SOA+h5nojTtdxXjg5grzb0/I6ID0tdG68IZK8a9PyeiOh217cc
G26C9gs9fyBiradDg6KR7HWfnheI8P5iE1VlDHtZPX8koszmhA8dx5owegc9
fyLCOP2FdtA49oqi50UiKp19uHXBePaaQM+f0dP0hW/3TjRhgZGev6CfG5+2
uz2ZvTzJeTHPy91fR/yeyl5O9PwVX88xM675dBMSKtDzNzzfOiiPa8LY6zU9
fyeic/Ol+VNmsddNel4iIr7dslfx4SYcO0zPP/I8WSSUnp/LXhvpeSnPkzF3
St/OZ6+59Pwz/bBr/sYh0oTbI+j5V+73Xd3u9VzEXj70/DvPl5C6p4cvMWGF
Oz3/yeu/PnN99FITSmrT8988zwf1DE5bxl6/6Plfrp/ihV0KYk3Y94Sel5Fw
a9L2LzYrTahi9byshJ3t1u5rG8dee+m5jYQi1dCB8hoTLi3ncq4goe738v/C
1pnQIpSeV5RgNzpiQ+IG9hpEzytLOHu50DUr3oQi0POqEoKUTY58TDABLel5
NQnTHfp41N/KXlXpeXUJK3z7J2ObCX8+0HN7CXH93RqO3mHCoHx6XktC/J+y
c2N3sdcJeu4g4c/BjAdH9phQbys9ryMBUcFuj/aaELqQnteT4H6g4vQK+9lr
LD1vIOGGMi7dNcWETiI9byjBEu7wQU5lLw963kiCd2hU45lp7NWQnjeRoDN9
7594xARdWXreVEJA/4CAK+ns9YKeO0vYPfT85A/H2cvqeQu+39stw+ueMmHM
QXreSsKV00vm9D7DXmvouYsEt34l00acZa9Z9LyNhBdzfEdFnzMhYig9d5Ug
r8vSHrrAXt703E1C7b1ebe9fYi9Xeu4uofqdK//KZJmwuSY97yhhkKff1VbX
2OsrPe8swe/Tn2W6bPYqoOddJBxseFAx9aYJx8/S864SuuVO+74xl7120fPu
Ev7rYNiSeZu9oul5DwnbJWWfV/km5E2k570kxAimvBr32MtMz/tISO8/N9Dj
gQkre9LzvhIUXpdf+D004UNTet5Pwq4x7oELHrNXRXruJWFh1vHbewpNSH5L
z725vmaN6X3zqQlVrZ4rJZxb3Xvz1+fsdZSeqyXktO75zbHYhMvx9Fwj4Yhm
uHf/1ya0nE/PdRKm1DwWPeYte42i53oJpqieWbHvTXiqoeci1+flD38PfzCh
b0d6Lkt4+/BOm4JP7FWXnhv5ee6Vast9MeHvb3pultD8qvdol28m+BXRc18J
0tncGbof7HWJng+SUDFr/fwpv0yon8zt68fX/7Rp/oY/JkxbSc/9JdRRFM7I
+Mde0+h5gISUWyNGvyhrRufB9DxQgmZbO51deTNW9qPnwyX0zfBs29HWjA+t
6PlIrofOsf/MlczQV6PnoyV8rdju6uwqZiR/oudjJFzrXydmm50ZVa2ej5XQ
rkSjvFLdjKBT9HychAL7Wz/e25txOZGej5fwen9SosN/ZrRcTM8nSkjLzuvn
WduMyHH0fLKER1NM94fUNeOpRM+nShi8w21MZH0z+naj56ESJgwLKElqaMaW
RvR8uoQtB98F32xkxt9y9DxMwsUVdwu/NDHDr5iez5JQuYKzrmEzM05cp+fh
Eu5WvXEQzc2of4iez5XwZccju5EtzZi2jp7PlxCSKw9Z6mJG/mx6voDPH+u+
J6UNew2j55ESOj8IfZ3nyl5Ker5IQstUF+dfbmZ8bEfPl0jIsFfKTh3Y6z96
vlTC+k/5YQM6sdd3er6M54N0Z31QFzPsrJ7HSijX1icltit7naPnyyUYpnY+
ndadvXbT85X8vG1Wn7vXw4xWMfQ8TkJ4v/EZf3ux12R6vobnS9r5NGewl4We
r5NwevraLcp+ZvTrTc83cL0teLVgnBd7OdPzeF6Pqyf9V3qzVyV6vklC6ID/
OhxVmjH4PT3fzH7P3v98oGavW/R8q4Sem8STZbTsdYyeb5OwYWivqS30ZkxP
oOc7JJQ6p7VQi+y1gJ7vkpCad/R6iMxeY+j5HglrRqnHrTKasUpHz5O4/q6M
K59uZq9O9Hwfz9s3zqsKfNmrPj3fLyHiREj9sn5m7P9Lz1N4nrgIa1v4s5fV
81Su78ZZduoA9rrC4yqN5/PSRzNCAs24sp+eH+F6HRT7aOVw9oqj50clVJrx
yPPoSPaaQc+Pcb3euB7zYLQZz/zp+QkJq1VD7v8LYi8ven5KwoMbcY2ajzNj
a2t6fobvz2eCRTnejH/V6flZCWO2l0YFT2Svz/T8nATfTKfDyyebcfIePT8v
wT76R37aVDManKHnF61zbnM+3J3GXtvp+WUJv48fLvtnhhl3ltDzLK6v1/FV
ms4yo8t4en5NwqeBXasOCGcvAz3PlhBdstBmzFwzPnWn5zclDFu6rDR6vhlC
E3qeIyHLXvsgJYK9ytPzWxKCh146fnuhGdWsnufxvPb/u+L7YjPG3qDnd7ge
XpYGOC5lrzR6fo/77eGeVlhmhssGev6AfjRp9mJYrBkL59DzAp7/Uf7xi1aw
13B6/kiC8m+Aeu8qM/qr6fkTCSdMbT9kr2av9vS8SELuhDPLPq1lLwd6/kzC
fJcmznU2mOH/k56/oMe+mpTu8ez1mJ4XS+j/UNllcAJ7XaDnr3jex9ZJnbvF
jBlJ9PyNhM+Koy23J7JXLD1/J+HQE9dVl7az11R6XsL90GHGt9c7zYgbSM8/
SnhSM0Guvoe9+tDzUgmXLZt2ddjLXi3o+RcJCwqmlxqSzThQhZ5/5X6d1LHr
9APsZfX8u4TYD1cnbTzIXnn0/Cd7t1HsPH3IjKzj9Py3hBqfd+QUHmavLfT8
L5/f6fVnLmgsjKTnZWS4LKht73LcjOdB9LwcH79r7exzkr0Eem7Dx+6t3UJO
m5HYhZ5XkPHcsXaHFRlmlLF6XlHGwgUlbdMy2asMPa8sY3Wn443vnDfj1HMe
z1Vl/PoVWvnnRTMaXqXn1WRU2dvqreMV9kqh5zVkTKuefbHPVTPurqbn9jIG
lY5dH3jdDI+Z9LyWDI+WNsMjb7BXAD13kPF+0uqWu3PMKB1Az+vIyNrevDDr
lhliW3peT8ashamr3uWxlz09byCjYRF62981o7rVc0cZzeblPOl434zgB/S8
kYwpriNnGgvYK4OeN5ExZF+Z6tMfmdF6Jz1vKmPF5cR1G56YsWgpPXeW0Vyp
a3iqiL0m0PMWMuI/ll/z+JkZXiZ63krGo6jLlcq9ZK8efHutZfS5t2Fy81fs
ZfW8jYzpW2fne78xY4gtPXeVkbRrUocx79jrDT13kzH8wMyIpSXslUPP3WVs
nLnhRvJHM8KO0POOMvZl36x1s5S9NtLzzjICg5x0n76w1zx67iHjQ42l8xy+
m7F6JD3vKuPznFrJHj/Zy4eed+fnDUu/afnNXh3oeQ8ZL06Hvw37a0ZKHXre
i9fbblSZTWUsqG71vI+M+U6T7c6UsyC4kJ73lZF8bLt9YXkLrl6k5/1lXIr7
Y2dT0YLW++i5l4yAkDllW1S2YNEKeu4tY3I51/feVS14EUrPlTJG2FW4Nbqa
BV5+9Fwtw05hlxJVw4Jtfem5Rsbu4P6R+2paUNbquU5Gscc+Kfs/C4bY0XNB
xmt/Zb0PtS04/ZGeizK6bqqfX7OeBY536Lks4/KeptGdGlgQdpKeG2XY9gz0
NDpacG8rPTfLuFjl4ZPQxhZ0XUTPfWVorq2as87JgtXB9HyQDMFjcZ3jzSz4
LNLzwTI+/Tmx40FzC6Su9Nyfv3/Hvd2flhakONLzABm3pxXva9zaghpWzwNl
LF3xrDnaWjDuJT0fLiPnTsvVQ9ux1zV6PlLGn98pf+a3t6BNKj0fLeNWaoT/
9g4WLF5Lz4P4+0nbjl7oxF6z6PlYGTfjalR+2cWCAYH0fJyM9KZZUqVu7KWg
5+P5+mXy4lp7spfV84kymhZ2uKHuaUFALXo+WYb9xKKywb3Z6xs9nyoj0r/Y
dRnY6yE9nybjnmmAsL+fBTMz6fl0vh/bX2NveLHXLnoeJiO1QdW5H7zZaxk9
n8X10XtadE2VBWsm0fNwGWbHviv4XQmfzbwcc2UUDAmKkbXs1Yuez5eRmfp5
wRS9BQeb0fMIGdGnCyeuFtnL6nmkjI6unSxHZPZ6R88XyWiy/bXHHaMF13Lp
+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
Bj2fp8bBVjMjlXXs9YmeL1DD7nfvcQHrRZQ8pOcLef8++RU3bWSvBHq+mOt5
cOaRI5vZay89X6LG5pxXI65uEWFR7vkyNcyc+r99GsZePvR8uRr1PywO/L5d
xPUx9DxYjd49DlvV2SmibS96vkqNdT3jd3TcxV7N6PlqNbJaX2g+aLeIFxXp
+Vo15tvv36nsFTHgNT0PUWP94vnWAfvZK52eb+D+G4YVGw+K+H2Cnm/i97n8
9WP0IRHiNnoeqsbbahGalGj2WkjPt6ixXNXj7JMYEQ3H0/MwNS7cu2L1LU7E
HDd6vl2NVbEDPK2Os5cDPQ8v3/9njnc4KaJbXXoewfPp2OqHy2kRG7/T80g1
ltqv6COdZa8n9HyPGiW9Xs6efV7EyGR6vleNh4v6HAm5KCLmED3fr0aXDuse
RSWwV7nnB9UINz2ulHhZhJcfPT/E9VJ1sH2UyF5abpdoNfQdZ7t+Tmav/+h5
jBquNRNFy2siglrT8zg13G1r+rS9wV7V6PlRvj5SDvgvlb3e0/PjajSOPLZQ
kyYiMpOen1Tj4shqC2fcZq9z9Py0GvZZE+asusteu+j5Wa6fnOq1956IC8vo
+Xnen4WT5uJ99vKi5xfVCDGL/e9+FnuNpOfxalye5dCyOFvEg270/JIaYxed
/2mWy16N6PkVNbq5jclo/oS9/tDzJM6/b993Oz0T8eElPU9R4+mJuCkez9nr
Jj2/pkZmxCxHr5fsFUfPb6gx48mwd0teiahe7vlNNb5s6bF/RyF7zaXnt+hZ
UVf1yTcibij0PJ37v8KgimlFItq50vM7XL+yqYfyi9mrAz3PUPPfb0fcfpeI
eFmTnmeq0b9NpZf1PonAF3r+QI1B2/38Hb+wVw49z+I8m//HbMhXEX8u0fNs
7r/i/SH67yKk/fT8kRrXa02uHVDGXqvo+WM15lYaGrLhl4hG0+n5U3r3xs3s
8B8R/uPoeZ4aEc8nz0n8x1696fkLzjPL6Oc5FSV0b0HPX6rhtarGkE+VJWyq
TM9fqfHVP/SgRVUJH97Q80LOw2/9/7UylzDqDj1/o8bOtrXH9a0uIfYUPS/i
+bEx3zu2hoTq5Z4Xq5Fv3uGtdy0JUxbT8xI1gn/62gfVlnDDk55/4PyzfjV5
Z10J7dzp+Sf64bss8lQ9Ccs70fMv/DzHkXfTGkh4aU3Pv6rRYMrgn/mNJKCM
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
7BI05yp7HaTns9h34WHV6usy7NfS8zlaDIpu2mrXTfbypecBWiw3W/vm+C0Z
b9T0fJ4W+2Z+P3I1XcaQflzeBVqsv2/yyrnDXjb0fJEWP2uk2RRnyKhc7vli
LZQKPR78y5RhekfPy//ucMOuZdZZ7JVBz5fx+rvMHdpny2hxlp4v18LP0j+j
7yMZC3fS82Atoi4Wzhj1mL2W0PNVvP46qfr4pzL6TKLna/j68Vm75+TJ2Dac
nq/l+jVTd1n9gr260PMQLY5GPI6PyJehakDPN2hRM3nKwOMFMk7+ouebtOgy
rcLVlNfs9YKeh2rxb9EeZL+VMeM6Pd/K/fFg2PmidzJux9DzbXy/RwX7v+/Z
axM9367Ft9tJ2+t8lLHGn56Ha/Gw88aK7T6zl0TPI7SYPs5nYu9S9nKh55Hs
21B7dfg3GQdt6fkeLfYLY1oYfrBXuef7tAj/Ic3y+8len+j5Aa53ZkDKit8y
Eh/S84O835SDtXb8Za8Een5Ii1FHClWxFRQs3EvPo7W47Nkv7EolBY+D6XmM
FrHpBzIzzRT08aHncVqkJbWpXlhVwbYx9PyYFmEtLziXmSv45kTPT2gxNHmi
dw1LBapm9Pwk5/eKjqEtayo4WZGen9ZiyBDzc92sFNR5Tc/P8vln/7IG11Ew
I52en+d5sK/7UWet4PYJen5RC+eqqOJTX4HDNnqeoMW7YWvqBzZUsGYhPb+s
RfH9TzabGyt4a6LnV7Q4viCg/cGmCtzc6HkSz3uzZnbnmys46EDPU+jFxuft
0loqMCv3/Bpff/xa82etFIz/Ts9v0B9teu1PbRQkPqHnqVr8Vr7+rWyroGUy
PU/jvNzl8qZBBwWLDtHzdC0al5xIt+vIXuvo+R0tRti5xTo7KOjrR88z6E37
Sis9OinYruV2zuT9JebL47uwlzM9f6BF2/RixzndFKhb0/OHWuS2bvFzZQ8F
p6rR8xwtXu+cmxTuxF7v6fkjLQ7W+hMU11uBbyY9f8zPGxvrkthXwZ1z9Pwp
vf1v5c9MZ/baRc/ztGh3aP3Rgv4K1i6j5y84ryemKD/AXpPpeb4W4z1szS1d
2WskPS9g777n45oPVhDVjZ4Xcp7+njeqixt7lXv+Rou53j5FA93Z6w89L9Ii
R9y4VD1cQdJLel6shXZfobXXSPa6Sc9LuL71fffO92CvOHr+kfttjWPHkDEK
nmym55857x+0PLp7HHvNpedftPwd7OZ4Us1eCj3/qoVv76hDV7UKvg+k59/p
+69+zbMF9upAz8u4v/Mt1r+V2KsmPf+lRWRK7Z+/FAV1v9DzP+zrO8ZUy8he
OfT8nxYR8ekpNuPZ6xI9r6BD5tygVt0nKHDcT88r6SDP958/eBJ7raLnZjpE
bo66o/VSUDSNnlfVISG0XgtvbwVDx9Fzcx2OeiR5LfRhr970vLoO3bbHHV0/
XUGVcs9r6HC7f+6HPb4KPCvT85o6ZNQb6nDKj73e0HMrHYR33z2vzVZgc4ee
19FhWGhRWLa/gsWn6Lm1DuOe2lx7O5e9ttPz+jqU7NhZ8mu+gn6L6XlDHfQ7
JOtaixTs8KTnjXU4GWPqbhPIXkPpeRMdkvccHdVtqQJNJ3reTIcuQ10nDgpS
cNqanrfQYcpMmwDNCvYqo+c2Ohx6N2S510oFM5/R89Y6nt9z6+avVnA3hZ63
1aGS1ayN69ayVzQ9t9UhWD1/Q2SIgnXr6Xl7HXLa31l9fAN7zeLxtdPx98iM
wORN7CXQc3sdfwfrfR+EKjjUn5478vHnCLlwK3uVe95Zh9P/Og76sY29LOaV
/wersW+XRfvq4QqSS+h5d/ba0adKswj2ekDPe+iQfiX+mWMke12g5046nHu6
8dSAPQqeRtLz3nz/lQtBY/ax13J63leHF117eXgeYK8p9NxZhy0VqjeYE6Xg
xyh63p/3/71bTvBh9upBz6HD3Zcnt24/wl6N6bmLDptC1ow6EqvA+t/ewWdd
deibcrFSwlH2ekXPB+tQOGrQydvH2SuVnrvpsOhXeyXvpIJOx+i5uw7HQydV
/nSavbbQ8+E6/juwwsFK5xS8m0fPR/D7H//uUu+CAncDPR/F9U4dntsunr0G
0fPROqz9/mdar0sKqpZ7PlYH58pWf4ZeUTDBip6rdFhyNnClmMRepfRco8P+
3NE1fVIUtMql5zodzvcOWr/omoLAK/Rc0OHAjoaWG26w1wF6LunQ5HqtoD2p
CpzX0HOFfYKnfDuRpiB8Bj03cL/t7zAx5TZ7qei5SYcNr0bcfXBXgbYvPffU
oXrd7B6F9xScaUnPJ+oQ9OXG1u/32asKPZ+kw7zRNp/NHyrwK6LnXjo4fXzu
3iRHQcZdeu6tQ9aO6rvsc9nrDD330eG/epHvnJ8oCAmn59N1aG0b0XPUM/YK
pOe+OlQJq7LA8Jy9JtJzPx36dHwc7/tSweFh9HwW9+Ph5j+WvmKvcs/n8Pxl
3+4cWshe9el5gA6PFhaPP/BGQcpPej5Ph7nK/E1nitjrOT1fwM8fMDf+ejF7
XaPni7ifCgufZ5coeHaEngfqMKDxjYpvP7LXRo6rJTpE7Gzc4udn9ppDz5fp
MLRbXk/LrwrKRHq+nM/vbeTe7Dt7gZ4H63A17rrWsYy92tHzVTpcaFJk6v9L
QT1Ler5GB8QGTfb4w14f6fk6HT612+Jl/MdeWfQ8hOd5eLOJMyvq0Tmenm/Q
oVNeM2VZZT1C9tDzTTp8OBA2OrSKHsUr6HmoDgMNawYcqKbHsKn0fKsONzN+
2J2x0OPwaHq+jfst/qXVdUs9qpV7vkOHzy+HfnpYU4+JTel5OM9PNYc7r630
SKlAzyN0CCteF/Wjjh6tC+l5JOfjWJ/5FvX0WJJGz/focOfXLfcmDfR4dpye
79OhXnR0PftGevwXRs8P6HC4qcXjfk302LmAnkfp4FevKGJEMz3KjPT8kA4O
qpGi0kIP3RB6Hs3zv7O79XQbPc7a0/MYzscju24sbq1HvTr0PI7357IuYENb
PWZ9o+fHdGhsU6HNHls97j2m5yd02Fv1Z+rxDuyVRM9P8Xqn5/skddRjfRQ9
P837f7OseqYDe62l52d18PC0PvCyE3vNpOfndQh/6dDnSxc9ojX0/KIOUe0y
Uit3Z69yzxN4vXd/1PV6slcren6Z8+3T2adte+lxtSo9T9Sh4NsvY88+7FVM
z5O4Hy7czhvcj73u0fMUHRZ8dxA1/+mRd5aeX9Oh9/QmGZMGsFcEPb/B8/c4
zCXAhb2W0vNUHdx/7zu60lWPn5PoeZoOrdYPaLh9MHuNoOe3dXg5ctqCw27s
1ZWe39FB+uHw+Ly7HvUb0vMMzudhgU6pw9nrNz3PLJ+/E0IejWSvF/T8gQ6D
sp7lvfXQo8sNev5Qh1fB7x1/jmGvWI7nHJ7njE0B1VV6vN9Ez3N1ODUtPaGJ
Ro/hAfT8sQ6NmkT+6ahjL5meP9Xhz8ZqffuJepiXe56nw8oQC7/hsh6T2tPz
F5yPtw4clPTsVYOe53M9K+c+mGrUo81nel7A8/wp+t+C8Xoszabnr3V4Orq+
7boJ7JVAz9/oEJrbbGjEJD3676PnRTqYuydNjPXSI2IlPS/WoYWmcmCCN3v5
0PMSztP4/NB0Hz2EsfT8I38PdPM88GS6Hud60fPPOoyas+x4sS97NafnpTp0
cB54/refHrMr0fOvOojYH19jjh6Zr+n5dx3O9I262CyAvW7T8zIdcvOHn3GY
p8eGk/T8F9ezdEuM8wL22kbP/7BP22W7Rixir0X0/J8OG+3rrZUD9Tgynp5X
FLAqefhsn6XsVe55JQGJe+yEhUHs5UjPzQRcX3S0z7oVelyrS8+rCiir/bh+
xEr2+kHPzQVsrHP8fcxq9npKz6sL2OLUKSl+rR7Pk+l5DQG5TpqNaSHsdZie
1xJQN7WD9HgDe4XQcysBCfujWr3bpMcvP3peR0DHRRn5P0PZS0fPrQUssTy0
t3oYe/1Hz+sLuGhmLzXZrkeDNvS8oYB9LZTaHcPZy5yeNxaQU6t/Up8I9npP
z5sKuLvmzjT3SD263qfnzQSkuVk1EPaw13l63kLA658VLnrt06NkFz23EWAl
HBDmHtBjRBA9by2gUsOfpSuj2MuLnrcVoH1bad22w3pYlHtuK8Bv+ZUWh47o
Mbk7Pe8gYENEl7izsezViJ7bCbhcoOl1/agebf/Sc3sBz627X8o6rseyfHru
KCAm91r/gpPsdZMcdRYQ+94qofS0HgOO0vOuAvpXqNvT7Jweu0LpeXcBW6+l
R1tfYK+59LyHgPMf0aRNvB6inp47CVjcY0Zwt0t6nHel570F7HDVlbhcYS87
et5XwLqM32PGJOkxpxY9d+b1Q5QTxhQ97n+h5/0FtHVcUMP3Gns9oucQ8N2o
8Qy8ocfGy/TcRcC33A9n1qey13567iogfcRQs8g09lpNzwfz+cnGUXG39YiZ
Ts/dBFx72ntLwl32KvfcXYDRkJmVdo+9+tDz4QKu7nK0fnxfj+st6PlI7j/3
4SOKstjLjJ6PEvDD2mFpWTZ7vaXno8v/rjLjhHmuHi/u0POxAvKu9nnW8Al7
nabnKgH/LL2qtn/GXjvouUbAwG5yR6fnevxeTM91AvxfNxg2+CV7TaDnIvs+
3j5R9Yq93Om5JKDepZcLPQv1aNiZnisCBjl/3eD3hr3q0XODgI/V7kUuLWKv
MnpuElD/rn/0xmI9uuXRc08BC/H62O4S9rpKzyeyT/U2J49+1ONDND2fzOef
dDx+6bMeIzfQcy8Bjz3/RaeXstdseu4toJbH3t2Pv+lRvdxzHz4eUWdT0Q89
vAbQ8+lcL/PRi8t+sldbeu7L9eymn2z+R4921em5nwC7AOcRDf/pEfSBns8W
8DDonYNtRQNePKDnc3h+qvhY9KxsAC7S8wABmdGXX7hWMSByNz2fJ+Bzs1dn
xlYz4Pdyer5AQLLl0xUmCwMkb3q+SEBK6yNjfC0NuOBBzwMFDKs1onFgTQMa
9qTnSwUEz095EmJlgH8Ter5MQIB1nYiIOgY8+Jeenr6c+2N5T22MtQHdCshv
sIDT87vWuljfgE236PkqAU57qiTdbGjAh2P0fA3P856TM7IbGzByKz1fx/Pc
vk+TwqYGxM6n5+sFtH6+I7G0uQHVyz3fwM+bnTW+so0BXoPp+SaBv5uKK9Rt
bcCNjvQ8VMDQp3nhNm0NaFebnm8V0Lfq8S6dbQ0I+krPtwlQnVGS/+tgwMtc
er6D82XLW48RHdkrkZ7vFGA9SvVIdGCvg/Q8QsCktZH6KZ0M+LOGnkcK6Pbt
Zl5AF/byped7BLzp9UAO7sZeanq+T0BGWWLWlh4GNOrH7XdAQOWCDcP2O7GX
DT2PEjB/n0v8id7sVYWeHxZQ4fHD9ol9Dej+jp5HC+jTa/TGO87slUHPY/j9
DEdLn/Q34OMZeh4nYM3vT6p3MGDUTnp+TIDN2aYnygay1xJ6fkKAZw8HC/PB
BliWe35KQKeWbZUGbgZMGU7Pz/D7tzCLa+vOXl3o+VkBP3PSf3QbboBtA3p+
XuDvi8VwGWnA8l/0/GL5+5su9/Bgr+f0PEHAqx97U5QxBrhcp+eXuZ861vs3
dZwBu2PoeaKABrKf03w1e22k58kCSrpdmrJKa4DsT89TBBSqv24PEwy4KNHz
awKGT2169YDEXi70/AbPa+Mu704qBgTY0vNUAeeq9KiVZDAgy5KepwlY/bC9
410Te32i57cFmLrWGPrU04DND+n5Xc6X+Bf6dxPZK56eZwio2DR6Ztlk9tpL
zzMFiKXjl1TzNiAumJ4/4Pkptlpb34e9yj1/KECOPr6pzXT2GkPPcwQcvjN4
S1dfA2460fNcAWMrZmwe4Mdezej5EwGpBR4hI2ezV0V6/lSAxuZ6kORvQH4h
Pc8T0ETd3X/KXPZKp+cvBNTssH1CwHz2OkHP8wVU/e/rqBULDfgbRs8LBMT1
Gt4zdDF7LaTnr3m/8eEN9y5hLxM9f8v1mvrq69FlBjR2o+dFAnoUd8hIWM5e
DvS8mOc1zyvqVjB71aHnJQJs3xyYm7PKgB7f6flHfl700yGFa9jrCT3/TK+v
W9cpXWfApyR6Xiqg53O37IobDPA4RM+/CXANn7/DahN7raPn3wVMCIvVNg81
oEa552UCwv2f1bHfaoC3lsftF+fJk9o3e29jL2d6/kdAqPeg+UN2GNC+NT3/
R6+S5nVQ7TRgRTV6XlFE/6ATmaZd7FVMzyuLuDm6eO6M3QYMzKTnZiJGp3Vs
umivAXvO0fOqIu6ETruwZj97RdBzcxHWw8+M237QAGUZPa/O92+qVHTwkAHx
k+l5DRF+5pqFp6LZayQ9r8XHHserJ8UYMLcbPa8t4k/VulvvxBnwsCE9ryOi
/d0FTZ8cY68/9NxaRJ5bya63JwwIfUnP64t4W9u72fdT7HWDnjfk49QPYWZn
2SuOnjcWIdVdUrPueQOObqbnTUWErm66pOVF9ir3vJmIlDvJJQ4J7KXQ8xYi
fizxF/peNiB1ID23EVF/QK9Et0T26kDPW4vIPVSljTqZvWrS87YiCoWXS8df
NeDVZ3puK+LIl9tPZlxnrxx63kHEXOvU7otustclem4nYpH2QfCaWwb820fP
7UUkKB+ztqWz1yp67iiiwdXmrQ7eYa9p9LyzCPcOitfJDAOajKPnXUW8aX8s
5kome/Wm591FeBnrvUt/wF7N6XlPEfVmhNjmPjSgZ2V67iSi7qcm+tc57PWG
nvcWMTno0qbSXAM+36bnfUV8TJ6TVPGpAaNP0XNnEZNGDHpfK4+9ttPz/iL0
CXb1m70woGa55/x17HbMto9dvgFTPen5QBE+Sf0EpwL2GkrPXUWUrp8yx/W1
AR060fPBIp6fOh4y+q0Bwdb03E1ErfQ6+5R37PWDnruL6DUr5KT3ewNcn9Hz
4SJKBrW9EvDBgL0p9HykiANPHt5Y/om9DtNzDxEHsw6mb/pigH49PR8tolHa
ptuRXw1ImMXxMlbEP+3OWzHf2Uug5yoR/RqmpJwvM2Bef3quEbF8v8WFa78M
yG5Dz3UiZm2bcSTzD3tZ0HNRxPyQr9vy/hmwpYSey7wfqzv4VsGIz/fpucL9
Wnri1O+KRoy+QM8NIpyTotpWrmzEsUh6bhLhmhIbamFmRM1yzz3Z0+1qhdpV
jJg6hZ5PFDE7/P3UBlWNuDWKnk8WYWthl9WsmhEdetDzKdzvz/2d25gbEdyY
nnuLsPLJ3mtnYUTBX3ruI2JC2bAqXaob4fqKnk8XEf7g3iQnSyP2ptJzX67/
MJ/rzjWMqFDuuZ+I1lFN2rrWNEK/hZ7PFlG559NA91pGJMyj5/4iCgaefuRh
ZURTAz0PEJHfdE9XTW0j5g2i5/NEVK2xd6Vcx4hsO3q+gPvRcO7x+LpGOFnR
80UiNpryHadYG7GllJ4Hijiub7d4Rj32ekTPl4qYsW9R+pz6Roy5Qs+DRCyc
W9xoYQP2OkDPl4uY5+DnuayhEbXKPQ9mbwur2FWNjPCZQc9XifCWUz6vb8xe
Knq+hvtvxoZeW5sYYdeXnq/j+QuZNX9nUyNWtqTn6/l9KvvG723GXmb0fCOv
13TFz0PNjRhURM83iciwOdXraAsj9t2l56Ei9uh/+p1uyV7lnm8V8amlFHvR
xghDOD3fJuL0saz8xFZGXAqk5ztEpOq8G99ozV4T6flOEZUmNR55u40R84fR
810imrTOX3y/rRE5nel5pIgr2TeOPmrHXvXp+R4R6+/deJJna8TWn/R8n4ja
Yr55YXsjvuTR8wN8fXyT7sUd2OsaPY/ierlMlz7bGXH8CD0/LKJbj2dLf3Rk
r3LPj3Ce5XlH/bVnrzn0PIbzLqReqpmjEWkiPY8TEbvy8dvqndgL9PyYiB2N
Es3rdGavdvT8hIh2a5LbNexiRGF1en5KxADbfDTvyl4f6fkZETecWotturFX
Fj0/J2JdlSUz7bobUbHc8/Mihj35Hdy5B3vtoecXRRwz2xHesyd7raDnCSI0
N1Wx/ZyMaDaVnl8WkebbJcGlF3uNpueJIoLdHG659WavnvQ8mf23Dn04so8R
vZrS86siJh5c8XxcX/aqQM+viehwJf+N0I+9CvhxN0TMdPD8YHA2YmwaPU/l
eXMyK534H3sdp+dpIprZ3vg2tb8RVuWe3xaxbVDs95kDjJi2gJ7fFXEr99S3
ALCXkZ7f43nq+uzLIhcjOg6h55kisjfZfwgaaMQqe3r+gOd7UMSb1a7sVZue
P+R+29Tl+YZBRgz+Rs9zRMjJb7K2DjZi/2N6niuid8trqTuHsFe55084zz5e
i9/rZoQxip4/4zwMfBdzaKgRl9fS8zwRmXWdwuPc2WsmPX8hAqUHg08NM2KB
hp7ni9gytd/MC8ONeNSPnheIKEv8JlwZwV6t6Plr7i/nHFwbaURYVXr+lvvB
9nm7tFFGlL6j5+84z6/XsrjnwV736HmxiCUTJhQ9HG3EibP0vERExNAXqU/G
sFe55x95fi6uOPRyLHstpeef6V/FsUFvxhmRPomel/LzJg1RSlTsNYKefxOx
r7Nnz1I1e3Wl5z9EdDp42PKnxojXDeh5mYgFtRo+/6dlr9/0/Bf9OXn0ZBWB
vV7Q8z8iXj+aEWQpGlGp3PN/IqJuiWPrSOwVSz4qSpiQPqNlQ5m9NtHzyhKG
2x4raqYY0TyAnptJmNGy8enWevaS6XlVCY/+xi3oYGAvF3puLmGJ5XSXTkYj
eren59UlDFsnVOlhYq8a9LyGhJo3fW/0Gc9en+h5LQmbq5xeOcDTiHHZ9Ly2
hPVr2wwZPIG9Euh5HQmH91ypNHyiEbXLPbeW4L921aXRk4yYvpKe15cQuHmx
v2Yye/nQ84YS+v3e6yh7GWE/lp43llDL6stL0xQjVvei500ljKnjFzbZm72a
0fPmvD/3lkOnTTViSCV63kJC1z8/v/v5GHHgNT23keAwq0rU3GnsVe55awnj
PvUfu3i6EaaT9LythNhLh34HzTDiyjZ6bsv3t8DB1b7stYied5BwU2c+YsNM
IxaOp+cdJbifqvBpi58RuW703F7Cwll2W8JnsZcjPXeU0CxvWc89s43YVpee
d5aQ0a9m1sE5Rnz9Ts+7Suhy96ZfjD97PaXn3fn5z87UOhFgxMlket5TgtXx
B4fPzmWvcs97SZi5qp1Lwjz2CqHnvXn9uMPZSfONuO1Hz/tKeO6p97mxgL10
9NxZgt+nIf/SF7LXf/S8vwT7neM3Zi4y4k1reg4J7aNOtMxZzF7m9HwgX6/t
Efc0kL3e0/NBEixLi3rnLzGicrnngyU8TcxKfrOUvc7TczcJNyp9HVayjL12
0XN3CTv+Dr33JciIFkH0fLiE2mX31GXL2cuLno+U8MRpY87fFew1kp57SNjz
O0gwW2lEn+70fIyEovVxORar2KsRPR8rwblbTY3Vavb6Q89VEqrb779Xb40R
qnx6rpFw5tKM4U3WstdNcqmTsKnTrJSW64yoc5SeixJeJsX1aRdixIxQei5L
eBbf8mjH9ew1l57rJRwxptp02WCEg56eGyRIpUc29dxoxBpXem6S8PPi1Qr9
NrFXB3ruyfPwo8F0bDbCrRY9nygh8+PeR4NDjTj4hZ5PlnD79UTX4VvYq9zz
KRL6tvKMGb3ViPGX6flUCQ+e76ijCTMicT8995Ew1Lu6v7SNvVbT8+kSulc8
k2PcbsSi6fTcV0Lrtzv6TNphxONx9NxPwtaJF7ZPDWevPvR8toRfF6y/+e40
YnsLeu7PHnbRY/wjjPhWmZ7PlVD/x7yYBbvY6y09nydB8QquvDTSiFN36PkC
CcmX7gjBu9nrND1fJGFyv3FH1+5hrx30PJDzo229ipv2GnFnMT1fKuFyfJ2x
YfvYawI9D5IwbdCIvTv3s5c7PV8hQa54tWTPASPedqLnwXx/z3l9ow6yVz16
vkqCRxuf5TFR7FVGz9dwP9TclX78kBFm5Z6vk3CuVw3rs4fZ6yo9X895kH9B
Gx/NXtH0fKOEa+OiwhOPGNFyAz3fLMEi7d7jazHsNZueh0q4tNa5aVosewn0
fKsEt5xCXUacEX0H0PNtXM/PGVuyjrJXW3q+Q0KLFr/u5B5jLwt6vlPCm50T
qz0/boT6Az3fJWH50dr9C06w1wN6vpv7b/tvv6KTRtS9SM/3SAgOt4v6cMoI
3930fJ+Eb9+3ZZeeZq/l9PwAr//ZrdrPM0Y4etPzKAliWp+e/84asdaDnh+W
8O/qNJPZefbqQc+P8PvZvFprccGIoU3oeayEvza7Tte6aETUv+/j8uMknKi6
47F1PHuVe36M+9c6p0LjBCM8b9HzEzy/q8W2LS4ZkXSMnp+SsCzaZkiby+y1
lZ6f4fc503FShytGLJ5Pz89xPpXMXe6YaMQTAz2/IGHsVsu93ZLYazA9vyjB
rvhlfK9kI3Z0pOcJ3O/d/z1wTjHiuxU9v8x5FGcsdrnKXl/peSI/L7xaJbdr
RpzOpefJEnL6ltYfcZ29Eun5VZ73DNsOY26w10F6fp37JWJ3b81NI+6uoec3
JLx9pneTUtnLl56nSqj3aILKeIu91PQ8TUJk2gnDxDQjivryeNyW4PR98BTv
dPayoed3uV8iWs2ccZu9qtDze5w/vwcFzL5jRJVyz+9LmK45vmDeXfbKoOcP
JNQp9ly8OIO9ztDzh9yvfwyBQfeMsNlJz3N4Pm4dWLwqk72W0PNcCfO3dFsY
cp+9JtLzJxLSwi3mbn5gRL/h9PyZhMLmHf22ZbFXF3r+XMJHZYt3xEP2qk/P
X3C9w4ea9mYboflFz/MlNKrvponKYa/n9LxAQq8aG91jHhlhfd21/H9QjcGJ
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
jAl/tPR8IvdXUEpyq1j2+o+eT1awZ3XYpHZxJlxsTc+nKMh8n29ud9SERub0
fKqCJoUx0Q7H2Os9PZ+moO3hkqFdjpuQlUnPZ/D6U2ILu59gr/P03FfBb0PB
sl4n2WsXPffjeiTuaN7vlAkfl9Hz2QpeJ6We7X+avbzoub8C4/Y5owaeYa+R
9HyuguR5u14NPmuCZbnn8xVM2+kyz/0cezWi5wsVnOs2vsbI8+z1h54vUlA0
+9+u0RdMsM2n54EKXLc17qS6yF43yflSBT/uHE/QxrNXHD0P4v4bc81dSjDB
JZSer1BQc5w2S3+JvebS85UKIi0mG8ZfZi+Fnq9W8D669PXEKybIrvR8Dc+v
V4UZUxLZqwM9X6cgbsGaUp8k9qpFz9crKGsQOtc32YSAL/R8o4IzM5r8mpXC
Xjn0fDMfX7RZGHDVhB6X6fkWBZcdon7Nv2bC5v30PExByM8j8xZfZ69V9Hyb
gge6zt+W3jDBYzo938H9s7D7zBU3TYgbR893cl7uOFe0KpW9yj3fxfn4Kn78
ulsmeLeg57vZfzMebUgz4WZler6XPXMGjwpNZ6+39Hy/gsNv05LCbpuw4g49
P6DA7Fdm9/A7JuSfoudRCnIhHdh1l7120PPDChZ9mGC9N8OEPYvp+RGe334f
lxy4Z8JfT3oey8e6P8WHMtnLnZ4fVRAzf5025r4J8Z3o+XEFNx7uSjz6wITG
9ej5Ce6/PV07nMxirzJ6fkrBoBpD1595aMLDZ/T8DO9n5IvP57PZ6yo9P6fg
5/Y/6oQc9oqm5xe4vq12nbvyyIRP6+l5vIKwZokNU3LZazY9T1BwImGS//XH
7CXQ88s8P06b7qc+MaFGueeJ3L8JAzrffspebel5soJHQX6rM56xlwU9v8r9
cMXu5f08E9p/oOfXFQTvn9gn+zl7PaDnNxV08rTdkPuCvS7Q81QF7bv55D99
acLA3fQ8TcFX115OL/LZazk9v83zmb5y5atX7DWFnt/lefmjZL8uMEHxoOf3
FFjWvNjuXSF79aDn9xXsc4jwK3nNXk3oeZYC641mlz+9MWHuv9aPyx4qOOD9
pdrXt+z1ip7nKAj94DX6R5EJPW/R81wFdcdO3PbrnQmhx+j5EwXDrr158reY
vbbQ82cKhIVfbCqVmDB6Pj1/rmDskRWeVT6YcNRAz19yfi7bfcD8I3uVe55P
b3u5vLL8ZMLUjvS8QEHeL+/WVp9NSLWi56//p+i+42ruAjiON7TMzJA9s7L3
6PsYKYQkEt37G/feSAghtOxSZpRkJ3vvEUJGEckmOyMjKlpSz/f8eV7l9ruf
3znnfX7P48oLs0wbamvks9cfep7thTOh4zfX/i1j+Qt6/s0LIXvqP6r7R0bW
FXr+wwsxew2VGxSwVwI9/+mFpDN9BzUulLFzJT3/5YVj5psDmhXJKJ9Bz/O8
UCt10aGWxezlTs9/eyGya/5ruxIZiX24fAt4v+fkVGv/V0b9JvS8yAvVrs92
6FjKXmb0vMQL7UYumdbln4ynX+l5qRcCnRtu7l7GXun0XPy998//3ehVzl6n
6Xk5jzaeuTl9jRTkbabnxho8eNTOxsFYwehQem6qwcew3P4DTRQc0dNzMw3y
9g1Uh5gqqCI8t9Cgq3fjFU4VFEztRM+tNHjxZ8X+4WYKUmrT84oaVFsRmDrS
XIHdX3peWYOcEf+yXS0ULH9Lz6tqsHJ+RUt3SwVZN+i5tQY/Buxu4WGlYNBB
el5Dgzr3Ux0mVlSwcy09r6VB0cTgCZpKCsrn0PM6GiyyuTJTrqxAM5Ge22iw
uuuqMF0VBYmg5/X4/e++bPWuqqB+K3puy583NuO4TzUF8yvR84YaWF5yTp5m
reDpL3reWIO2LqMe+1VX0OMJPW+qwdYeH7Jm11Cw4SI9b66BxUGz/Lk12WsH
PW+hgUnmmfL5tRS4LqfnrTRo/LegYlBtBUen0nM7DT70vlkrtA57Cc/banA3
pUXDJTYKfHvQ8/YajMis0WJ5XQWptvTcXoM7u9a2Ca/HXsb0vJMGB0Zu6xBZ
X8GKT/S8swZ9qvfrtMZWwcc79LyrBim2Pp3XN2Cv4/S8uwYx2+06b2yoYFc0
Pe/J+5E2r+OmRgqMhOe9NUh6Or59XGP2kul5Xw2m5dxuva2JgkuO9Ly/BsUD
7zTd2VSBbXt6PkADf3Nt/d3N2Ks6PQfnw5Sl1fc2V/CsgJ4P1MBxW1+LAy3Y
K5OeD2bfR0v/HmrJXlfpuaMGm/tLOUdbKcjfQ8+dNHCreO/NidbsFUnPh/H7
p967f9qOvWbS8+EaVFovXz7XRkFV4bmLBtFHVhy82Ja9+tHzUeyZi5jL7dir
KT131WB75KpFV9sraGNBz900mH50mk9yB/b6Ts/dNfi28p3rLXv2ekDPx2uw
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
ev5VQrvsi65fa+kwW3j+jeelqhcff62tQzPh+Xeuj2pxHt/qsNcRev5DwqIq
k158s2Ev4XkO50vbMs/vddlLeP6T55/wRS++12Mvc3r+S8yvTx4/6uuwej49
z+X9W9/+yQ9b9hKe50nch8eOyWnAXhp6ni9hQw9NWk5D9npAz39LOP/UeejP
RuwlPP9DH5bZJP1szF5n6DnHf6VbPX810WF/G3peIGFb5IQjv5qyl/C8UEJ2
m3vNc5uxl/C8SMI6z5abcpuz1yJ6XixhMLSV8lqwl/C8RMLh0oVBeS3ZS3j+
l/2PL8zJa6VD8nN6XsrzY6hGk9+avYTn/yRMWdkiLd+OvYTnZTx/56b1+d2G
vTrT83IJj5967v3dlr2E50Yyqmnu1PjTTodOwnNjGQUJjYP+tNfhTTg9N5Fh
/mD8pz8d2KuUnnN83Mh/ZIE9ewnPTWXox/mfLujIXu/oeQUZEfketoWd2Gss
PTeTsbS4aWhhZx2GC8/NZRwOv/+hsIsOJb3puYUMzxuyY1FX9jpEzy1lvE57
treoG3sJz61kLE7uZlncnb2E5xX5+qlzvIt7sFcFel5JRm/jLTeKe+pgEJ5X
lnEtfG+zkl461BaeV+HrL9sUXNKbvSbR86oyOtWe8bykD3sJz6vJmOLZruvf
vuwlPOfYbm5axN9+7HWKnlvLCA93//C3vw6LhOfVZew8fb136QD2Ep7XkBFi
W3dNqQN7VabnNWXYZ475UAr2CqHntWScquvf499/7CU8ry2jSt7CsH8D2UtH
z+vI6Bbu8/zfIB22PKXnNjJsyx3alA1mL+F5XRlH/EvnlQ1hr0R6Xk/Gk4o7
bpQ5sldHel5fxpz3bWuUD2Uv4bmtDEODrV7lTuwlPG/A63tesLfcWYezK+g5
x+v69MotH8ZewvOGvH+S3NtoBHsJzxux39RZoUYu7PWGnjfm14Om3jQayV7C
8yYyrM6MqGQ8ir2E501lKD3qjDIerUNGT3reTEaDxrfXGbuyl/C8uYy3a5WH
xmPYS3jeQsboQx9rmrix1xp63lJGxfWubiZj2cuEnreSsVvZs87EXYcBwvPW
Mo4NyLpnMk6HH5/puZ2Mc46VKpmOZy9Pes7xoDhbR1MP9hKei8+hTKodajqB
vRzoeVsZrw4WnTP1ZK8T9Lwdx/tu/DKdqMME4Xl7GQP8A1tXmKSDpfC8gwwf
+4ZeFbzYqyI9t5eRXLh3XQUNewnPO3L+/mpwo4KWvYTnnWQs7B1YWEFiL4We
d5axJO+GnZmsg7/wvIsM634lHmaKDs2F5135+j3qhZmp7HWBnneT8ci4+Rkz
HXsJz7vLWHnZ5oOZnr2E5xxfjyysam5grxr0vAfXX+S13ubeOqxZRs97ygh8
HaCaT2Yv4XkvGS676keaT2EvH3reW8bgor0nzX3Y6xU97yNjgVHTF+ZT2Ut4
3pfr++WycnNf9rpGz/vJKNr7pLnFNB0OdKfn/WV4rKg51GI6ewnPB8hoG9tv
isUM9hKeO8iY/s91pYUfe62i55DR6JHbAYuZ7CU8/09G+/4DUyxmsZfwfKCM
FR4NP1vMZq+P9Jzjeo4fTS392Ut4Pojzr+XmxpZz2Et4PliGZNOvj+Vc9upP
z4fISOtzx81yHnsJzx1lvDg61NcygL2E50NljI0+vsRyPnttpOdOMkyrWm22
XMBelvTcWca+HiOPWi5kL+H5MBnlHRddtwxkrx/0fLiMpHq7nlgGsZdEz0fI
fF4//sUymL2E5y4y+vc/UmwZwl5D6PlI9j4Ta2UVyl7n6Pko7ifbZte1WsRe
wnOOO9bu18pqMXsJz0fL6Nonv4vVEvaypueuMiw6xA6wWspewvMxMnpUsXe2
WsZewnM3GUNKjo+xWq7Djcn0fKyMkzVbTrRawV7Cc3cZfwNWKFZh7CU8Hycj
yvn5ZKtw9kqi5+NlfN1df7rVSvYSnnvI8D0wfJZVhA6dhecTOH/n+86xitTh
bV167iljXuegeVar2CuCnk+UkZgbFGC1mr2E55NkbHk+PcBqDXv50XOOJ1uO
nme1lr0+0HMvzu+tTedYrdNhhPBcI+Pj2Q8zrdbr8Pc2PdfKqDsveppVFHv1
peeSjH4lvSdbbWAv4bnM+SHdk602spfwXJHROsXN0yqavaLouSrD0S3V1SpG
B2/huU6GWaMuTlabdKgjPNfLWO4U0d8qlr2+0XODjHe5jztbbWYv4bk352/v
Gi2t4thLeD5Zhl9/2FhtYa9B9HwK329DydJqqw6Lhecc1yieWWS5jb2E5z4y
ZuTM+Wy5nb3i6PlUGfca+D623MFeVem5r4xm8WOvWe5kL+H5NBkTd3Q8YrmL
vfLp+XQZctd/myzjddhqoOczZNgsvLTYcjd7Cc/9ZHhF+021TGCv4fR8pozK
u+u4We5hr8v0fJaMwmtHe1vuZS/h+WwZOdX7Nbbcx17Cc38ZF49eNLXcr8O5
OvR8jowmF+0/WxxgL+H5XBmZYzamWBxkL+E5xwc2/jxgcYi9ptPzedwPd/WP
sDjMXsLzABlDY0J8LI6wl/B8Pt9/1Gkni6M6PLxJzxdwfzj9pqXFMfYSni/k
/m1bZmxxnL2E54EyvmdZvzI/wV6N6HmQjBsd6541P8le6+h5sIwr9WutNT+l
g4PwPESGmlxhsvlpHXLm0vNQrofhXweYn2GvbHq+iPt/WnIt87PsJTxfLEPn
syHb7Bx73aPnS+iFw4RLZufZ6z96znFl35przS7o4Ck8XyrjfZXrstlFHayE
58tkbBo0uYtZInvF0vPlMla3MzUxu8RewvMV7JcVlV7hMnsJz8P4/iLqb6tw
hb1y6Xk41xNifCok6TBHeL6S+1eTij0qXNWhhfA8gvdn2GyjCtfYy5meR/L8
8SojxfQ6ewnPV8m4+cduvWkyewnPV8v4dGLOBNMb7LWTnq/h/t/lfGPTmzqs
rUXP18oIi8rPMrnFXsJzjjX5Lfab3GavYnq+Toa3n4uvSQp7+dLz9dzP7KbZ
m6Syl/BcfC6mz9KfxnfYy5Web+D1Xl9/1PiuDgeT6flG+vN+03TjNPYSnkfL
yDoV3d74HnsJz2NkPPaIzDa6z14N6PkmGZO+z08wSmcv4Xks19MqrWT0gL2E
55t5XvDsX98oQ4eb/vQ8TkZNv5oPyzmeIzzfQo9+vFtZ/pC9hOccN/u177/y
R+x1l55v5fzZOLmw7DF7Cc+3yThR2uRQ2RP2Ep5v5/47MENb9lSHdy3o+Q6e
15YG1ih7xl4x9HynjO7vGif/e85ewvNdXG9zE/3/vWCvQHoeL+OXNKbFv5fs
9ZOe7+Z56cq7jNJMHVyE5wkyAo76hJa+0qH0ET3fI2PNyB/tS1+z11ByvlfG
rAtTnv19w17C830yUqzfLv77lr2E5/tl9Jwxuv3fd+y13Vf8A2mYlH/hUcl7
HSYLzw/IuH+hcWDJBx1shOcHxedMgpuVZLFXIT0/JONn+LNbxR/ZS3h+WMbp
u+19iz+xl/D8iIyy2wurFX9mr1H0/Kgsfv/V8aIvOiwRnh9jb11Ft6JsHboI
z4/LSO8/LL/wK3vtpecnZPx2XLa+8Bt71afnJ2V82XKxU+F39hKen5JRx+tH
WsEP9ip3PdfoNPfT3fV9CnJ02DaLnp/helg3yKzgJ3sJzzk+h8nb//xir/H0
/Cz73A/r9SeXvVLp+TmeDyYmpP/OYy/h+XkZlsaXvX/ns5fw/ALPs68z/uX/
1uF8M3p+UcYu66z1+X/YS3ieKOPuqdxW+QXsJTy/xPP6l7/n8wrZawE9v8z1
c8tkRF4RewnPr/B8PdP8VW4xewnPk2T0MraYlluiw6MMen6VfTZWKP31l72E
59c4353Lw3+Vspfw/DrXX7/COr/+sVdbes7xtZXfd/0sY6+t9DxZRt7oNx1+
lusA4fkNPm8cun82x0iPn4vp+U0ZRhcuIcdYj21/6Pktvn70/ts/TPRwEZ7f
5telqFE/TPUofUHPU2QM77Lw8fcKehx0oeep7NlW9vxupsdE4fkdnicMQ15/
M9ejovD8rozNxnbyNws9zifQ8zQZL+tZffhqqcdk4fk93u87X9SvVnrYCM/v
yxjT7daH7Ip63PxHz9M5P/12K9mV9JgrPE8X8yf07ZfKerQUnj/g/v54oteX
Kno8cqfnGZyfvXo8/1xVjyXC84fic4HVxn6upkcX4fkjGcY5X9I+Wevx7jA9
fyxj0YKrjp+q67GuCT1/ImNPfOzljzX0gPD8KefD8pndP9ZkLzN6Lj53M8D5
YFYt9gqg58/5/dlNmmTVZi/h+QsZxfFFUR/qsJcXPX/J61mZbv7BRo9D6fQ8
k/vduX0B7+uyl/D8Fa9/xKLsd/XYS3jOcaDsOeFdffayo+eveZ6u1e32W1v2
Ep6/4X60uGqPtw3YS3j+Vsa4W9m73jTU41Yol+87+lp+o+qbRuwlPH/P63eK
n/+6MXsJzz9wvSYu+vCqCXs9o+dZMmIWyCNeNWUv4flHGUFbB57KbMZewvNP
PJ8ObGmb2VyP953o+Wc+7y61WvSyBXvF0/MvPM8u+vnxRUv2Ep5ny0gd+9T5
RSv2CqPnX3metL166Hlr9vpLzzl+/utQ1ed2eowUnn/j+TZ384xnbfT495ae
f+f66BNx/2lb9nKj5z9k3P4cZP+0HXsJz3N4Pqg1O/JJe/YSnv/kz3/tk/24
A3sdpOe/6I2kH/LYXo8pwvNcGY3PKjseddSjrvA8T8blMqXkYSf2MqXn+TLG
uxncHnZmL+H5b553H/gezOjCXsLzP9xPouaaZHRlr4n0vID39+wSjwfd9Fgq
PC/k/Zuw4XB6dz26Cs85ttywzzi9B3udpOdF9GVp0tj7PdmrFT0v5v46JHPP
vV7sJTwv4evl/y1M681elej5Xz4/H2zslNZHj+3B9LyU54GwoTF3+7KX8Pwf
X2/v7I93+rGXSs/LZHRptrvLnf7s9YSel8twqPM8OHUAewnPjRRU3V4jNcWB
vYTnxgoWPBtdKwV6XLCn5yYK+0V53f6PvYTnpgp8775MuDWQvYTnFRSsvWz3
4+Yg9lpOzzlemr6g683B7CU8N1NQuVFGwI0h7CU8N1eQdc3+UrKjHo9f03ML
BTderDVKHspewnNLBeqiooHXndhLeG6lYFqGfuk1Z/bqQc8r8udlP0u+Ooy9
9tPzSgpmvnetcHW4Hv8JzysrOP4sfWDSCD1+rabnVRTkfHYPveLCXsb0vKqC
q+3eJV4eyV7C82oKLl2ZVXRpFHt9oufWCmZfqdj10mj2mkDPOZ7uuN830VWP
ScLz6gq6+o1MuDhGj0rC8xoKBnuUZF5wY6/j9Lymgsb1D9e8MJa9hOe1FPR7
YHA+785ewvPaCqxjWwefG8deVvS8joJKq34ePztej3nCcxsF0bcvZ53x0KOV
8LyugvreG+ucmcBeMj2vp6Bwyeyhpz3ZS3heX0FknwnzTk1kL+G5rYIuexz3
nJzEXufpeQMFA973fXTCS4/17el5QwVlVr2NT2jYS3jO8eVeAzoc17JXdXre
SMHN8OEexyT2WkrPGyvwqCsvPiqzl/C8iYIT5cEHjyjsNYWeN+X8mZjw8LCq
x+FMet5MwY4hj0oO6dhLeN5cQeyLSk0P6dlLeN5CQcvuIxwPGtirGz1vyfnk
t9HngDd7Cc9b8f7u/bxq/2T2Ep635s/7M/DYvil63I6k53YKvszZ+2CvD3sJ
z9soGDGodt6eqewlPG+r4HtAZPU9vuyVRc85ftq5SqeEaewlPG+noFZ4jMvu
6ewlPG+vYH9sO5/4GXp86EfPOyhYH5yybJcfex2l5/YK0sbM3LFzJnsJzzsq
GNm5+YUds9hrAz3vpKBi9zcZ22ezlwU976zgR0DC123+eowSnndR8NZmrvG2
OXqUfafnXRWktHe12TqXvbT0vJuCFRk92m+Zx17C8+68v81bIy6AvYTnPRTk
9m3mtnk+e52l5z0VOHW308cu0MNHeM5xatveczct1KOe8LyXgkE93ZfHBLJX
NXreW8G8OYEbo4PYS3jeR0Ebo6PxG4PZS3jeV0HtvO/HNoSwlzc978efr+9x
KSpUj2XC8/4KQudG3F6/SI9uwvMBCpQB3zPWLWavK/TcQcHQZx6Za5ewVxd6
DgXPNQ+y1ixlL+H5fwrOf3f/vnoZe9nQ84F8v1s+5a1arseOlfR8kILMsCVF
kSvYS3g+WMGou+3/RYSx1wx6zrHfovdGEeHs9Z6eD1Fw79pu05Ur2Ut47qgg
78Bss/AI9hKeD1Ugjx1lHhapx8U+9NyJ8+95T/MVq9hLeO6swMa9g9ny1ewl
PB+mYMy7jqbL1rDXeno+XMGVTQ5GS9eyl/B8hIK7GyeVLl7HXsJzF+5fecsL
F63X48lXej6S+1Pq5dzQKPYSno9ScLtHhW8hG9hLeD6a++eY8R+CN7LXQHru
qsCn57kXQdHsdZqecywbtX4QGKPHQOH5GPa5FX9z4SY9cjfTczfer732FxfE
slcVej6W6+P8rSPzN7OX8NxdgVG9GTsD4tgrj56PU3DuTYuoeVvYS0/Pxyv4
0zp7ydytengJzz04Pyslzp6zTY/KwvMJCjIStir+29nrEj33VPCo2urRs3ew
l/B8ooKGulX9Z+1kL+H5JH5/YlybmbvYqzY991JQt9v5Wn7xegQIzzUKrLI+
lk3frUdr4TnHSZ+afpmWwF7T6LmWvcdNS/fdw17Cc0lB+ojbZ6fuZS/huazA
MavLNp997HWDnivcn3ocXjJlvx5Rvei5qqC3pufkyQfYS3iuU3DB/8Fw74Ps
1ZCe6xX03bDQ3nCIvdbSc4OCU0+6W+sPs5fw3FtBvXFGueoR9ppDzycr8Gz/
Ml05qseRL/R8igLN7JtH5WPsJTz3UVBtyLVV0nH2Ep5P5fq/eM9He4K9QM85
Lvn5zVFzkr2E577sW1qvmdcp9hKeT+N++9ejdOJpPVI20fPpCkrN9z/2PMNe
wvMZCs70rHhkwln2Ep77KSjYG7jM4xx7/aLnM7n+ZhpNGn+evYTnsxTUObKx
87gL7CU8n63Af14/c/eLemQ50XPxuaLPv5+7JbLXRXo+R8FkmyuHxlxiL+H5
XK7fpnHBrpfZawc9n0cfG4WPGn2FvWrS8wBeT5vwxqOS9BgtPOfYc2JcjstV
PcqL6Pl8BUFpVxJHXGOvqfR8Add3bEH48OvsJTxfqCDhucO4YcnsJTwPVPBk
T1xT5xvsdZ2eB4nPtVT8PvSmHlOF58H0aVTEacdbetQXnocoWO7VOHjIbfay
peehCnpobw4ZnMJewvNFXP/TQisPSmUv4flirrddLhn/3WGv2fR8iYLNNvYx
uKvHcuH5Ur6fj00nOqTp0V14znFEqzaNBtxjrzv0fJmCJfmD3va7z14D6Ply
BRUMs3b2TWcv4fkKni9iTsl9HrBXc3oepsBuZ8WmvTP02BlNz8MVLNri/6bn
Q/YSnq/k+tiVt6XHI/ZaSM8jFMxIWzqh+2P2yqHnkQriu7er3e0JewnPV7Hf
74/3uzxlL+H5arH/nw7v/EyPREd6vkbBlsxNAzs9Zy/h+Vr613Ndif0L9hKe
r1NQY9S24x1estc2es6xa98k7/aZ7CU8X8/+tQsbtHvFXsLzKPYrHPigzWs9
nhbQ8w3cf0ril9q9YS/h+UYFp3vU79n6LXsJz6MVfLuR8KXlO/YaSc9jFDS5
6hjb4j17XaXnm7j//ffPqfkHPQYJz2MVfNKmFDbN0iNvDz3frGBb94MJTT6y
Vz16HsfzwctdYxp/Yi/h+RYFv32OlTX8zF5l9Hyrgl2lD/c3+MJeM+n5NgUH
9lcZa5uth0Z4zrF5hNe/el/1qCI8387zwfnrCXW/sVcKPd/B1x8JF5vv7CU8
36kgWXmYX/sHewnPd3F/qhYUWyuHvZrS83gFE3z7D6j5U4/5wvPdCmKiar2v
/ksPO+F5AufzVpNl1rnsNZ+e71EgxVu0rpbHXsLzvfx5l5rfrpLPXsLzfTzv
mY2fXPk3ez2g5/s5n6J2WlT6o8eGwfT8gILrIaZ7rArYS3h+UMGQrMBBloXs
1Yaec+zyvMpb8yL22kLPD7HfvDMLzYrZS3h+WEH+07l1KpSw1yJ6fkSBZc1R
x0z+6nH0Nz0/Sh/+c3A2LmUv4fkxXk/g0HflHFcRnh9XkPjSO6DsH3uNoOcn
uD4CdlT9V8ZewvOTCh5OzY3/W85ewvNT3D/TPHuVGBmQupuen+b9OpN5p8jY
gPnC8zMK7DFPU2higJ3w/KyC4kVtf/0xNeBpKT0/x/mwoSD0dwUDlgvPOV6y
7qV1vpkB3YXn5xVMWvt8e665AR/H0vMLfP39vzr8sjBgwy16fpHztaDJxRxL
AwYJzxPp5xqfoT+sDMg7RM8vKfgvMi3jW0UDdjam55cV3DEb5vW1kgGuwvMr
fJ6p9fbTl8oGGAnPkxRcTF8z43MVA47Oo+dXFfwdM6HwY1UDNMLzawp2nuwX
nFXNgCrC8+vc/yv1qfDB2oDE+/Q8WcGema7h76ob4Cs8v0HfyhdXeVvDAFvh
+Q3R697a1zXZqzU9v8nzZ363mq9qsZfw/JaCgJWnN7yszV7C89s8T+wfXftF
HfYKoecp3J99zDc+szFghfA8VUHPrCc1n9Y1oIfw/A7XR8dr6x7XY6+n9Pyu
gne621Uf1WevYfQ8TUH7LdkrM2zZS3h+j+eBHy3NHzRgr470/L6CszODQu83
NGDXLnqersAdv4rTGrGX8PwBPZ0ZPOtuY/YSnmfwfN/I7mtqE/Yqoeccz/L6
IaU0ZS/h+UPOb6d7T241Yy/h+SMFr/+kDr/Z3IBLY+j5Y54vQz5cSW7BXsLz
J5x/f226Xm/JXsLzpwo+LJmccLUVex2g588URHV8XCepNXsJz5/zPFJHs+Ky
HXsJz19wP3A1LUxsY8AzE3r+kvtfUbL+Ylv2Ep5n8jzeLP7h+XbsJTx/pSDs
81aca89envT8tYLF0ulDZzqwVxo9f6Pg8+5sm9P2BgwWnnMcf7fP4pMdDcg/
Qc/fcn3/3PfteCf2aknP3/H5sWW3scc6s5fw/L2Cr8szLx7pwl7C8w88b7Xd
1exwV/YKoudZnB9tloUd7GaAVnj+UUGDuGU/9nc3oKrw/BN7Rce77uvBXo/p
+We+325vTu3pyV7C8y/0LbKXTUIv9hKeZ9ObM0cD4nuzVwd6/pX7W8rg5zv7
GLBAeP6N+8frwl47+hrQRnj+nefxSikx2/qx1zJ6znETn3N/tvRnL+H5D85P
65tj4gawl/A8R8Fhm7wjsQ7s9Yqe/1QwOrpfxU0wYONoev6L54ndCbro/9hL
eJ5Lbyd0uLxhIHt1p+d5PL+mPawTNYi99tHzfAX3bWKnrxvMXsLz37w/o4Nu
rBnCXsLzPwoerAq1Xe1owDEjel7A9fNll1/kUPYSnhcqGBiQlbzSib2E50UK
LMYOqRvuzF4e9JzjiKgbPiuGsZfwvJj+jdQnLhvOXsLzEp434lpUWTrCgDvH
6Plf3t8oU6/FLuwlPC9V0NzF5FDoSPYSnv/jefRNk5LgUexlSc/LeL9U7dCg
0ewlPC/neSvnUtRCV/YSnhupGBjb7838MQZ8kui5sYofC162CXBjr4f03ETF
0wObZ88dy17Cc1MVEhYk+ruz1zl6XkHF+zELKswex17t6LmZinPFm4fPHG/A
GOE5x11GZK6b4WGAsfDcXMUuecDTaRPYawk9t1Dh7nrV1teTvYTnlio2dNFr
fSayl/DcSsWeBm13TZ7EXi/peUUVd1pZZxm8DJgmPK/E659s01KvMaCB8Lyy
isFFDnpVy15d6XkVFRVzwnfLEnsJz6uquCX9ea+V2Ut4Xk3FAe/FTTQKe0XQ
c2sV7+p19pqkGhAmPK+uYt1q41hPnQE9hec1+PXM/Iceevb6QM85zrO1rDre
wF7j6HlN9lAGDHX3Zi/heS0VqbejQ9wms1dfel5bxTVd9bOuUwyIP0LP66h4
6XLkxygf9hKe26hoGTet+cip7CU8r6vikDrKY4Qve5nT83oq5l12ixw2jb2E
5/VVRFxbcMVpOnsJz21VrufkXMcZBlzW0PMGKtY069x8iB97Cc8bqvA/lOQ2
aCZ7Cc8b8f31nb3kv1nsdYaeN+b9/uR0wmE2ewnPOe5+47+3/f3ZS3jeRMWm
H15V+s0x4HlVet5URdbcrb37zGUv4XkzFcYBRvpe89hLeN5cfC5rxZoeAexl
oOctVNj173y+23z2ek7PW/J67cvfdVnAXsLzViqy839ZdV5owO/L9Ly1isJd
5p07BrJXZ3puJ+YbxncIYi/heRsVAfW3BbYLZi/heVsVIdZNdrYJYa9wet5O
xaXhN5NbhxogCc/bq/j1fu3nlosMqCY85/jp9xCrFovZ6x0976CiXWhU22ZL
2Et4bs/5evLOsCZL2Ut43pF/fqudT6Nl7NWbnndSkex+IKzBcgMWCs87q7id
O3pP/RUGtBWed1GxO6zB9bph7LWOnndVUdapyps64exVgZ53UzHXuHlJrZXs
JTzvzvloralVM4K9sul5D/afc7lD9UgDoifR856cD0MGO1ZbZcAQ4XkvXt+m
n15VVrPXf/S8t4q9S5P8K61hr1P0vLf4nNXZlVZr2Ut43kdFpcUPt1usYy/h
eV8V85NqnzJbb8DxyvS8nwrrvKBbplHsJTzvr2JUh8ovjDewl/B8gIrjYUnf
yjm+rKPnDioO148r/beRvYTnUHG2OK5yaTR7Cc//U4F+121LYgy4m0jPB6o4
UWTdtmgTewnPB/H+DVnWsyCWvYTng1UU9Woy+Pdm9qpFz4dwP8h+Nyovjr1W
0HNHFQenpXr+2sJewnOOY18+1+VsNeCzLz0fquK0s/X079vY6w09d1Lhdm/a
3K/b2Ut47qziRkhe0Jcd7JVMz4ep8PDftvTTTvbqSc+Hq5hwbebKrF0GuAnP
R3D/CPVd8z7eABPhuQvf//XVUW93s9caej5Sxer4Z9GvE9hLeD5Kxavuw2Iz
97CX8Hw059faD5tf7GWvz/TcVcXJ1N1xz/YZMF14PkbFzuJVcU/2G9BQeO6m
Ir3r9s2PDrCXAz3n2HfNs00ZB9lLeD5WxdZmfaLTD7GX8NxdRZhp8vp7h9kr
hp6PUzHSae7qu0cMCK9Iz8fzflu4hqceNaCX8NyD+4372CW3j7HXT3o+QcXj
YaGBN4+zl0LPPfn9pY/8k0+wl/B8IvePkDG+106y11Dmm6Ri2rciJemUAbsv
0HMvFUfcb3tcPs1ewnON+FxqkkviGfYSnmt5/UHv/7twlr1q0HOJvhg6dD93
jr2E5xw/2rOz9Znz7CU8l1XYujnUO3XBgCs+9Fzh/VxkXvHERfYSnqsqNjoV
Fh9NZC/huU7F/kvVsw9fYq9r9FzP/gXuTw9eZi/huUGFTcXk5P1X2Et47q1i
QJVJx/cmGfCiPj2frKJjnUZbE66y1yp6PoX7dZ+KYfHX2Et47qPiy9oms3Ze
Z69Z9HyqCtlenrg9mb0+0nNfFRZt7g7aeoO9hOccH46W28XdNOBPKj2fpqLh
qqY1Ym+xV396Pl1F02aVi6Jvs5fwfIaK0KlNX21IYS/huZ+K0mD56vpU9tpI
z2fSx1l3d6+9Y4AsPJ/F9TxRWbH6rgHWwvPZKlaOaj4lMo29ftBzf95PXbVh
K++xl/B8jornx1q1DbvPXsLzuSqGOE+xWp7OXkPo+TwVNwc9/bzkgQGBwvMA
FSZn/G4syjCgnfB8voodp7vvCnnIXlvpOcfwaBUc9Ii9rOn5Al7/yYETFj5m
L+H5QhX/Mld2nf+Evf7Q80DuH1/LKs97akDMZHoepMIyd9tH/2cGOArPg1Wc
N596adZz9nKh5yH0FOoGvxfslUTPQ1X0P73CZ/pL9hKeL2K/+c8cfDPZS3i+
WEWzXe61fF4ZcKIuPV+i4uqQ8s/er9lLeL5UxYL5jy/o37CX8HwZ9+cxzyLV
t+zlR8+Xq2j+2UIjv2Mv4TnHZcN19tr37CU8X8H5EP3j36QPBqTdpudhKnIz
4+96ZrGX8DxcxduuKzZ7fGQv4flKvv9jMd7jPrFXE3oewf18yuOuYz+zVxQ9
j1ThNBvlrl/YS3i+SkWPD89SRmUb8CWAnq9WkXJvW5TLV/b6Rs/XqPAcvn7S
8G/sJTxfq6Lf9JMtnL+zVzo9X6fi8giT744/2GsQPV/P+VwafGJwjgFjhedR
nA/r2gQM/GmAqfCc46JmJv3xi73i6PkGFS+SLY0H5LKX8HyjisTI/sl989hL
eB7N+bNmx/Le+eyVT89juJ4/dHbq+duAGcLzTSr2bcm17P7HgEbC81gV19Pf
3O5SwF7D6flm+r6hdEWnQvYSnsepGFE21NG+iL2E51tUVGt2zbR9MXvF0/Ot
KrxqT01qU2LAyjr0fJuKsT8GBrb+a0Bv4fl2rucrzj1blrLXX3q+g/d7e0hu
s3/sNZ2eczx1d9aBJmXsJTzfSc/fB6iNytnLjZ7vUlFnej/bBkbeSLhJz+NV
9PLqmFHP2Btjhee7VWxLdg2zMfGGqfA8gX6cj+9f29QbJxrR8z0qJo1umVej
gjdk4fle9tr2JMHazBvWwvN9KmafP+tR1dwbSXPp+X4VQadvV6xs4Y0ZwvMD
KjL2WiVaWXqjkfD8oAqfhAW+FlbeSLtHzw/xeq7bNjCr6I1A4flhFW3r/Eg1
qeSNdsJzjjudzAkwquyNl63o+RHe76NNWpVxvDKWnh+l342XZPyt4o3ewvNj
Ks7Y1AkuruqNL8H0/DjPZ0ee2xVW80ZMLj0/oSKtIC3jt7U3HIXnJ1X8Mc9f
mFfdGwVP6PkpepLv1OJXDfZypuenub+l37/zoyZ7Cc/PcP6fXDHrWy32Ep6f
pf/H/epm12avnfT8nIq/r1de+lTHG4rw/LyKWaOfyFk23qguPL/AP1/fzex9
XfYqpuccm7sZ73tTj72E5xfpY5V3zq/qs5fwPJHzT5v39YUte7nS80sqGnt1
j3jWwBtBwvPL/LrtgbZPGnqjvfD8igqzo6NTHjZir/30PInn1/ZtvB80Zq8G
9Pyq+JxM1wr3m7CX8Pwa51svvx13m7KXMT2/zueNn6/7pjbzxiZ/ep7M+/ch
5Mmt5t4YKjy/QS/buPndaMFeE+j5TfZ/5GF1vSV73aXnt3i+Kl67M6kVewnP
Oc48/LfX5dbsJTy/zdc3i71/0c4bJ1vQ8xQVD2tP0Z9vw17C81QVi/Omlpxp
y17C8zsqtMd2rj7Vjr0C6fldnkfVis1OtGcv4Xka99Ome04d7cBewvN7KvqU
+TsetvfGvUf0/L6K71XmPT3Qkb2E5+kqhukPee/rxF7C8we8nrq1CxM6s1d7
ep7B83a/48viu7DXdnr+kPvjx9CaO7uyl/D8Ec8Hdkt3bOvmjeyl9Jzj0roX
22/pzl6F9Pwxz6t3Wp6L7cFewvMnvB/uyQNjerJXJj1/qsKQEn13Qy/2GkXP
n3E+99/qvr63N9yF58/5PJn89NWaPt6oIDx/oWKiv6N+VV/22kvPX3L9SNnf
VvZjL+F5Jt/v1qSZYf3ZS3j+ivuFw92CZQPYqzzQoftrzmfPyguXOHjDT3j+
RkVr00VlofBGY+H5WxWfXdouCv6PvcbTc47TR1qaBg5kL+H5OxUt6tsunT+I
vYTn71U0SFYqzBvMXkfp+QeuH+nNEv8h3ohoRs+zVHyosM5klqM3+gjPP6qo
lzwvdMZQ9rKg55/o0Ymof75O7LWAnn9W0ehj1nwfZ/YSnn+h1zOm/vEexl5a
ep6tQq9v7acf7o09GfT8K31+WferMoK9hOff+PqfHFTJhb2E599V5Gza8tJr
JHu1pec/2Meyo9vEUewlPOe4jlNhisdo9hKe56iI8f3jMM7VG1cX0/OfKu6H
tzntNoa9hOe/uF+cjGrj6sZewvNc7pdlXbeOHMteL+h5norhwRWtR7izl/A8
n7442ix2HsdewvPfKlx9PfMdx3sjsws9/8P9xOSROtiDvRLoeQHnZ8OlD/+b
wF7C80KevzN8Bjp4stdKel5EX7uEHes3kb3+0fNiFRfHZjbsM4m9hOcl9HS4
98qeXt4ofE/POZ7Qtk1BNw17udPzvypqmjeTu2jZS3heSo/yXO90lNhLeP6P
5z2T8906yOx1mJ6X8f0OH7+1reINVXheruLZ2/Zmdqo3agjPjXT49Li3b0sd
e5nRc2MdMgYEZzTTs5fw3ESH2R1LejYxsJfw3FSHLRcPb2nozV5e9LyCDk0K
NxnZTvZGsPDcTIe7fy6qdad4o4Pw3FwHnzt1btb2Ya/T9NxCh+sR+1vXnMpe
dvSc463D/MOsfdlLeG6pwwXbeV+qTGOvKvTcSocXNU4MrTTdG7Gh3P4q6nB+
UMs9ljO84SQ8r6SD9bV0U3M/9tLT88o6xOw8JZnOZK9n9LyKDsYF6YlGs9hL
eF5Vh7KMlnXLOK4gPK+mA0acnPV3tjdOdaLn1jr4zpl/t8ifvYTn1XWwVwJa
FsxhL+F5DR3atToWlD+XvcLoeU0dKjxu8vjXPPYSntfSwXNxarucAPYSnnOc
8t/hRd/me+P+W3peW4fsVilPvixgL+F5HR3chjRq92khewnPbXSIPXYo+EMg
e/Wi53V1cAn0f/A2iL0O0vN6Ovy7OKf562D2Ep7X16H7kmP+L0O88XUtPbfV
YeHHFjeehbKX6f8U23dczW0Yx3ErsmUUUkmyVZKVcNGjhFDJSlm/ec4pW0Yl
mVEpe4WMSnZGixQpspI9SiJKiKyMeL7Xn9fredQ5n9993+/790fwvJ1AE77n
t3y4Ar3YcxOBRlxPnXUvBL1K4bmpQHlzn5/OW4leXvDcTCC/2v3/3Vol0wT2
vL1AO6JujbqxWiY99txcoGzr6O3X1qDXGXiO2fdzbPHVtejFnndA37J3Pa6s
Qy/23EKgtz3URRmh6NUQnncUaOst80sX18s0lz23xO970bJe2gaZ2rPnnfC8
Fw4bkxyGXrPgeWeBBh5K2HIuHL3Y8y4CVQa6Pk2MQC/2vKtAXobdzU5tRK80
eN5NoHvBjrOOR8oUZgXPuwt0Im9bbEKUTAPZ8x4CDWtjWRa3Cb1awPOeAhX7
fux2eDN6rYHnVgI9f1mpPbAFvdhzzIHrbI/t24peWnhuLeC9+Hj5nm0yxRXC
cxuBHqbO6rZrO3qx570EMvL1VLbvQC/23FagFvtCDm/ZiV594XlvgfSF8pdR
u9CLPbcTyPbORpONu9GLPe+D9fJl9qSwPTJdjoDnfbF+SzZsCo1GL/a8n0BN
zr+6sWYverHn/bH/lvrXWbUPvd7A8wECCf85O6zYj17sub1Ael085gfFoBd7
PlCgbv13H1l2QKaCwfAc84+1Zi8WH0Sv0/DcQaCIbkUtFh1CL/Z8EH5f7wLn
+YfRaxs8HyzQlrOGy+bEold9eD5EoAGXw477xqEXe04CtZo95IUmXqaqj/B8
qED2t62aKUfQawY8H4b9WzmFxAT0Ys8dBYqpuDJ75lH0Ys//w/p5pO6ddgy9
UvB1h2M9pI++OfW4TAJ77iRQvyTdz8knZHSF584CGd+/bjnxJHoZwPMRAq3p
IriNP4Ve7DnmBTkDA9xOoxd77oLnfWVc7JhE9FLh+UiBrtkcvDPqjEzL2fNR
ArU171014qxMVuz5aIFy42q0dzqHXpnw3BXP51FDZ8fz6GUHz8cIVDtrvC8l
oRd7PlagWcufbRqUjF5t4Dn/XVu7/Un2KTLtCoPnbgL1OnngWb9UmVzYc3c8
L5dXf+3S0GsuPPcQaOTfGea2F9DrNTwfL9ClIlNH64voxZ5jjq7dVuiRjl7s
uadAF5Z4rOp6SaZzDvB8gkAfPW8c7JSBXuz5RIHqHl1x2SITvdjzSfg8GxYV
tb+MXlvg+WSBTBomVJtcQS/2fIpAiQPbtTXOQi/23EugSTa3+rS+KlPee3g+
VaA7vy+Ma5WNXuy5N/bLqXJN8xz0Ys998LxnTl7V9Bp6/QfPpwkU36FudKPr
6JUEz6cL9KxO5dn6uejFns8QKNzY5GbdGzKV7wFvmP2WrC2ufRO9msLzmejV
q1dVjVvoxZ7PEijEs23jv5irvsJzQaDGP4eZ/76NXjI8FwUKsDpqV3VHpons
uSTQPH0P5295MtVlz2Ws3532kyvvotcleK4ItOLrDE1FPnqx56pAj7tfX/r+
Hnqx5xrsT/c568vuo5cRPNfi/F86ceebBzLNY891AnmeD4p79VAmc/bcVyDH
Nm/OFj1Cr9nw3E+gtefCMwseoxd7jvl49MJbT5+gF3s+G/68jn786Cl65cDz
OVhvu+u+uv9MpnB7eD5XoNsPT76/+1wmB/Z8HvrH7fx2uwC9zOD5fPhgnlV9
oxC9NsHzBQLleFrrXX+BXuz5QoHOTXzWMLsIvfzh+SKBNg24ZnDlpUzx7+C5
v0B3G383zChGL/Z8Me4DbwTji6/Qiz1fItCQRy3NUl+j1zB4vlSgUZ/1OiSV
oBd7vgz7y7l/x7Nv0Is9x9zx/VHL029lurILngcIdPHz9E4nStGLPQ8U6KBm
YqejZejFngcJ1FfdaBn/Dr0q4flynN//9DseLkcv9jxYoAeUZX7gPXqx5ysE
2jY403TfB5kKR8LzEIHkhjWM93xEr4vwfKVAe1OCDXdWoBd7vkqg9V6OBts+
odcBeL5aoMW1RzTc/Bm9WsHzNQKdvRJRJ7ISvdjztTg/ThhVh32R6ecveL4O
z/9h8dfQr+jlC88x/x79qXzNN/Riz0MFsrCk4pXf0Ys9X49+c/IfBf9Ar6vw
fINAwcPibgZWySSy52ECdT2WnrH0p0wt2fNwgQwzWp/1/4VeJvA8QqClkedi
F/xGL/Z8Iz6P9dYdc/+gF3seKZByMinUrxq9FsLzKDz/DiZLtX9lCmbPN+H+
seuqqvyTyZo93yzQ+a6nJ4k1FCq8Bc+3CLS6+IXTzJoKhRM83ypQ6UM3u2m1
FHJgzzH/aV3PfGpthcot4fk2gV6k/ms0uY5Cu3fA8+0Cxd0eWOWpp9BI9nwH
7ktSWrF7XYV+BsLznQIN3RJ0c2w9heI/wfNdOK81q8+N1ldoInu+WyDvX3ei
XeorVJc93yNQxgSf1U4NFDo/Ap5HCyRF2egcGyoksud7BZp8wcmdGinUkj3f
h/tn2f5+gxordGU/PN8vkE33Ie3smyg0jz2PEajlZvMa/ZoqZM6eHxDIufeI
V72bKXS3Cp5jvmRy5qqNgULB7PlB/rurmXE9mytkzZ4fEsinzYR13Vqg1zh4
flgg7ZgIpXNL9LoCz2MFCmvVcETHVujFnscJdDL4ZidzQ4Xex8PzeJzHMfl1
TI3QyxieH8HnXW9S3LY1erHnCbivuR5PN2qDXjXg+VGB1N8rdrVsi17z4fkx
gVrH7V5oYIxe7Plx+D7z19gm7RSqx56fwPMdvLdrQxP0ugHPT8JP17W19E3R
iz3HfD3m3NM6ZujFnp8SKHZ018Sa7dHLAp6fFqjB9OJ1fzHPZ88TBcr8UOTz
21yhDuz5Gdyf61naVXVAr2Xw/Czuj5dO6H+zQC/2/JxAWZ2Cnn/uiF7s+Xn8
/LGbT360RK978DwJ+33UxxXlnRSKcILnybgv9tjoUdpZoUHseQr2Q51FHUu6
oFd3eJ4q0KHXB76+7Ipee+F5GtZjYauswm7oxZ5fEKiW3p1Nz7qj10p4jjlW
uT39cQ+FjnyH5xdxfhu3tHrQU6FJ7Hk61p/1/l93rdCLPb8kUNS5edm3rdFr
DDzPQN+MDVE3bNCLPc8UKGh6ude1XujFnl8WSIyPsrxqq1BWLDy/gvV9JOhj
Zm/0Ys+zBOq9MPF8uh16sedXcf6b9AxK64Nef+F5NtbLmY//JfdFL/Y8R6BG
Lj8anOuHXuz5NYFuVTjlne6v0IsJ8ByzQ0rBlhMD0Os6PL8u0PvzaZOO2qMX
e56L8+1XkXH8QPQ6Ac9vCNR/q2vhIQf0MofnN3He7Ki5P2YQerHntwSqMqye
vnewQr/qwvPbuA+0J/PdQ9BrCTy/g/vFtdyi7YRe7HmeQOtMo/dtGYpe7Pld
nN99kryjhqHXXXiej/Vg0sY4wlEhiT2/h/VQdvnR+v8UasWe38f5fOTs5rXD
0asrPH+A82rOxzGrnNCLPcf8cMyc+iuc0Ys9f4h+E+yvBI5ArxXw/JFA9XaM
DljqosBheP5YoCTLODv/kQrZsOdPBDrSbOT7+aPQ6wk8fwqPNH0OzhmNXqPh
+TOBnjiqk31d0Ys9f47Pc6KkiWYMevWC5wUCbbyQcEUaq9CeQ/C8UKCpQcn+
s8YpNIo9f4H7gF7T7tPd0CsUnhfBi1knCqa6o9cfeP5SoMgj2zZO9kAv9rxY
oG+lOTRhPHqx55jr9B722d1ToaTx8PwV7ls79WLGTkAv9vy1QP/1aD5u9ET0
Ys9LcJ//K/8dMQm9jsHzN1i/ZvWODZ+MXuz5W/y8AxWThk1BL/a8FJ5vM9cb
4qVQfh14Xob/3jT61MCp6MWevxPoq/FMr/7e6MWel+O+cHuOXh8f9JoKz98L
dLX/9RO9pqHXHXj+QaCGWu1Eq+noxZ5/xPvfoon/us1Q6MNZeF4h0CDf8NjO
M9GrMzzHHDStsWvHWejFnn8SKM3nUWV7Ab0awfPP2E8B5dtNRPRaDs8rcb+/
5uLQVkIv9vwLzlvPyheGskL67PlXgYbblYS0UNDrETznv8tb2MGymYpe7Pl3
7N9uCdmNNOjFnv/A++OsALm+Fr2s4XmVQLN776xXV6fQAvb8J96nj9SIq+Wr
kAV7/gv793Hi8H+Y89fC898Cfbpz8tVvP/Riz//g/TPmR3DVbPRizzFP9Vlv
8m0Oer2A59UCjTZSUj7PVWijOzz/i59XEDn+4zyFBrPn/wQ6llmn4t189OoH
z2uI1O7BlXVvF6BXAjyvKdLZLrfNXy9EL/a8lki+tyxSixah10Z4Xlukwfez
3Ar8FUqoBc/riGQy5nTpk8UKTWbP9UT6Naos6OES9GLP64p0rVDX8t5S9JoC
z+uJtMDI4cidZejFnuuL9K7uxEE3A9CLPa8vUov0i3nXAhW6mgjPMT9wnTPr
ahB6secNRGqZ4/ctczl6secNRTpjn7ImPRi9GsDzRiJFpYw1SluBXux5Y5HC
xtvGJYWgF3veRKTl7Wb0PbtSoaKZ8LypSNThedapVej1AJ43Eyl+0UH346vR
iz03EGl9t6QXR9agVyo8by5S0hgjXexa9OoJz1uI9PfLlR8H1qEXe95SpJ7d
L4bsC1Xod3N43kqkRnq1G+9Zj16r4bmhSMKmrdt2bEAv9hzz71cLzLaGoRd7
biTSlgYxcVHh6FUAz1uL9NmwrXVEhEIye95GpNttis6t36iQIXveVqQyiy8D
10aiVx94bizSn+EemSuj0Is9bydSemQNp+BN6MWem4j0uuXv6wGb0SscnpuK
1OHVMNclWxQKYc/NROrU6PGdhVsV6sWetxdp//5Ut3nb0KsEnpuL5HD6Xb7f
dvSaBM87iHRwjOKh3YFe7LmFSAGhve/JO9FrEDzH7DdvtLuwS6HoU/C8o0hG
bc/kTd+t0Gj23FKktlHyGO896LUVnncSqVWpemNyNHrpw/PO+PnWqc4T9qIX
e95FJO/Fk66470Mv9ryrSM/z/xs8dr9CydPheTeRTo9dnjwqBr3Y8+4izflX
z3bEAfRiz3vg+VYWJvx3EL2S4XlPkUoH1LEYegi92HMrkdJK/HcNOoxe7Lm1
SEfr2hvYxyp0rxk8t8H3Pz5ybd849GLPMX8tO/LHNh692PNeInnemjjX+gh6
KfDcVqRCeXxJ9wT0egbPe4vUOHffpC5H0Ys9txNpWh37Gx2PKfQxA573EWlk
Z4tB5sfRqzc87yuSk6PXCZMT6MWe9xMpWyk2bXsSvVrD8/7Yj/HJEYan0GsD
PB8gknHzwurmp9GLPbfHejnvrmuaqFB99nygSBmxhk8bnkGvV/DcQaTJlV2d
9c+iF3uOuUZC2Jk659CLPR+E51M42KzmefQaCM8Hi9RgH62vxryQPR8iklV1
1NefSQp1ZM9JpFf6vX2+J6PXZng+VKTV+RY5lSnoxZ4Pw3miEawrUtGLPXfE
+i76uq08Db3K4fl/IslOD6rfXlAo0geeDxfJ9Kie8PqiQkPYcyeRFLM114vS
0csRnjuLtOnMBKuCS+h1Hp6PwPP099/0JAO92HMXrIeA0m8PMtFrNzzH3C//
yKT8ywodbQLPR4qUui4t9fYVhaaw56NECj5l0u5GFnqx56PRe3JeQM5V9JLg
uatIN7fce34lG73Y8zEi3Zrb2SEjB73Y87Ei1ap5c9eFawplp8PzcSLFuGdW
JV9HL/bcTaSiRfUmnMtFL/bcXaRPgXsTT99AL0N47oF/v3hNkxM30Ys9Hy/S
fwsvqQm30Is990Tf1S5ZsbcVeukHzyeIVDe1o+nBO+j1Ep5jfmDu5r8vD73Y
84kiLbx1+87uu+iVDc8niVT/VnTnHfnoNQCeTxYp0SY9aMs99GLPp4gUoW/z
IPK+Qn9M4bmXSCnCl27hD9ArCp5PFWm0p35w6EP0Ys+9sX7f+d1f/Qi92HMf
kerZde4S8hi9yuD5NJGmDOu1LOiJQgp7Ph3nn2X4raVPFTJiz2eI1P+DvZn/
M/QaCs9nos8R+znzn6MXez5LJEkbljG7AL3Yc8z3h9o00xWi1054LohkM6jT
NOWFQivZc1GkZb5+x4UihWzZc0mk5GL939NfotdneC6L9ObYN2fvYvQS4Lki
Us3ndlsmv0Iv9lxFz+DsF56v0csFnmtEvBcldHMvUWjvBXiuFSlBerlgzBuF
XNlznUi9r2vSR75Frxh47ivS0iKnes6l6NUSnvvh/LuwcKxjGXqx57NFqtb9
2DbkHXqx53PgWa2bBQPLFUrRwXPMOzd8sej/Hr3Y87nwso2favcBvdjzeSJt
SBt4wuYjemXB8/nYzyumVvaoQC/2fIFIlcvy+nT9hF7s+UKsp9Ttiy0/K3S/
HTxfJFLuqMRU80r0Ys/9Reo4tP0fky/oxZ4vxv458tKh7Vf0WgDPl4hUvvV7
gOE39HoLz5eiV6tpF5p/Ry/2fBm86Wv8u8kPhSpuwvMAkY407D6gYRV6DYHn
gViPByIW1fuJXuw55lGNnM7U/oVeHeF5EJ7nRLeKf5iPbofny0Xqu/VUtz+/
0Ys9Dxapz/1ZYtUfhRqw5yuw3ztq932tRq8KeB4iUpNt2Y8//UUv9nwl1kv/
RQYf/qEXe75KpAnGS13KaqiU7Yzlt1qkHWPyg0tqqrSIPV+D9fYyKOllLZUs
2fO1WB+vl38oqK3S/X3wfJ1IXvKDDk/rqLSSPQ/Ffl28fOJDPZVs2fP1OO+7
Bm3Ir6vSyx/wHHPfdXfTb9dTKUoDzzeIZH94yedcfZWIPQ/D+R+5yCKnvkoV
Y+F5uEjuk66Nv9JApb2X4XmESCcbz159qaFKruz5RpGyLmnOpTVS6U8cPI/E
egtKe53UWKVjbeF5lEjbJs1ocbaJSl7s+SaRQn2mDj3VVKUG7PlmkWL3HfM7
1kyllHnwfItIq7q77443UElhz7difxi45hxqrpIRe74Nz2NGdOX+Firl5MLz
7ThvuzuaRLdEL/Ycc62gwc47W6EXe74D+0/dOGerIXp1gOc7sf/+9NkZZYRe
7PkukbTOtpnhrdGLPd8t0rrJq0pD26hUvBSe78H3H9aj6Zq26PUBnkeLNMag
W58QY/Riz/eKVPUgcEpQO/TKh+f7RLq7r/PypSboNRye78e/D+p8cJEperHn
MSL9CA7MnmemUnU3eH4AvZK6lvm1R69oeH5QpECbHg215ujFnh8SacSfVT3k
DujFnmOu083OdZYFen2D54dFMr8+wHdaR5VU9jwW/pVtDfOyVKk1ex4nUred
I45O7IRervA8HvfZUrfrHp3Riz0/ItKJt6ffjO2CXux5gkgFh5Tao7ui12F4
flSkx9aLzEZ0U2kVe34M58P2p/b/dVepN3t+XKRj77d6Ug/0qobnJ3BfHRQ/
26Enes2B5ydFar7TILS/FXqx56fQv2l+jJ01ennCc8x3T5al2NiotO8aPD+N
8zd00t0evVQaw54n4nkcNS3tYotex+H5GZwvlg5/O/ZGr/bw/CzuQ3VPtzC3
Qy/2/JxIs3wCu5j0QS/2/Dw8HBjj0KavSqmL4XmSSANPtBvXqh96sefJeB5Z
FTMN+qMXe54i0rCNbRc2HoBeefA8FfurXfSa+vboxZ6nYX0u89+uNxC92PML
eP5pR+JqOqj0oAs8vyhSxfveSdWYV7HnmA+ZGGb/HIRe7Hm6SK7e4+5/G4xe
wfD8Eu4PacUvPw9Bry/wPEMkF6dbHz8QerHnmbi/N272u2yoSp8ew/PLIunM
j9Z9Mwy9RsHzKyJd2LjXoNgRvdjzLLwvKe+MC/9DLxt4flWkUykRlk+Ho9dB
eJ4N7zdvsHrohF7seQ6ej97LvvnOKjVkz6/hvDXZOPj2CPT6Dc+vi/T93dbh
uS7oxZ7nYr8GfhuVPRK92HPM414fd7s8Cr084PkNnHdWlyakj1bJnz2/ib5q
V69UV5U6see3RGof997n/Bj0OgrPb4u056v+zMSx6MWe38H6nxEknBiHXux5
nkj5f0ZLCW7oVRue34VvDxbIse4qbVoEz/Px+35/kw94qDSUPb8H3wPy5L3j
0csLnt8Xaa9cR97liV634fkDkR7ejBK3TUAv9vwh3idTF8/aNBG9zsDzR/Ce
UqZHTFLpeCd4jnmGzsN7/WSVprLnj/H+NMZ58pop6MWePxFp69ct40O80CsI
nj/F+5Gfw9igqejFnj8TyezGIJel3ujFnj/HfbTNzmGLfFS69hCeF+D5yGMG
zpuGXux5Ic7/q969/aajF3v+Aj4NzemmmYFeVvC8SCSP8vXm0kz0Ys9fYj/m
xRvNnIVe7HmxSBdrmjf2EVR6tQaevxJpcdiXmlNE9PoJz1/j/TW4/XdPCb3Y
c8zzyuPK3GT0KoTnJfC8IPS5q4JebvD8Dd6XhezbLip6sedv4VGkd8ZwjUp/
+8LzUtzH54w9PVSLXkfgeZlItgZ7Ygbp0Is9fyfS2JWOUQN80Ys9L8d59GB4
cB8/9KoJz9/j+7Y66Ndrtkoa9vwDfPTwmtpzjkpt2POPmKP9XLrORa/J8LwC
+7tWQR/LeejFnvPfMUbFmpvPRy/2/DPenyfdaGSyAL1Ow3PM1vKoH60XqrSa
Pa/E++yNTi9bLlLJjj3/gvW81Tu3mT961YfnX3E/ya9IbLQYvQLg+Tesn00F
u/SXoBd7/l0k8VWnkDpL0WsGPP8hkt79G0qNZSrtvw/Pq0Sym39zzB/MY9nz
n1ivd7rYVQWgVwo8/4X9WVXU+msgevWA579FGvT765+KIPRiz//gffitUFS+
HL3Y82r0u2lz5W2wSmmr4PlfkXYnTTr8agV6seeYxyY/X/MiBL3Y83/YzwUX
5Gcr0es5PK8hUYTdT+dHq9CLPa8pkXQrqvO91ejFnteSiM6vqXtnjUoP7eB5
bYlSqh+9zl2LXux5HYkWJK6+nL0OvdhzPYkavdq473IoeoXB87oSmez9vix9
PXr9i8seVU+iYZUpE1M3oBd7ri9R849PbM+HqfT5NTyvL1H7/RMaJ4aj10R4
3kCi2kY2b49HoBd73lCikTOkjCMb0csBnmNeE/5zx+FI9DoJzxtJ9F9C2ZyY
KPRizxvj52f3HRG9SaVG7HkTifwrikx3bkavevC8qUR/7Eq/btmCXux5M4k6
Hx6dG7kVvdhzA4kCxjTZF7YNvabB8+YSBQ7pOX/ddpUWs+ctJEpYc8Rp1Q6V
OrPnLSUKsV3ZJngneiXB81YSBbulli/bhV7suaFEZpVjLvrvRi/23EiiRx2G
Rszfg15N4XlrfP/KSJ/Z0SptDoHnmH39Bltp96o0jD1vI5FNrEu1tA+9ZHje
VqJncYk3Zu5Hr6fw3Fii5yuW7PSJQS/2vJ1E+4ftlaYcQK9L8NxEoi1V7XtP
OKjSCVt4bornk1jzn9shlbzZczOJDgVSruth9GLP22N9qAVbXGLRaz08N5do
yKrHPsPj0Is97yCR0fNeXYbGoxd7biHR4uVlnxyOqHS9GJ53lCgt4F9y/wT0
Ys8xDymeH2x3FL3Yc0uJpqY7OdscQy97eN5JIo3Z4sY9jqMXe95ZoowW+vc6
n0Av9ryLRIlHvm+3OKnS603wvKtEGyscp5qdQi89eN4Nz+NLhZnxafRiz7tL
NC7rV7FhInq9g+c9JLo1Wzjc/Ax6ecPznuhbp6fc5Cx6sedWWB+R47s0OKfS
v2Hw3Foi2w7PSvXOo9c5eG4jUXFORnzNJPRiz3tJdGOjnlKNuRF7jrnnuiOd
fiajV2N4biuR86Vjr7+moBd73luiSY5ND3xKVakte24n0Y4Od33ep6GXCM/7
YH9oK9uWXkAv9ryvROHd5z98dRG92PN+Ep2c6xH1Ih29LsLz/hIVjNo86tkl
ldaw5wMkcrpmq/coQ6U+7Lm9RMbfeqXnZ6JXK3g+UKL1RZGLbl9Gr3Xw3AF9
d4y1yr2CXuz5IInedPcruZqFXr7wfLBEneLf7868qlJMETzHfMj4htvFbJXG
sedDJFq7pX69lBz0ugrPSaJP7ePTzl5Dr/7wfKhENe7Ezj51Hb3Y82ESPT6m
Z3EsF73Yc0eJNl/LehB3Q6ULkfD8P4lcbV6vPXhTJS17Ppz3y6wB+26hF3vu
JJF5u//e7bqNXqXw3Fki5cKqXdvuoBd7PkKi+i8tR27KQy/23EUiwx2df4bf
VekRwfOREkVXhMaF5qMXez5KohPfRnuuvode7Dnm8clzaq24j1474PloiXYN
/3Yi4AF6NYTnruh39OmUxQ/Riz0fI1G3qvZ1FzxSqfITPB8rUdCAa6dmP0av
WfB8nEShgXlTtE/Qiz13k2hM/oA68lP0GgHP3SXKHV7n+Mxn6JUGzz1wHpVY
e/o8Ry/2fLxELzMu/JlcoFJj9txTojmvEw56FqJXC3jOfzfp88vF7QV6secT
sZ4HHa0YXYRe7PkkibIjLm4Z8RK9tPAcc8z0XgP+K1ZpCXs+WaJ3GXULhrxS
qQt7PgXnw8VBwQNfo9cVeO6F7ys87NCvBL3Y86kSJV3Jy7J9g17subdEemU9
JKu36GUMz32wn4vf1e1WqtKWCHg+DefPxQZxlmUqObLn0yU6ty7Myfwdes2H
5zPQy21OSbty9HoDz2fiPLM8v7L1e/Riz2dJdKSFj3nLD+h1A54LEuV0UdKb
flTp5GB4LsKb+fenNKxQyYc9xzy+xsHvdT+hF3suwafCe1G1PqPXNnguY38Z
yz3+Ytay54pEUVlTs39Wohd7rkpkV3p22rcvKuV+hOcaiX5unl316St6seda
rJcHYZHvv6EXe67D+kxr1KX0O3o5wXNfnIfuFemvfqAXe+4nkU+8neeLKvRi
z2fjPLzx/N3TnyqV7IXncyT6cv3t8oe/0MsAns+V6Nopz5b5v9GLPZ8n0e/w
TvG3/qDXd3iO2XX2lIHXq9FLhefzJVo28/OtrL/oxZ4vwPdbWD4t459KNdjz
hThvzo34nFZDQycz4fkiiZbY1A9JqqkhH/bcX6IpX3s0P1NLQ43Z88USnWpy
NuZEbQ1daAPPl+A8C99rk1BHQ1r2fKlEqwLfpx/W05Axe75MopkfokfH1NVQ
7lx4HiDRwneJT/bU09AS9jxQIjWku7RDX0Nd2PMgid5erle5ub6GHl2H58sl
2pniHLixgYbWsueYLRaU19vQUEN92fNg7K8aX6LWNNJQiTk8XyGRu9bHOKSx
hrZsgechEtlf6XkosImGHNnzlfC31YweS5pqqHIJPF+FnrOrzixopqED7+H5
aoniXnyxn2OgITf2fI1EyfM8MrXNNVSDPV+L9d/XyFlugV7/wfN1EuX1H3Jz
Zkv0Ys9DJaq19sY4n1boxZ6vl+ii1YX7kw01dHEPPN8gUeQgg0meRhrSsedh
EjXIzH06rjV6seeYU7NLp45ug15f4Xk4vt9UbaFzW/RizyMkKolwn+ZojF7s
+UaJ5uv2vhjcTkOPR8PzSIkm1xo7zd4EvdjzKPjtIxT2MUUv9nwT7mvhhVN7
maHXIXi+WaLh0Ref9miPXkbwfAt83F1zUhdz9GLPt0r0YWvCfYsOGvryB55v
k2jdzuRxZhboNRueb5fox5nuN9t2RC/2fIdEpytrOxtaohd7jrnnrKGZBp3Q
Kwee75ToRfPX9o07oxd7vksih6bvz+h30VAT9nw3/BYn96jTFb3M4Pke/DyL
Hof+Ydax59HY7xME49/d0Is934v7X6Nam753Ry9/eL5Poh5uevqVPTS0lD3f
j/Opt1/gh54a6sqex2B9ZjhUllqh1x14fgD3L7250mtr9GLPD0pU1LTh0xc2
6MWeH5Ko3ocGrs96oVdneH4Y50fCnEsPbTW0dRc8x9zR06FXfm8N/ceex0p0
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
dxwzFr3Y8zP4/+XcJi7j0OsHPD+LedXZJ45u6MWeY26b3vzQYHctNWfPz+H5
m5b4DvBAr7Hw/DzO98Tu/ezGoxd7ngRvV7/5Z+WJXux5skwZB1pd6zoBveLg
eQrO11YpGztORC/2PBXf913eBLNJWurJnqfJZN/d26TtZPT6l+868wLOh9fe
r1pOQa958Pwi7rcd7sU39UIv9jwd/ldc8G0wFb0mwvNL8HCisa2et5Z25sLz
DJneiR+//cM8gj3PxHrs1Dfllw96nYTnmA0PVS77Ng29OsDzyzLdeGcx+NN0
9GLPr8j0Ui/337sZ6MWeZ8mUX6Mko2Smls4uhedXZWr5dsGKollamsWeZ8tk
nLVk6DMBvdjzHJmmHvxS46GIXvnw/BrOs8jiS3kSerHn12WauM0p6IaMXux5
LtZPhplDtqKlO93g+Q2cF8Z+PzNULQWx5zcxn+51Pk2DXuz5LdwPIzTzzmvR
KwSe35bJ92Jrq9M69PoGzzF3GulQdtQXvdjzOzJVDHlwMNZPS++ewvM87L+E
V94xs9HLFZ7flYm2yEZ75qAXe56P97v6M/K2zUUvW3h+D71b5a2Lmodeh+H5
fZm0V85S2Hz0Ys8fyHTOtGnVmgVa0mPPH2K92r44sWIhelXD80cy3W1gKQYs
Qi/2/DE+f2JRW39/9GLPn8A7u+Z5cxejlyc8f4r7eXTKKt0S9GLPn6H3j4f9
5aVaas+eY85z1byfsQy9jsPz5zIdPzZ/39QA9GLPC3A+mX5xmxiIXux5Ie7X
p0pruwehlx48f4H7lHb8udHLtRS2GJ4X4b7v1VdyDtbSQPb8JfZDWIThsBXo
5Q3Pi3Ffa+Cd7RCCXnnw/BX/HX/Mwn4r0Ys9f43zoJV3R9tV6HUOnpfg/E6N
yO+xWktxXeD5G5nmPu4b3HmNliaw52+xf5d69uywFr3Y81K8vxx796TdOvQK
hueYA5Z8X20Uil7seRnuQ+8X92q+Hr3Y83cyXWk273mjDVq6/Biel6P/55dr
6oVpaS57/h7n965rNrXC0Ys9/yCTZNjp6R/Md2zg+UeZdsz5FfIjAr3Y8wqZ
xp0d3r1yI3qx55/wvv++3r33kVoqWAfPP+P7Ww5d+jYKvX7D80rsb+Vz++JN
6MWef5Ep/nLrnOeb0asInn/F+TE4SfdoC3p5wHPMTm9uGuRvRS/2/Bv2R/bk
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
nlzftB/o9RlcDsfzi1zlda5KR8cEeO6k0p4xWSNO/tSRF3vujM9TFNrnyC/0
Ys9HqPRg7APzg7/R6wI8d8F6OBzbOPoPerHnI1W6XF5dta0avdjzUSqN7v7s
VeRfHeW0hOejsR59B99e/09Hi9hzV5V2XeicvKqGL1my52NU6mW+PSaopi/d
18Hzsdh/h8LWL67lSyvZ83EqDXfTnz+vti/ZsueYI6wbeOnq+FJxFjx3w793
2TRM0vOlqH7w3F2lqLj9XafX9SVizz1Uaja+T7Mp9Xypoh08H4950rjvHvq+
tHcjPPdU6fOFz89c6/uSK3s+QSWDsDaZzg18qXoBPJ+o0u3bOYeHNvSlY2/h
+SSVVkb8CR3YyJe82PPJ+Dz3k3z7NPalBuz5FJVGJPwcZ93El1KGwHMvlRq2
udy7a1NfUtjzqSrZdDMwtGjmS63Zc2+VGr1986OdgS/lbIfnmH9Mcnxi2NyX
FrHnPio5hXZKbdYCvdjzaei7InJXg5boVQHPp6vkPXLF0jqt0Is9n6HSjQ9V
k/9i7s2ez1SpZMGP/lWG6OUMz2ep9Kc0wKjSCL1S4bmgko9H6Lfy1ujFnosq
TbnY7l5JG/TaB88lnP82/U69aOtL+5rDc1kl13OPw54Y+9IY9lxR6en/FNx3
XE59HMbxjB57h6wSJVEiigjfJCtENCSJiPus+84qISEjhYZCZCSUkJnVEBUy
EqmsIrKFIrue6/vn9eJRfc45v/e5/+hxrqd60BW9fsBzlYpMu5wafacbegnw
XMD53PKt/nU99GLPsW2sD/++oo9e7Lmook0JHwovdZfp0lV4LqnozIwLJ84a
yKRiz2UVac1tvulED/RizxX8ee4br8Se6NUZnqtV1CJignW8IXqx5xr+vdRB
bfYYoRd77quiSysOv43uJdPDRfB8kYpCT+zL3GYsUzB7vhj/vtQ9JqQ3erHn
S1Q0Pb23tM4EvfLg+VIVZSdfsF3VB72Gw/Nl+O/pXge/vujFnvupqDxY/UFj
KtOXHvAcW2ttTKZghl7R8NxfRV1t7aPm9UMv9ny5iuRbK3w8zdErAJ4HqKh3
n6HWbv3R6xM8X6GiNT5BzZwGoBd7vlJFx0ImP3OwkKkZe75KRSV7Ek7YD0Qv
e3geqKIhSWtXjxyEXuz5alzf828drS3Riz0PUtHU+0X6A63QKw6er4E39SZ9
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
2N02Pvro1QWez5eo1dDZq8qx17DnPhKNmVad7tkdvdjzBRI5xbjWPsYuWwzP
F+J8/S9shKsBer2G5yqJ/hwOD3yAPYI9FyQyWDE/w7EHet2C56JEphua1t7C
3jMCnksSzb21evi4nujFnst4nifnrMzG/t0TnisSObd5cpkM0SsGnqsl2qWb
9TsNewZ7rpGozQI/a2sj9GLPsevq/vmdwz5fCc99cb+8np46oBd6seeLcP/r
rfx2HLs9e75Yos5HF1v0MdZQzhh4vgS+bhmmOYy9hD1fKpH/rQfHe/RGL/Z8
mUSBC2w+7MW+vxee++F8m7e0dxcT9GLP/eFjbuD8Hdj92fPlEr3Z5hbfro+G
ntfA8wDcD9n1y7Zhb1PB8xX4c59VXZr3RS/2fKVE3wJuuG7C/jQZnmOfbPAq
qqEpemXB81USzWh4Lz8I24E9D0TPoLBm/7D/HIbnq3E+BXQau9xMQ0c7wfMg
iahm2drv2DPY8zXwuiYh3bcferHnayW6vfrgz0/Y533h+Tp8/ahFAwVz9GLP
gyU6ZtVWeY3dgT1fj/NTXJs4tz963YTnGyQ6N+haeSn2EvZ8o0QBMYVdZw5A
L/Z8k0Tno1JdirHvG8DzEIkOmavCp1mgF3uOHSh/vJmPPYA93yzR8inUYOJA
9FoOz0Mlyn8yz+YG9raP8Jx/z76t+9LRg9CLPd8ikfhT/8QV7E8F8HwrvAxP
fW1jiV6j4fk2iVo+66Z/EXsiex6Ov1/u7GpphV4m8DwC71sHPbedwj66B8dB
pEQTeg65bjYYvdjzKImGzC+vTcJuzJ5vx9+XZln1GoJe3+B5tER6NklyPPYC
9jxGolXFOQl61ujFnmNn2Z55EoudMxGe75CoW6Bv245D0Ys93ylRzjat8VHY
PdnzXXhfXO61utUwDT1IgOex8G5kxLlQ7LXs+W6Jgl9Ffmhkg17sOf+evTjf
IBj7+V94Hofnsbixq9Zw9FLD8714PkxXha3EHsGe78P7oXQ16yd25XR4vh/X
a3dJzZIRGoq7Ds8P4P0qLbPvV+yJ7Hk8no8Hfl7ySPQ6Bs8PSvTzhVb0O+yj
+vAce8lH95vzCb3Y8wSJMr+v//cCuwl7fkii/+qtHeBpq6ELfvD8MJ6nNo7z
H2MvYM+P4Pzu82mnyyj0Ys8T4fdkj9v3sXPy4XkSnt81e+om26EXe34U53nu
cYtb2IbseTLO4+7h88eORi9jeH4M90uk3c5r2GvZ8+N4HrvfyBtpj17s+Qm8
n97u9u8y9vPV8DwF7x+xo82HjEGvKnh+UqJ9W2zmnMUeyZ5jH0rUjuo/Fr2K
4fkpiT5X7ss+hh03AZ6fhg/ezWp6j0Mv9vwM+jQZZ3wI+485PD8rUfMKZzeD
8egVD8/PYf8cFBKH7c6ep+J9bEzFxU4T0Is9P4/v977P+2jsC7/h+QW8j+6/
2LmtA3qx5xdxf51+NmErdgf2/BI8af4goOlEDeU6wfPLOE9P7Tq6AXspe54m
0cSEAY/rT0Iv9jwdf/42tslq7AdH4Tn23aCHQ/5gr2XPM/A8a14s8JuMXux5
Jjy/nBFTjf2iPjy/IlGYt5yjdtRQ+FJ4niXRdelT9Qfskez5VfjzeESPhVPQ
yx2eX5Nox4k5U15hx92B59kSLf3kHOg1Fb3Y8xyJHuzqcuwp9t/T8DxXosLU
04/cnDSUbATPr8PTsV0aPcR2Z89v4OdxdB40dRp6sec34VmB15w72BdWwfM8
fL7IH751/HT0Ys+xrRw/XsrB7sie35Lo3VTpja0zej2E57clGvAkvV0G9lL2
/A7exyufjxzqgl7s+V3cv1sfiqnYD8zgeb5ERem7d1i4ohd7fg/nf9DAayew
LdjzAonKHu2p7OOGXuvh+X08n7eLOx3BDv8Jzx/gfWbmq9E9Z6AXe16Inzfk
qnofduUzeP4Q/WYuiu3ijl5T4HmRRCb3q7N3YE9iz4vx/VWN+dxuJnpZwnPs
cRlip3Ds5ER4XiLRVuu5ds090Is9f4TzcEEfeRN2E/b8MZ7nCdkxDWehlxY8
f4LnrcL8ShD2Qvb8qURpNvK7v9gd2fNn+HOnlW2Xe6KXGzwvhf99Zg37jr2U
PS+TqDa31Tzf2ejFnj+X6FLf7WGfsAtPwvMXEh2Y+f6syktD69jzcngzo+2z
CmwL9vwl3ndNmmvPnYNejeH5K4nc7hSblmKHr4Dn2J/GLZ3uPhe92PMK+LPv
1Yoi7M9e8Pw1no8HRgedvDW09wE8f4N+b4fk3cWexJ6/lej9825fJ8xDrws4
7t9JdOdKYcfr2Ml94fl7iR5unjXCbj56secf0GfUhXmZ2E3Z848SnXr3avMw
Hw1dXAfPP2EHvzx5Hnshe16Jr9/hbNHABejFnn/G9Tjg8jcFO/cJPP8iUTOT
WwamC9GLPcfedrLN2ERsI/b8K76/oX0kQxV6DYTnVRKZ39KJ2I+9jj2vxvMy
r+BcVwG92PNveF6beD3eif0iFJ5/l8gx40qtjohetfC8RqIW66t7RGATe/5D
It05P8e0kNDrJTz/KdEG53whBHuvCzz/hc8f8/23asvoxZ7/luheVPWpNdh/
h8HzP/i88pIe/sNOPgHP/0q02s3r53JFQzPZ8394f/k2tUsNdlP2HLtrWvsR
i9To9R88r+X/D1myVyX2Qva8Dr2K260TNOjFnmvJNHDA5EOvsa97wvN6/Htf
7tfn+mpoGXteXyb1Fut3pdhG7HkDmfKi3zeduQi9UuF5Q5nmlMqmxdjr2HNt
meyEa5OmLUYv9vw/mYJsPij52OUt4XkjmXq6VWxzWKKhiDXwvLFMNldOnbyO
Tex5E5mK/aYU2C1FLx943lSm+muzvmZi730Ez7HzXjRsa7MMvdjzZvjvYztb
XMD+lwHPm8vkfaK+0yA/DR0bAM9byORgkO57Ensme95SJq2a8RGm/ujFnreS
aYt50slE7Ish8Ly1TLX3HucbLkcv9ryNTLOelVbux9Zlz9vKdNb1XItuAej1
Ap63k6mFnafpLuxl7LmOTIvjH01ovwK92PP2MlX6G6sisAut4XkHmTbdHLux
xUr0Ys874vvbMfRQCPZA9hx7REXdVe1V6BUBz3VlUqXueL4GO6IhPO8k08MW
9Wv/YRN73lmmkMoRXQIC0esdPO8iU9jMyUNqsPd6wPOuMr1x7e+8aLWGJrPn
3WTa9/qVbyX2P1t4rifTpabSViEIvc7Cc32Z6HrO0dfYM9nz7jJZ6Vflzl2D
Xuy5gUwH2n8tL8W+2Bye95Bp4/Grte5rNaRiz3vK9PGdT+dibF323FCmojvP
LKetQ6958Bx7nIfx1HzsZey5kUxjd9pJDsHoxZ734t9jtNh4HfthGjw3lumX
4bcDdus1FMye95bpzIpNaZnYA9lzE5kahX0uGrYBvXTgeR+ZfriZfD2PHbER
nveVaX2FZbNBG9GLPTeV8b7c3ugk9hcJnpvJtGH89RGmmzS0rwye95PpT6+J
bonYk9lzc5l07h30NQxBr2x43l+m+2Pvbt6PfWwwPB+APhG3DnbdjF7sObZt
yu60ndjN2HMLmb4kjHioE6qhS9vg+UCZ7Jee/RSOrWLPB+F69/yn3SIMvdhz
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
3EbjORlc+B52lJ6X5XzmTkvsu4TzKkPPbTXVMtsx8BZeuZCel9NUeNyZXh5L
OS/peXlNeWTbW13BbyfQ8wqaOrxw7B21jPN6RM8raqrHwrkbz2B36XklTa35
oA1quVxXuRfoeWX+PZddK8biXS70HL8p/vhhoxWcl/S8isb7xcDQvbig9Lwq
5/c1ZpjDSs5rJT2309Sj4Lt2UXi09Lyapk7GpmfaBerKWnpeXVPGXse3bcUX
X9DzGpzXuMmjyq3ivKTnNTXV+9/PGutwNel5LU15Vx7xvGQQ59Wanttryups
WORyHCA9r62pd69iRxdarSsn6XkdTQ0K2VFzAX68np47aOr64ynP8/HKwvS8
rqZO7C8ZOXMN5yU9x6vLLB2Vg9++p+f1NHW1SHp1w1rOazg9r6+ppI0WT9/j
rtLzBpoqf7ZwxPh1nJcbPXdkr/OfD3uBdx2n506aavYsuMqI9ZyX9LyhprKf
13r0EBeUnjfS1N6ly7cM3MB5laLnzpp6nnpt0G3sIz1vrCmzyxm2vTZyXtLz
JpqaPjLpTiK+OI6eu2jqWEzw2s7BnJf0vKmmHCNb9L6Iq0nPcbceh0u03cR5
naPnzTQ1b4/F9ZN4rvS8uaZanW+4tOlmzkt63oLzC2zS6RB+XI6et9TUH9vS
5o5bOK/l9NyVn2/o5bPRuJX0vJWmiozp519rq67e+dLz1pp66HSqeQTe8oye
t9FUwpmfXyuFcF7S87aaam9jdTAY516l5+00td+lwGTrUM7LlZ6319Tc6jfr
BOEB0nPF9/mx73PLMF0Vkp534Ps34V3YYhy7lp7jJYntvM3DOS/peUdN2ZtN
KRuAraXnbprqWNqY/BNffEvPO2mq568+K/wiOC/peWdNHblQtPNnXF163kXj
8bjl3+RtukruQM/deZ59KRD3Gs+VnnfVVLURnf18tnNe0nMPPu/YkQ0z8eMt
9Lwbn89XzzeDIzmvEvS8O39+lZqR93Br6XkPTTVqljCkXxTn9YWvR0/23M7d
NglvGUPPe2lqc6uIJI8dnJf0HA9yTFl6Bed60PPe8nk8VB12cl5n6HkfTeX8
OvPrDB4oPe/L8+7hzCMtd3Fe0vN+/DxxJSfH4tiy9Lw/z8+Q2bWcozkv6bkn
/54F8Y/2Ymvp+QD2PuX5eofdnNcUej5QU06jHnWPwrr0fJCmzozcb1EthvOS
nnvx/Z7qdXorTr5Mz7019XHFY2O5PZyX9HywpkbEudZfh52k50M0te6v9qzk
Xs6rCj3HH73nbV6OA1fT86GaepA0vnehfZyX9HwY388R9QovwO/86PlwTX0u
dflMPt7ymp6P0NTrjBammfs5L+n5SE1Z3F5ULwf/vEnPR2lq97s9mdoBXUW3
p+ej2XuDPRvf44HScx9NVQ3+r/v4g5yX9HwMf59TU/MXOHYTPR+rqUk5544P
P8R5Sc/HaSo0u+aUh9hGej5eUwcqjKwx8LCu4j/R8wmaKjh7+r1UrEvPsXm5
cSt7HuG8pOcTef5nN1SJONmdnk/S1Jx/KTmdjnJe0vPJmjrfr0fMBdxQej5F
Uy5vtg1rE6urJxH0fCo/f3yS1UkcaE3PfTXV/MXdKy7HOC/puaapZT2PzzqI
3+XSc4Om1loYnBoc57wm0XNdU0eLWDzbhT2k50ZN9Rqqbah5gvPqTc9Nmrps
ccw9HEfH03M/TZnM0vIqnuS8pOfTNHXW8+b+jbiQ9BwXsAgfaXWK86pEz6dr
antJD5tVeIz0fIam8qbfulI0jvOSns/U1OQODWYuwvFGej5LUwO00fXNTnNe
0nN/TdlamB7PxtWl57M1Vfzf0KBcnHydns/RVPDY6sp0RlfzpOcBmrJ2Pfvl
I24oPZ+rqYzZLlGTznJeNen5PL5fzgs9X+HAjfR8vqYyvfYVGn2O85KeL+B5
nnvg+BP83p+e/6ep/0qvHO99XldbP9BzPDhSVbiLPaTnC+nnkeSEPhc4r9v0
fJGmsjq2nHUTR3em54vp1QD/el0vcl7S8yU4e2P6JVxYer5UU+2KrVzePl5X
x8Lo+TJNzTrs7Xoaj5GeL9fUkCzzt80vcV7S8xWaUjsXbj6C47/T85WaWvAj
w73hZc5Leh6oqdkPbXJjcA3p+Sqeh/1r7qp9RVcpPel5EM9Ln2IDtuN50vPV
/P2lblpUvcp5Sc9xmOf4I5vxk530fI2mZrg+Hln2GudVgZ6v1VTt8/VLr8Ft
pOfr6NGbfmeLJ3Bef+j5ek2NPO45eSneaqDnGzQV4ehc0SKR85Keb+Tz7Pny
6lz8cwA9D9ZU5Up+fnk4OoGeb9KUZfDjGtOv62qQ9Hyzplpcskv+ggtLz7do
6ndUqzlTb3Be1en5Vk0dbOVc7y0eIz0P4fu9/N/dMTc5L+l5KH1Zv/u/pzh+
Jj3HN7wbNBp6S1dG6XkY96fMpY/u4xrS83D67XBuaf8kziuFnkdoanGTJJdk
PE96vo3zL3gys1sy5yU93879Knz2yqv4SV16HqmpHxYVW3RM0dWqEHoepamQ
5muen8VtpOc7NPWi5bNVrqmc13x6vlNTtUqWcD2Gt36j57s0dehYmSzn25yX
9DyafTb9FLQP/3pAz3fzPFsV7Vr3jq52d6fn2HDBNSsKD5Kex/D5p+4MqpbG
eUnP9/D5xb9vGYKPRdHzvdy3NhZ/Ue4u5yU938f9rmehVetwWen5fk15Zj9o
Xuqeri79pucHsN+Sp8uxUXp+UFMvX5dcUeg+5yU9P8R920NzWYBT+tPzw+wh
ZM/jfDxPen6EvmWeXzzzga4aSc+P8nyqcLBhDs7YS89jNTW+68z7WjrnZUfP
j9FPY+X573Eb6TleuWlz3fEPOS8Len6c/p/+lPIcb51Oz0/Q98zqs4Y/0lU3
6flJfr5CjjUe4l9D6Pkp7kONrRIHPOa8kuh5HN/PMSmGVDxIen5aUxe2T6zQ
8wnnJT0/w+f17vH5BHysDj0/y/OvQ/3xnTJ0NVZ6fk5Ty2P6lrqAy0rPz2vK
1b7/sdaZnNdcen6Bnye24dAT2Cg9v0i/h2QVcHnKeUnP4/n8q/jFHMAp9+g5
9sx70rv+M13Nl55fYu8/avzYiRtJzy9r6rG1Cq3xnPNqSM+vcB/t17JjGF61
nZ5fZX8nir2p8ILzkp5f437Q6cSqDTh7CT1P0FSh321dymTpKuQXPU9kn0/C
H6zE3aTn1zU17VN6QJGXnFcGPb/B+0/jTzUX4t196flNTfWLzrj2Fw+Snt/S
lHu/3VP8X+mqiPQ8ie9j0x5WP/DxGHqezL76Xj+mv+a8pOf45p6agz/gstLz
FO6bHQf8nfCG8zKn56masqs8OjILG6Xnt3m/aO7RZeRbXdWUnt/h79tc7N0j
nOpNz9M0NbbDrlWD3nFe0vO7nG/TKo3v4EbS83uaquc3Ja3Xe87rMD2/z/tS
gU0zruNV9vT8gaZWPAup1CVbV22l5+ma+mAz++xFnG1Jzx9q6k5I05FtP3Be
c+j5I00tmp1Q4BTuJj1/zPvTseY7m37kvEbRczy5+zz3Q3h3Gj1/oqnGKvJt
g0+68pKeZ/B5b4xYGY2LSM8zNZXYa4ZTrc+clyM9f6qpBlPrJYfjsdLzZ/Th
2zFDpS+cl/T8Oe8/L6pYB+NLi+j5C03ltx9+1OqrrkzS8yzed4r7e67CNaXn
L7lvuBu+F/3GeT2m5694vv5QwYvwfOn5a+4rlbKbm+VwXtLzN3w+x/X7s3FG
U3r+lvO/mTojFwdF03Pcf0SJCqbvnJf0/B33D0ONkx9xdiA9f8/9zNzKa9IP
zuvf3ElnsulNuUe5L3E36fkHTS08NG/TqFxd5WXR84/0+fbf5k9wzCB6/klT
MwO87nn95Lyk55819TM2cFoaLiI9/6Kpe/4hZfv84rwO0vOv7Dt10dEbeKz0
/Bv3j7iu/dzzdGUrPc/RVHfX15/j8eUi9Py7pjr1Hrm63W/OS3r+g/etv0ed
4nBN6Tle1O35jWb5nNcIep7L/afp+4mH8Xzp+U9NBZ1LKuL0R1fO0vNf9OB9
4M7dOPMEPc/TlN/Z2m72fzmv+uTtN/1svuVpBG4rPc/XVAfv1wGV/3Fepen5
H01FOpSpvAmH/EfP//K83GFz0trMqLpLz//x+aR88QzCf1z4fpkZ1ImDe75Y
mhvVgKn0FK9xaxe0GO/bxffN3KAmBO2rb17AqAo+pa947rrvV+fgIRX5/mGb
fhV9fuKj/ehtAYMal1z+n8nCqIoH8n3Ex0p82foJj75Cfy0MqkOJnc0nFzSq
uL8xX27jLikut19hq5b0uKBBFRkSNnV0IaOaqPN9xecPPCuagS/uoc+FDGr/
LbMd3oWNqkIW319cOi6v3V1sqEqvCxtUrenJ6X2KGNW1gXyfcd2C8/xu4mpr
6HcRg/IeZ1m6a1GjmpHI9xvnhPvGXMJJBeh5UYNqceiAW3tLo6rThu87Hhaa
+CQOB0yj73jn2PMzmhczqrsH+P5bGlS3UmusjmDHN/QeL9vceq9TcaNaVIPn
QTGDCi0c3ykGPx5M//GFwbUy7EsYlcsGng/FDcpl04gZ2/DKW9wHsOO56WWq
lDSq54V5XpQwqHepE2I24VaK+wHeldaso00po1o3i+dHSYPamvDkYRB+e4T7
Ai54aKSpWGmj6pDN86SU/HeI54ovwZtrc38Qj86NMi9jVJ+H83zBbRoXbxOA
3TdznyhtUHH5v+78xBGpPG9w8tVLk/2sjCq3GPeLMgZ1eO0Ei8+4VyeePzhs
xJutk62NalcA9w0rg7rexK3Ja/znOM8jrJeclTjahn195v5hbVA3vywfmYH3
1+P5hMs8n5brXZZ9+XAfsTGoWU/bBN3FQ0N5XuE2nzLs+9qyr7vcT8oa1IYy
Q0/fxMVL8/zCx7rE9u1ajn115b6CH65//foSjlvA88yWzzPve0D78kZlfZr7
Cy44J9PmNJ6Yw/OtnEH5V94R07wC+3LiPoNvPnRrfwRXGM/zrjyfz5lzaU4V
2dc27jc462LZSTE4IZ3nXwWDsv3Y+Z99JfZlw30H53fst2EbntGD52FFzi/e
tV6VyuxrMfcffFnLP7sJ1znP87ES++2xtZ9NFaOa+5P7EM7ytnkdhO82Zs6V
+flCxs8uVtWonCZzP8KFbDaVXoIX7eD5iU/Fb48yt2NfT7gvVeH89y1tEYBd
yvM8xVPvdL3xE6/sw/2pqkHdbflyuF81o3qxnOcrbpY59Osn3OoS9yk7g7qU
cHDx5OrsK5/nLT6Y+6TCa/y2GferagbV0Pf13tE12JfG8xebGt5sl4G37Oa+
Vd2gDrQKTPWuyb6e8TzGthsdxtzFXStz/6phUA/ah//oU4t9efJ8xvXbfl52
E+eu4j6G26yuWrmrPfu6xvO6Js+LlnX2X8K7zLif4YmtirVvX9uo/rry/K5l
UK82JabE4QEm7mv4bb8xo5vXYV/7eJ7bG1Tk1IffDuOCr7i/Ybd3DRY7ObCv
ajzfa/N5XfcqF4NjvbjPia1GRdvXZV/reN7XMajpFzu13IZ9bnC/w5seWSRW
rse+CvL8d+B5OTrcexO2bsd9T+xV9p11ffY1gx7UNahr58f6B+GLh7j/4TFb
1xUr1sCoKr6jD3jDu61bF2NDLe6D9Qxq+ZG59c0d2ddQeoF9c9rGzcHVgrkf
1jcovyMPPH7iGcn0Ayd+7JVucjKq5KLcFxsY1Oa92yZ8wnU60hNs8/5W7qSG
7Gs290dH/v6D95a8wndj6QuOy4uzHd2IfX3kPulkUB2T/Xc8wYsd6A2u26ic
i7cz+xrJ/bKhQYVUWXUxDTfdSn/w5S2Zvfs0Zl93uG/iO7tLZtzAL0rQo0YG
9bV7+SnuTdhXF+6fuNfi/F/xeN08+uRsUNaDzi5t52JU705yH8UTL3nbxuEO
X+lVY4NacDM1sllT9tWA+yn+z6+282H8eQzvo014/p31POvYjH2Fc1/FX2NG
dNuNt93n/dTFoI627nK/VnP2VYb7Ky4xreiYCNy7G++rTQ2qpteuz5VasK+F
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
ped4QIO2G8y7sK+x9NyVPTR5cncO7iw9x81bDSv/E4dKz1uxX7ezXiZ39mVF
z/GJPn+2fMTdpeetddXDp+qjiV3Zl/Qc1wmoWuUl/n2WnrfRVYltf4aO9GBf
0nN8/dbZsEd4j/S8ra4cig7PGNiNfUnP8cc+GXa3sbf0HL+KaTeiZ3eTOiw9
b0d/y86LSMBFpec4cH1EplsPkxopPW/P89NhW7Xz+IT0HA+5M39Eq57sS3qu
dFVoc4eIY3ic9Byvn/E8w7kX+5Ked9DVDZOP3T5cTnqO/YIuD3Pozb6k5x05
v8RCYZH4ylN6jpvXcXhctQ/7kp676SpjV93KW7Cf9Bzb9iw2uGxfk7oZSM9x
eKWbm1fjWtLzTjyvrXzvF+tnUrOl5/h6k8+2S/DtlvS8s65+ze/nad6ffUnP
8cY/G9bNwQuk5134vu05wZLZVxY9x87L40qZPE2qsfTcXVcnQ8J6fMTLpOf4
2ouRKyYOYF9r6HlXnm8+BROycAvpOV5aeVmhkQPZl/TcQ1eXS2V3fIRft6Hn
eGs75/kDB7Ev6Xk3XSXv8zybioOl57jOEO+8Hl7s6w09x2O7t2uRgDtLz7vz
fZ1n4efmbVJh0nO87+fuQ+dwzgZ63kNXbU41/OA62KR6SM9xfPyGesdwlPS8
p64Kl3801nkI+1L0HCeeMI/ci/tJz3vx8+wqmlFnKPuSnuPHLz9VjMQFpOe9
dXVo+okBVYexL+k5thkyYu1mfFh63od/74bXN22Gsy/pOV5Wu0/R1Xik9BzX
KL3FrdgIkzopPe+rqz794+cuxqWl5zj9241TZiNNarz0vB/3u6/Hcmbjc9Jz
bNZ3fqNcXE563p8/z6rBJOMo9iU9xzuaHt/xAV/xoeeeuup2tkbmhNEmVVV6
jtP2Ta2Yhf2k5wO4/xXa2n+ED/sqTc/x5mu7Vj3EtaTnA3U18Mf6awPGsC/p
Oc5fN8o8Fd85Tc8H6ap7ROnWPcayL+k5Llg13O8a/k96jl+VLHmg4zj2NZ6e
e+nqqGno67O4sfQc1+8TWN11vEktl55766r4zlDvWPzUhp7j8n6r1jWaYFIt
peeDeR6cH35jD14tPcd7l5YpWGci+zrP436Iro4kR7bZjttJz/HzzbbTqkxi
X9LzoXwfsibs34Q/TqbnOPZY6EvryexLej5MV/dKHK4ahMOk57hS9s4BllPY
V3l6jjsMmL1qEe4hPR/O+0e3xlf+4R3Sc+x081q+/1T2dYmey+8NedKu6Q/c
X3qOV84Lnqz7si/p+UhdqdikyGxcQHqOuwW8Th+vsS/p+Sj6/vhpmRf4sPQc
e92Jcx9uMClL6floPk+faXPT8UjpOQ5dXeaYp86+pOc+9NMr8H0yLi09x2YX
3tTobmRf0vMxnG9Cba+r+Lz0HE8yugV1MLEv6Tk+eaHD5TPYV3o+VldnYqvn
tfBjX6/oOW7S52mjo7iq9Hwcz9cN88c2nMa+pOd43CLzkBh8cx09H6+rkOo+
KfbTTcpeeo6dJ+8stA3Plp5P0NWLsQmtKs9gX+3oOZ5ifVMLxvWl5xN1tdx4
aIfVTPYlPcc5S6elB+KH7+j5JP4+z8qlis5iX9JzHJq+veNCvFx6jntXtJzx
Fz8NpueTue/Y9t07y599Sc9xheRZmTl4jfR8Cu97XRfaGGazr470HK9eONX9
PW4vPZ+qq7AFLWePm8O+pOd4caesA8/wx4/03FdX/24Zng8NYF/Sc3y1Wobt
AxwmPdd0ta61o0f/uSb1fSs9x1VqDZmThHtIzw3cfx9MOugxj31Jz3GvoUOe
X8a/u9BzPPGwo62az76k57qu7NMz3E/jvdJz3PKu7t98AfuSnht1NTz65b7D
eLD0HPfo2yrT8T/2JT036epcmma1G1tKz/F4lyVutRayL+m5H88LLWBaOD4p
Pcddlg+IrrjIpMpIz+X3iCwslb4Bj5ee46iRu4uVWcy+pOfT+b7XqNVmJS4n
Pcctrs2dWngJ+5Kez9DVfM/T4Qvw1Yn0HMddf5Ccj6tKz3FYg/tmM5ea1DTp
+UxdZc483vgbvmlLz3Hz2OmjfZexL+n5LF15Z5Zf/xbPlp7jP7+3XBqznH1d
pOf+unpQ/M+3TNxAeo4jynSwH7KCfUnPZ+vKssQ4z3v44VR6jhP/TV7UdyX7
kp7P0dWmD/1ib+Ll0nPscL9SlnugST2rSM8DeB6cu2RzCbeUnuMRO3q6tVvF
vqTn2LDypPEUfn2Fns/VVblpBSObBrEv6Tku7NM49SDeJD2fp6uvA9ubNVjN
vnR6jtf0a9hoF+4iPZ/Pngb9HVZjDfuSnuOD4w8GhuLvVen5An7eRR1Ol1/L
vqTn2OxQ7Nt1eIf0/D/O933RCqXWmVR+Ij3H1V3bdVmO+0vPF+qq3VZPv4Lr
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
Vad/wRWk57hg3YdrpjxjX9LzZL6/XrP2vsbXfvJ4xvsO5F0Z/Zx9Sc9T+H7W
H/70CZ4uPcfRSVF5Xi9MKmkHPU/VVb3QG2XTcG3pOb674W7D3lkmFSA9x53j
Lna9jtP60PPbfJ6l1ozu/JJ9Sc/xm7VqzgW8UHp+R1d93e9sbP2KfeXTc/yp
UdeDx7GL9DyN51/PiITGr9mX9DxN7gMPnu3Dz3fT87vc151y8hzesC/pOd78
9YtNFF4rPb+nq0HfUh3t3prUW096jrOdN3TegpX0/L6uvu9rObzsO/YlPcfF
Jp6fvhp/IudmD/i8xtVdXew9+5Ke46vRpujFOEJ6jrc5bT9vls2+yNuYdF19
/nXo/mzcS3qOe5eK+vQD75SeP9SV15QZRYwf2BeP+wS8w7ZhtQ/YU3r+iH0W
v9Z8wkf2JT3Hvn069nqBC0rPH/N++jJi7PBP7Et6jk03Muek46PS8yfcpwoV
2OD5mX1Jz/G89YX3JuPR0vMM3s9nfrjY7YtJxUnPsdex4w+uYCvpOf7UffQn
9dWkJkrPM3UV3/ZzoTP4gvQcTw4cWaXFN/YlPX/K99n1aJMjWJOe45Aub7o6
5bCv2fT8ma76Hfs3fDeuJj3H7Zb+8qv1nX1Jz5/rKvfs3RXhOMmBnmPrIRu2
VfzBvqTnL3i+jmx2fAMOkJ7jtKSTN0rnmtTdO/Q8S1e7dts9W4EdpefY9dO4
H4V+mtQi6TmutWNt8QX40Tx6/pL7b0J49XzsIj2X33MyIqjZjF/sS3r+it5P
GNntK37O4zkd/3xVdsTUPJNqJT1/zfv4o72mN3it9Bwfc6+9zOc3++Jx1fYN
31+nBaEZWEnPcfug84e889mX9Pwt97XJTy+n4c98fbfjztdePOj9h31Jz9/x
fYxMzL6OI6Tn2PhvrVmXv+xLfp3Ce+6bmW3KXsS9pOdYd7vu0OafSe2SnuPb
Tq1an8B/5P/8ks33LSKwVxMzPzVAeo47hVwctR/vk55/0FVAjXS/uuZ+qqD0
HNdpemdpFB4iPf/I9zvt4Fa7An7qqPQcVy2k7d+Ci0vPP+lq7dUyF8pa+KnR
0nOcUGnj7dU4Tnr+Wf57gvysYgX9lJX0HF9Z0Dl3MZ4oPf8iv2dNtzQv5Kcu
Ss/xkS7zK8/BFaTnuP8a3SkXG6TnX3VVd3rn9sbCfuraX3qOE3797vMBV5Oe
f2OvVTaOnlDET02XnuN9T8v4vcBJe+h5Ds8Ld23x8KJ+qo70HG/oeyg4HQdI
z79znzRPi/a09FN3+bodwTbeD08mY0fp+Q/25X0psVsxP7VIeo7PWKx+eAU/
Zn7lcvl8Brd9r4r7KRfpOa4yPOn3abxSev6T+4BVxxItSvip53wc/viS3+Yq
R3Ar6TkOXZHq6FTST62Tnv/i/uz5oc1u/JYfLxM3vvO+R61SfqqD9DyP3lve
GhqON0vP8ZjcNVMqlvZTn+X//eZvziOixZwN2F16/lt+3osrS5fxUxHS83ze
L+2dQlbgXPl13fhcwTl7Cln5qV7S8z/sZ8f+U/PxLuk5zi4cn/Ab/+HxXOIv
9x3HU/enW7Mv6TlOKLf+1Re8X3qOz13r/X2KDfuSnv/j+aY+WbzBQ6XneNlC
3dqnLPuSnpsZ1ey196pn4OLSc9x8il0jb1v2JT03N6puth5t03Cc9Bx3DhrY
vXc5P2UtPS9gVLEPunhfxxOl57juj4rjO5dnX9JzC6Nq+CbZ7wKuID3HAw9N
+K91BfYlPS/I/7xP1urjOIHjW4k7JnYMa1yRfUnPCxmVfdVFe/bhGdJzPKLn
7hMOldgXf9wnvHDIwcuRuI70vLBRVfbYklq1MvuSnuOT5cdlbMZ3yWX/Ikb1
MsH2vU0VP+UkPcfOw3fnBuFF0vOiRlUnvWrBYlXZl/zn1HhA6+llFmMX6bkl
57HkcBUzO/YlPcdrTyfXnY1f8DitUsyojj9OafoDt5Ke467vY5VejX1Jz4sb
1e03s3tk47c8Xhbgp/dqe42vzr6k59jsxBGf53iL9LyEUZ1ZUVMbVoN98XV7
iSP7T/N/gLtKz0saVRubvYv712Rf0nNc/salNUk4l/l5lDKqc3POh3jUYl/S
c3G98F2X8S7peWmj2n5nxOH29n7qLx/HAfxldsEzcXiA9LwMf7594NVmtdmX
9BwXT/qRcggXlJ5bGdU7/06PGtRhX9JzPMZx2stdOFZ6bm1U5lnLPtVwYF/S
c9w7at6vUOwjPcf3JntbVKjLvqTnNkZVs325kuuxtfQcn7E7Xq5UPfYlPS8r
/52na/Xl+KL0XH5vimVEvYL1/VRF6bmtUV0u96bJPGyQnuP85mXb5OEEHn9O
5Yyq8eRanac1YF/Sc/wl1rbXZzxDel7eqOJt3w+c7OinknkcrMUNV0eNeIXr
SM8rcH41208Y5eSn5krPcX7qWcNjfFf+329hQ3i1WYMasi/peUU+r+VjFtzG
i6TnuMrGwOU9G7Ev+XWdlYxqXPymtQm4qfQcF7FZssXNmX1Jzysb1Yplg7af
wy84vnPYZF8ixrUx+5KeVzGqXm+iDsXiddJzHHnX7mSjJn7qHX9czapGlfNh
zvk9uIP0HCc1OXe1tgv7kp7bGdWJnc9vbcOfyeVS3KLru7TKTdmX9BynVb77
KBhvk55XMyrbmlHPrZqxL/LxHv831PNtIO4tPa/O33/zzacizdmX9Bz/No38
8R/+y+O0dw2jsvE8nf8HD5CeY6PvrwKzWrAv6XlNo4q4XMkyBxeSnuOqXtVK
ay3Zl/S8llFNq1/E9h2OlZ7jBm1vVxrryr6k5/ZGlbB2fvWn2Ed6jpPrWdcZ
0spPnZae1zaqq4WXNriHraXn2KV+pnPf1n5qkvQch2ys1Pwmvig9r2NUi7u5
tnZvw76k59ivW2sVjw3Scwej+hhcvXPbtuyLf24Sntn4rcdJXF16Xteogitv
7OXSjn1Jz3HSQPv+B3AyOXepZ1Q7soIH1WvPvqTnOPRq9pAdeK70vL5Rtf5b
e2Q15afukbdNuOCqjmO2YifpeQOjCvDrOMG2g59aLD3HDsdrT1mDH/O4/41X
9M/WindkX9JzR55vvYJNS/BK6TleEF1rhrkb++LxN9KJ8x61wX8Obi09x3Pn
vAnIxeuk5w15vv+utsDYiX3xOLiMQzNaLfqAO0jPG/F8ruu6dEJn9iU9x9/S
K614gb/w9ajrbFQPczIDh3dhX9JzvMV/2ep0vE163tioDk0pu87TnX0xl1V4
x82FG5Jxb+l5E6P6HnIvuFtXPxUtPce1H5fYcgX/5fi+4JNBdUKUh58aKD13
4XlxrFbYabxfeo5L9C0Y0bwb+5KeN2UfPgnbDuOh0nOc/1GLdOzOvqTnzYyq
bE5eVDQuIT3HwX4Td9bswb6k5835vhpP7wrDp6Xn+OWHz9EVerIv6XkLozry
1jJmPZ4kPcefxxXeU6qXn4qXnrfkvMe/2rMcV5Se4zPvY/YW7O2ndOk57vmj
z755OIHHlcHVqPose7QvD1eXnuPOUR77p/VhX9LzVka1v2vI/s84ma9vGi7q
n7J/cl8/5SA9b833ueXb/a/wXOk53rDk5f5R/dgXc3Ztw/NzzJX9j7GT9By/
Tlu2f1B/9iU9b8t94UGj/bfxEz7eMPzXELevpyf7kp6343kaUXdfAg6UnuPb
4/z3ug1gX/xzC7Q3qhrXDu45h1tLz/HQ+IQY14F+ar30HBcYfGV3LH5Hzscp
o1q3emd0o0F+qqP0HC8fM3HXHrxFet7BqCY8LLOzthf7Im/X8Z6vIVHbcFfp
eUejSjlQLLKyN/uSnuNBZYZtC8Y/5T+XcuO8K6wPtxrMvqTneG7ivtBAHC2P
005GVdF+z9YiQ9gXj7/1uGT9lZv/wwOl552N6v7j3sF/8AHpOf7S9uf6mUPZ
l/QcP+61aO03PEx63oXnn1VOkO8w9iU9x7ZL3APf4hLSc3fO4+Dc5WOGsy/p
OR4ftGVJJj4tPe/Knuw3Lxw8wk/ZSM/xKZP//Lt4kvTcw6h+zVEBfUayL+k5
/tDh3awbuKL0vBt//+UZ07uMYl/Sc/yq4FvjRZzIj2fd3aieF2qntRnNvqTn
+L+E6ZNP4JnS8x5G5dZr/fgmPuyL/E7H2zav99mPHaTnuGzMjBF1x7Av6XlP
7mML2g+JwvfI0SPcuOb7gXZj/VRD6Xkvnoer/PttwYul59hw5UPPsuPYF4/n
9r2Nas31Th6rcVPpOd4bPq9TsfHsS3rex6hauYW3X4yzeFxF4ROntrUym8C+
pOd9jSrMYmmz2Xi99ByPq9nX+Qd+x9e3aL//K7r3uB7vPo7jMozESAuN22E2
aU73Fpnj1xi6mUlb5VBDGRWqq2sKHSSVTmQ5dlSUcqi2olKSMsuhFncUc9iQ
O8psjYqH1v36/Pl87LEe1e99fV/Xb492/TS1s3+HhZcr+5Ke4+hHMR804Tjp
Ob4T0W3oGjf2JR+vZauptp4rzB5ga+k5dnBNNHF0Z1/S86805XOkpHcdbpPH
ceLKkvLutuvYl/T8a03dKDzRuQoflZ7j7vs3vZm3Xlcd/LgT7DR1z96ipRzb
Sc/xtfaS59M3sC/pub2mlkRYPSnEXaXn+M9/Yh9YerAv6bmDpno71vyajU9J
z7FFeluNhSf7kp7jc792qkrDLtLzJbyeHU0Xh3qxL+k5/rfx2XPxuJ/0fCnX
97teBaYa+5Ke4xFGPX7Yjcuk58t4fVu2Zxp568pMeo6X3HiUEoa9pOfLud6O
m8d11tkXx0sejty06Ht/PFR67qipDTOXR7RhX+k59umyYJv3d7qq5nIb4MT9
0oUhm//AI6Xn+GZQrZfrRl0FSs+/0ZTZDG/XR/imPP4Ar2hvXvGND/uSnuPB
JXYOt3GI9HyFpi5vS/rya1/2Jf+5BN9ZcHlONZ4gPV/JPx98e9r8TexLeo57
tFZaXsSP+PY+X6WpPrfTPpq5mX1Jz7FdxcrhxThWeu7M+VxuMNBqi64ayW8m
1q6GvPMj/kx67qIpy/pnXcf4sS/pOTZ8Z/Kbo/gvctR7tabWzXdrHu7PvqTn
uDI+oCERp0jPcaqBz70BAeyL41n7VlOrAmxrYvEi6TkO7GdyuXcg+5Ker9GU
V1nBuXDcwXFVi49HzTzVZSv7kp6v5et5Zx0LxFnSc3zVtyP5Ne4mPXfVVFyi
5d7vgtiX9BwHP/wi4k98SnrupqnX8+cHum9jX9JzrNeN1h9jF+m5u6ZWRzSv
XRmsq2LpOZ7hnOB4B/eTnq/j9XaxWGy/XVfu0nMctCthznVcJj3H1fXNk78I
YV/S8/Wct2vHjKvAXtJz3NNswfuzQtkXX85uA9fP64X9S/Aw6Tk+bzSx56dh
7Et67sH1YGPQkYur5eOyccSlnOaxO9iX9NyT93s+sx9n4kDpOW5fVnxrRLiu
auXjNby4n/YdUJmMx0rP8clfHErNInQVKj3XuJ9Z6Z+7F9/lOA3Go8eHpveJ
ZF/Sc1w71ftgJI6SnnvTk/DZUd2i2BfHy//wdNPXAUF4qvRcZ5/1sV5vcKz0
HC991dfFJ5p9cbnN/477scW6XTP+THqOC/46M2/9TvYlPd+oKb9b9ZMbcDPz
y8EPDV+Odt7FvqTnPlwvYQ3/uodTpOd41aLSPkti2Bcvh4kvPVrj17kGL5Ke
45LKQS8W7tZVhvR8k6Zat6fUX8IdfHu+ePNOw9rZ3+vKXnqO8xrtK87hLOn5
ZnqaFF44OZZ9Sc+x6dHkY6ewo/R8C9dr97j48XvYl/QcJ5b5Rh3HvaTnfprq
WjfF/8O97Et6jn+2frg+BRdLz/25/gZ6OA3ax76k59h43v2F+7G79DyA76/2
kxnG+3VVLj3HrRXrxkVjM+l5IO9XBkcM6X5AV5r0HDfXRr4TjC9xHLTiL9q8
OtrxMOn5Vu73t0597nuQfUnP8WOvxnt/42ouj+VB3M9UBVRtiNOVufQcT97X
cvYJDpSeb+P9/tXFJ13i2RdzKcUlnrEJ9/FY6XkwXy+kIHJpAvuSngfLcwXL
Nt/A9/j1jdjOefx2juuiRPYlPcf9N25zuIKjpech7GPZp3PnJLEvvlw4rsiv
mXAeT5Weh/L6R381Ymoy+5Ke41V3C4zzcSO5fIYnZRoYfHxIV7Ok52G8f28e
+/wEjpOeY9Mz6u7IFPZFPmx20EcDqyup2Fp6jl2u9C0cnMq+pOfhmvqp/7X0
A/gVx+lpHNqg7+l3mH1JzyP4/me0B+3EGdJz/PsgN48eR9gXx4tZpKZsg4uW
b8f20nNc5/2XdQfOlp5HaerX5z2tNqexL+k5vtRmOOIldpKe414xf/TxTGdf
0vNo7lfyT7c/xb2k53ieh/PT1UfZl/R8p/x8L27+houl57jhgFv5sgxdmUjP
d2lqVK+fsm9id+k5njOgS4JNJvuSnsdoKqNo5I6r2Ex6jovaxulzj7Ev6flu
TT2tHrSiDF8m5wdx4ud/zJ92nH1Jz7+nzw5HrArwJuk5/sxwxvufnGBf5K0d
d3cs6Z2FzaXnsZxXNsNfm59kX9JzHP3Urf4wruW4X7VHU0PND1T/K0tX46Tn
eJjRsaKDOFR6vpf7x/2H0k2y2RfH30VsXLll9y48QXq+j/PrxBQ/wxz2JT3H
OZN++zYE13McfLSf61Nzten0A/uSnuNZS2unbMF7pOcHeL/VPOrDFtzI5bEL
vzttZR+vH9mX9Pwg99+T/V834njpOfZs8n/0bS77kv+9Edt95Vz1O/6P9DxO
U/u9xxQsz2Nf0nOcNP9OSi1+JbdD8lyXux6Ri0+xL+l5vDxHs0GvxBnS8wTe
r0783GneaV11kp7jiI7QueXYXnqeyP3vjpPjp+ezL+k5zr5eMLAQd5OeJ2lq
0/2MzpYF7Et6jufl+Ddm4dPS82T+/TlWNaMK2Zf0HMccvlF8BK+WnuO6Coe0
IWfYl/T8kKbK8kuj47CJ9BznefXa+G4R+5Kep3B9tE13isHl0nO8aMHXc3oW
6+o96Xmqpi56LBobijXpOf7debypwVn2xeU75bCmulm8bN+Ch0nPcUJ5Un0L
3iQ9P8L9zsdjKr1KdHWNOSfj3I2H8pqwufQ8jfMsti1+zTldbZWe4yU7JgQ/
wLW8vF3S2ZeDvZtjKfuSnuPit5xs6nCo9BzHRllPsj3Pvvhx1x6l3y8GDqnC
E6XneMeUX7pal7Ev6XkGr7+La1M5rifnV7G5Z8P16eXsS3qeye9jxYLCQrxH
eo4PTdibbHlBV03ycdjHNDWyuSwkG8+SnmOT/TfcLX5iX9Lz45wPH1TapOFm
+fgMfCI502roRfYlPZfnunRzHxyPU6XnOHJp37dMf2ZfHH+vsE1SQkMMtpGe
n+T+/rpRVc8K9iU9x36vVuaG4k7S8yzen/ZLOGBwiX1Jz3HZ8CJ/P5wtPc/m
PDE/t6oVvy09xzM/yJirXWZf0vMcfh/vbRz9DJ+WnmNTo1F9115hX9LzH9h3
W+nLB3i19BwvfzDttuNVXZ2Vnv+oqdLLySV12ER6ji1yH6faVupqnfQ8V1Nv
EozDqnC59BwfDH/f3bqKfUnPsfPmgV9ewJr0PI/3E54vPp7xC/siv3dxrw15
pmfwcOn5Ka4X7yWvLavZl/Qc9wh+eDcbX5PHlZ7m95O4+LzFNfYlPcfuF9KP
pOGt0vN8TVm9uh829Lqu6uTPm/DMaf+4xeNx0vMC3t/uNlho+l9dhcnxh+Pa
nozfjeXjcA0LuT/T8vsZ1bAv6TkONnBrCcXycTmtOCjd4JbBDfbF5bvhDNeH
c0CRH5bH49djfdJvia14j/S8iPs585FbtZvsizlfx9Gf2K56hmdJz4u5H17m
MnttLfuSnuOa1KUfPsR/8/JaneW86DGxu1Md+5Ke4wW7W57UYXm83ogS7s+n
JFyxvcW++HHjcVuPkSersPy5nvE5rp/2fTutb+tK/rwuHN/u3+RxAUvOO5Vq
6v/czQ6e
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\) (m)\"", TraditionalForm], 
    FormBox["\"r (m)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-233.2780340678693, 333.6729582998647}, {0, 300.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8199491332947397`*^9, 3.819949299834363*^9, {3.819949339770439*^9, 
   3.819949353772887*^9}, {3.819949416131957*^9, 3.8199494510247726`*^9}, {
   3.819949500795576*^9, 3.8199495088595743`*^9}, {3.8199496208518825`*^9, 
   3.8199496306765137`*^9}, 3.819949697954501*^9, 3.8199498353344445`*^9, {
   3.819949867699834*^9, 3.81994987344401*^9}, 3.819950015544816*^9, 
   3.819950073438878*^9, {3.819950313520076*^9, 3.8199503367411814`*^9}, 
   3.819950447737217*^9, 3.81995063047612*^9, 3.819951432439743*^9, 
   3.819951500729188*^9, 3.8199535701943684`*^9, 3.8199546756317754`*^9, 
   3.820032599673008*^9, 3.8269539473160725`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
W/jetgdk6fPivU2yGCux+TmbWw9M+c8mqc/J4vL17vV4tQdiTLeNXxaRw/iM
cWHPcMLf4w8azw3kMPfAQEv00x7odsWSd05yqO239WBKZg/QfcOzUkPlcHjh
+9vUzz2weCeDEpwphz5vvWYfN/fA0Jm1peatckjqztC7MdQDpbzHTRYX5LDR
0zfh4EwPXAvO4IkSlcd7TuGSIqt64V/TiX28II+czJusr/y9wNcsr+17Wh5/
1lUt+0n2Qgyn4r+aUHkcLs25LKjWC7z7B7+xZcpjwgsvlySTXvgSKcySapFH
UrXwkJhNL7hZCZxVnpdHH/3whQjnXlC0vnZ3p8hujN/x9OOETy9Yrj95hVt/
NyYOzpnAnV64JqHp2HJqN455b38RHNcLFxqnfW4H78bY0jBG8atemNZjDEm+
3o39n69J0T70Qu0AvTmjfjdydktcWK7uhU9pqh7bp3ajs3ho+5rOXvhsHv7f
TX4F7IxOcF/N7IWtLjvOf1FXQH8HOdLiQi/YpL6RWD5C2FVGL/Zx9YFCl7WK
2HUF5LU/xvZeuA+sVxq/7HqugL1q/7ivyvTBo317N2wvV8AYLfk4NY0+4JEO
lGenKxD8CXwaJvVB8NI7s1buPSji1HYvwKYPNClx9+7J7cH4jjMigs59IGd/
R0Ldcg9K38u7GO/dBwE6R+VrPfZgUPnVl3zBffDY8nIL5cEeDLBzqroe0wcV
8E27IG8PNkv8pvW86AORN7/D+Dr3IN/Ku4273/eB9id25pHFPRir2WF3kdoH
H38k+twTVUSrl6/b0772QWoaz7EsfUXc+934futgH+jm7yn8bK+Ijz69iZ2e
7IOVfz65JQGKGM9ZtcT2tw+Occ5eeJWiiC27Tn3l4umH5YNWPP5Viiiroyi5
ItoPkut6sklMRYxRrmcfl+uHrIM+136vVkLSjtyAOu1+6P789n6inBJaX7TI
SDTrJ965aesULZSwn5P24LRtP/xmaAhknVfChJB0E3GXfuD0qq8Si1RC9rCi
r43e/XDh3A3ja9lKSC8VML0Y1A98G9dn1LQooY9mUi7Xg34o3Ti4jX1WCecD
9+yKTuoH/rMcJx+tVcb+KZ/3vFn98KVD4oCUqDI6Fwg5BH7qB3LE9fnX8srY
qBhrNFbfD2e9xE9I6ynj0h8nZ5OefpjI/h4bb6GMtdDTGcMi8IyeveM8oYwl
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
ejEPjuvy9h1FvpuSvvbRVR6Upib5irtgvNbtGhaV8kCnwZIcRb6Qrp01vxzz
UbFjTGybiJgq3V274QYPRk00cqKRL282ad5VwYM1qtu1xVwxPu8Tt2Xd5kGe
vU3yEWTBisbuujs80E5/8mGKm4jkDv7d/K2KB4N1PxSikFVDFepVH/BgY8lr
/UnkvfuV9Gwf8aBTYc/SCHes/22zYvbX8CC8qnnGOPLae39e59TyYJXf1Nfh
HiKyYE6HckM95r9NKvIv8tXB67yfT3lw4uHnWQc90S9uxR1Tf478rir2N7KL
5JYy+5foZ21hPcFeIrKVv/RlSCMPnnkvVx9Bblg83nOxmQcLjL5Y7/MWEbsf
rcIXr3mws+sG4ytyhMUt4e9WHkjOPmm5ywf9JyK3R/Mt+qd/tPwnZKkVGS8c
OlB/MdkN/r7I77JLQ7t4MPmn328Ied7Qjbj8Dzxo3+bxyXu7iJi3f+C+6sF6
XafG60NO0FBX/tPHg00m6vlufthvLMNeaw3y4NHtfW1dyIdyh48yhnhw2klt
eKs/9tdH0XoHKcxPtu7nNmSGwson+SIeLPqX3cQJEJF6aVmnV595cO17dGYT
cuU8qf7RYR7w//ZtctiBflGy1FPrO+4vtq7zGXKfVUi7wwjqc9pynk2giNxf
M7w+9BcP5IeW36xBdp+ZUZA3ygOftKZRq50i8m7JnrEXf9HvdsprVSEzfx2i
/R7jQVHHhOmqXSIyY/BhksYkD9RWX9S9gezpZv7MfiofPvZMkTDaLSKNjd/+
BIvzIcBAp64YeeDCoHruND4c36UcqLNHROirla0apPiQ+btv9CLy6ynJrBEZ
PuxXTNihthfvD+52zgtl+bBdTqX2LPLnezRnWzk+2OqfFVPcJyIXw0+z9s3m
g3/JzCXJyLenGFhlK/Ah93W0yfT9InK8bLZGvSL+/t2kRixyknDj3+F5fLD+
lTg6iew159UzZWU+TLiaVoQFici9+P+SNyzgQ6D16OafyHuu9djvVOOD3JuP
PbuDcV7r3z1xZhEffq6SZAqRPx1xLnqkwYdHZ1wLvUNERJwqtBFq4fpzRns+
ICsHs7rm6PDB6VWH2NYDWE9H3P0sdfmwqV9uxmtkpn+r0FcPn+/I/kMPFZE3
sde9Ugz4oHoo4VU9sqLx35Y7hnwoXzJwAg5iPTwqXd1vzIeuQ6X6d5HnnWxJ
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
IyH7eG9jv3rtApk3kAYBkkMV1mif6Z2VUsE0mFn8t/UOGl726WrfoMG6/S0x
Leje5FP3TEJoEFp64bd8OJvAmfdtxj6UBmtWNu88geZtlNl/+jYNEqo4L2eg
hYctUv0jaKDzfjZnAs3TRp6JukODf6EFnQYR2P9G28GzaIznH3ZLl9GinBrB
hfdoUOeVt7oM/ZbvV0VdLA0m2dPSApFswvnoe1yDcTSIGBOQ2o8eClXdMf+Q
BjGb/greQ19vS3Ze9YgG8ru/TLWjg0/wx6x/TAOHfu+69XfwPJWkfNiWTIPK
3FVJjugN9fd6LFNp0MUIdnqOHgssWqI/xf0O/KE0hXYRa5F0S6OB5JctDduj
sH906FINzqCBdPOZS35oPVqDftxzGsRax4qXofMG8wlZL2jwsyo3iT8a++nB
O6YlL3G8fypV7NCHdtNNml7RYOe5hkfRaP1uaaORXMz3hrZVbejElGqdf3k0
UK/oclW4yyZ0e7griuXT4FFvX+VxNNdOUUGVQhr4lv2UTEd3NiaP7/iA+SH4
h/gbzae5+du+Ihq8OSAQvvUem9Cx/lXm0RIaJOupFVxCezzQCbhYRgMZiyMd
H9BvfZ8dvllBA7JG5CR3DN4H02TWx1fSoPhC95IFOpDn1nB2FcZvgcm/MHTS
+dn0smqM/5j3U9/Rt+uPOrXU0OBV/MGutbFswoLQF0V2HQ1OHOP5QEPTObY2
LH/HfPZtvPMYPRkef028Eevt5UraEPptPJ/mpmYa/JnrltG4zya4CXrUGbZi
/faXrzuHfpI/dM62HfcnOfjSa3RSKFXAoZMGIjPS6+b//71D46OL3Zg/XF0Z
u+Jw/2SP6NzspYEC7fvWa+ish+0FD/tpcPH2Qk4FelXJKZPsQfyeCllF8AGb
oHOGo6z0Bw3aXo7ftkMvX06E5p80uJ1fyo5Cb2iwejsySoMXXxoILehVdhwa
/37RQPicyg3Zh3g+fC2OXT2O55tWQTkL3bQ5glN5kgbfw+/OpaDPHnI5sX2a
Bp2ybxV/ovesJZZZ/6HBBaqysVY83hfIB+SZc3hefOvefx4dN0d1d1ugQRP3
CCkXzfXdszToLw3GPPbaz6PdSlOF7//D8yxr1mJXAptgmz50OJODDqaaHLpX
0R+O7bz3kYsOou4OwuXozOqU79956PCSe30v3yM24UuxksDQCjp4MIzTbND3
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
hTznMcdHXs/E83+sH7kcVp3sP3g9C/NHcdxVDvYdWt2emM3StMHRc4Lg19U/
PiTloL6vuJZ/Az5YIChPzmXJYqHtiko4qzEl60Ye+nXg7CftcOmusriUfJZi
KjRN5S8IeY3eeaE3C1iakWlWPA9eoRuwL7UQ9avl1GJbeMy9iQ5p9zHfivfc
9oa9NU8tv/WApV33QtQvwmfv1cy4XcSSfsyKU4Wwv7dQ9s5DzD9bpnV9hC0u
1rffeYR+dHX2ZrEoxBfFv7hbzNLU4fyCaVH//3vopXfTS1D/lxQom8Lbr9w+
c68U8/vH5R5OcG9c156MxyyJnessC4X3ZCmsyXyC+XKoWuUWfEdESjOrDPtb
+n7nCzgu4YVY9lOWmJAx9/7AUx67fcgux3p/e/aMjUZ+BX/NyKlAP4iVMTKA
deUXnMytxHnNrzhgB9sdsWPyqjDP2RZk+sIWIhsM8p+hPybX/7gMV96aIVvw
nKXeSl31Ijj0bnV9wQvkz/Z7677AS7TX3y6sZmmLkpPvsBjE1/JU//s1LIUd
tYrXgCcr1Vs8eIn6snb3EzP4wovmiUWvMA+OK/zqDB87/fhbUS3W679s2Cn4
kLd/5sPXLOlo9028DY+8PfrwozeYZ+63za2Gs20PmBe/xfu/Hr2iA+6JKJAv
eYf7hOIey3EXMb8EvXlbUod4mSJubwBP3VgRW/oe/fLCi212cMv0KPbxB9RX
5TcCX7hv/NIZT+pRr8wU+ZfhorWF3540sDSzNNz+AXxGOO5m2UeWrs8xtfoM
5yib7Xr6iSX+rIUrxS/h/vh3vVb5Z9TLDY7zpsO8BMPW8i+YtyyfTzKF1c17
EioaWbqR5ynpBHNSZ/mVTYjXBQ5tIbCRmNSEqmaWerYdLk+Faxw2vKpqYWl7
XWPiM3jNokMnn33F/LEyyP8XXFEYsOJ5K/LbaJfNmMuYN4bze55/Y+kke2b6
fFhnhfKtF21Y78buPxvgeaFpgurv6Bc5Vwu8YG8J1bE1P1j6OvXUkWh44NWO
0hohSw8NC1fmwwUTw/a/bGfJKmqueD2cNHR62qufqH8NbYWDcOrV3TWvfqF+
3Pi2Tz1WyLs7ZYZ/7W/Mu1E6msvhyOQCrdd/cN7meW9YeMEGndrXHSyF2p8K
PAYzqw8eetOJ+5VT8qwk+HtaosbbvzhfhREvymL///1qWtXbLpaq/+a4tcGa
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
2zTxhR0cLDBdab8pSzdVlS+dgP1sH9bvNWOJU2S9KwAOiLvuv2sbS+1778vE
wAPf8mjHdpb05Ee6MmB+dd1eM3OWLjrYppXBE0MFIk12sPTaqfbEV3iD8syt
RjtZaj5os3YEHjfKjBpasFSf/Hdspijid8GkBL1dLF07FvNqMcwf9cNCdzfy
aczGfS2cd11aQGcP4t1/2art/16fHv5o9V6WbJiZP3lwv4TNHk1LxEOBwIPT
8Pv3zgIrrFhaMjjF+hr8VrPg4bJ9LB1UlRV5AE85cGCnyn6WrNJN87Lg0mM7
xxStWfIqv+paBa9xvBwjb4P8f9Eq2wl77BPeImPL0oaMLeXj5nTrZFhV90nZ
of4LF56aA8891XFDksPS8MBu2SVwev5GbXEuS7w0vmJd+JV532dRhqXVlzOc
LWC95a1es1jk+8uLs5xg9uhC2Rk8lir9DqWehdcpxudOtWepVc1xWyj81fYU
M/kAS99+efQ8hA+qh06a6MBSm/j9izlwexzf/fGOLH2sa5WphTk1j/XG4GSP
1Zk/4J6SpJa/Tizm31hTgbk4f0b+8hw6iH7CUW4Vh/da+UkOOLO0RTn/mCps
NIdN7z3E0vKqkxP1YU59wPbuw6gfdw2C98AJr/l/fD+CfKhSkjoEz6vM9vnq
gudPXBx/Hk5d/F76y1GWdh9Yq3YLdny36HnjMZYmmTg+S4bXVuSY1rtivUPT
tPNgSePkbx/dWFpzcc6rOvjP5naPquMshdsF6fTB+Q0Osz+cYImPq/Bykhjm
rTnacSUnWUop+aglCX+fuHNN8Sn086a7aWrwrJcvSvPd0c/r/VQM4cotzrZv
PdCPxl26ZwnPznMaeH0a9eJKrPgROEUr/fxLT5be5TRe9oGvppvMyTjD0qkv
y8fC4Uvb1e4/9WLJack9pxT49DzrlalnkS+fl9Xlw7SwLueRN/ZH65NBAxx7
LNos8Rzq6+nI5J+wn+LTz3HnEW+d3mKTxZHfxnMcYi6gPrw5d3o+PPoz+1eU
D0vr6G6LOrxE6YXXbV+WHGIa9TbCUwUmCN/yQz9evjrGCrYLvHY95CJLJxRS
+V3gvy0uC65dYsnn7WZrXzhYKPL+1css/TEYnxkB94qKL71yhaXNPdWzU+H3
Yo1pfv7I55HiAwVw+6Kfqy8EsKTxqCmrAR7W2/b67FWW/PVFZ/fDLwP49D0D
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
1ybeh8Wrn53JT8X8+DDS6hX8UCX1Zs5FjmyGWcR9hovG9j+5msbRxDktVe1D
Pl79Oe0SR7EuLpJCLm2GceU63efSOZr68q7ZOFj2+kSx05eRH+Hdh+Th0Tb7
FU9mIH9vid+dC+s93b4w6gpHPz2Hd+vDnlJPVh25iuf//GbuGth/wS2bA9fQ
PxXDdtjCCvqqvH8mR2WWkxKYIWvLBXpn4fexR574wkazIqI9sjnqG1nTHwZb
KBxKYa9zJPtMdF4CPGKGUI5zDke2IrL2l+CZNHDPPpej5hfCkXmwj3/gyy03
UB/XvCx6AN9sPFC/4SZH85MCml/DySFjf5nnob7UjZX+CrfZyfavuoX5Rst3
aSe8Izh1zPJ85HPBQ9fhruh3f29O1C/g6E1sV5QUnF6+eoZOIa5fN/yWItzc
76ipWYT4vfP74zxY68LAErXbqGcW94YZwvr3pq2acQfxct1DxQK+vb1knXwx
4m+ksIkd7BL5zVbuLtZfsMeNg39aRjuPL0G8jHp8ZD88LPeOQOweRzc6+9OP
wpuKBd4jSxHvltLlp+AEvwuBQveRn4ZiX9Nhn27b0F74yKfGwVvw+UUJkV1l
HJ2wTJlcDj80tT7Z9oCj3TlLF76Fjy5MOt38ENebUbymET413CmloRzzU7mC
Uxd85k5W2sdHOE8U7tgnvLPNkNwDr7x9jOeZejRqPKyiVJVVWYH6LHH8ghLc
+TEjt+IJ6m9WQJ4mbHF15K2yp5jv5M0fGcI1Cd8Kip9xNNpvoNoC1rm6+nb+
c8xbTbHNdvDIdq3inBfYr6Ax3Rzcwp+9e7WSoxZn5xF+cNC86JK0lxwp51+Q
PAa7LBW5d+4V5qO4B1MSh66XOlCSWIX4VXyichmOYvxKTrzmqNrrhkY+PPp0
wN3INxyNvRGsUw4vNRQpDnuLfOrXMngLP3SQvB3yjqNT7o+WN8K6o88V+FWj
/6stX9UFz1x+I29vDeYbi3Orhd3aDNVlzHN3veeov6dhzXj43TEmi/mA88Hq
MRZKcHGW2BWnjzh/OMpaaMLuRxekbavF8zuImhvCfiqfzlnXceTpWLvaAvY8
Ou70+k/Yj7CEVXbwl9KyE2vqsd4di4w42Lp6IML4M85vd4sN9sMOr+8cpgbU
O3E13aNwSMmwQL0vqD99++adgk3TKvYu/Ir9v3pdNR02jJITaDTi/LDk+dRb
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
E+bfA1ekuoehPnv/OngKDuW5bjUFH5qS5j8DNyx+I0IPR7+2p6PXBW6NZh8Y
hf0t+tMvwasrFiXbRyC/Opk4+cN8PoMWH2HJcyryYbDCh5h1pyLRn3sH/Y6H
vw1uevcWzk3WrEqDc68HxBtFIZ/3O/rdhwc7Go07YerQnPYTmKWub9XhaMTj
9PTyatjVsrXrGVw6YtHeDD/OjgnXjMF8SMlGvoSlUnfpV8Mlr5wN++CDeg+X
741FvIwLrP4Me+ewNxfDPn7bXk/Ae6q2X98Zh345PTdujjl/wXIa+fASi1gT
jmLU21XcrFLxiK/S8dXc8KB5XcVdWP7Zw25BePFpA89NCQzyOHYgaiP8VrpE
MRlukrtoIAU3lc9OCt1CPNy9wq0Iq/HxPoiB3dmnnqvB9+XZzq68zSAexzqv
68CXRVo2h8A96evUj8EivbRBzkTMz39d8+bwgsPXxGuwtc+vJ3aw/zNVU9Yk
7MfF/Bh0WIzFid8LvrRweasnvJ/bpW0W1l4/MngVPvT7SOD5ZOTfoJKEm/Cj
p0s0f8AbjH8fjYXf2McvnE1BPrqZseQOLDvBVvoJDlWurMwpZv6eteZ5mzsM
EktTP18I8xVabu+Hs+UVtlTCrpPHP5ulMsiH2Mj3jczzr9uY2g2bZ50M74Bl
FJpOGKQxiKJLjMY72FRVa1UrfI1NeWYIjtuT3KqTziA2dnrZ47CxVPv1eng4
p9ls9v/34y3Zl4F++f3jZWwl6I9+l/8uh8WWcpUvgzPeuj/anYl4Ves6uwp2
LV1xthDuvMGxVhjuvHVxk+xdBomfSn8mCQtfqXmXC9uFPnSTgxucBiMlshhE
026buAosbfVONw1W81/ZqQmXW95nF87G9fy1u6wPv3M2KUuA015JbjWFxwN7
XQRysN8QNnllDZ8qVdoaAVcMT3k7wRH/qA8rchkkRnFhiyvzeFPvuAA4bYNb
l3cJ8/ND9voc9xDPOeaXAuAnp7YsugIf+fxALBL+wVVX/hf++pHechv+1Lfr
nPt9BsnKST6XCbN3+m2Zgq/qqAjlw1lfc/qpPPQXLw48LYH3bMuJHoVp6lW2
tfD6GF9d+we4/uKMpS+Yrye9k/UjrK/0J68bdpyqLDqZzyBrusoNBuDb3zY6
vYULI8Z+fYHzBC1FjR6iHlwLjvsJ/3fRtbsD5n0Sv2ceZhWwCzr0iEFyFFb1
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
Yu4p9aM/k/0gOgb3b520a4Rnpv//kf4fKqVtWw==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\) (m)\"", TraditionalForm], 
    FormBox["\"(1-2G M/r)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-233.2780340678693, 333.6729582998647}, {
    0, 0.9666666666666667}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8199491332947397`*^9, 3.819949299834363*^9, {3.819949339770439*^9, 
   3.819949353772887*^9}, {3.819949416131957*^9, 3.8199494510247726`*^9}, {
   3.819949500795576*^9, 3.8199495088595743`*^9}, {3.8199496208518825`*^9, 
   3.8199496306765137`*^9}, 3.819949697954501*^9, 3.8199498353344445`*^9, {
   3.819949867699834*^9, 3.81994987344401*^9}, 3.819950015544816*^9, 
   3.819950073438878*^9, {3.819950313520076*^9, 3.8199503367411814`*^9}, 
   3.819950447737217*^9, 3.81995063047612*^9, 3.819951432439743*^9, 
   3.819951500729188*^9, 3.8199535701943684`*^9, 3.8199546756317754`*^9, 
   3.820032599673008*^9, 3.82695394750952*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tabel", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"tabel2", "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.819950350825221*^9, 3.819950352854945*^9}, {
  3.8199503965446606`*^9, 3.819950397615696*^9}, {3.819950507305541*^9, 
  3.8199505131674633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "233.2780340678693`"}], ",", "10.000000000272`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8199503534862733`*^9, 3.8199503982840347`*^9, 
  3.819950451124671*^9, 3.8199505136820865`*^9, 3.819951501471156*^9, 
  3.8199535846106615`*^9, 3.8199546763557444`*^9, 3.8200326040889807`*^9, 
  3.826953949571049*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "233.2780340678693`"}], ",", "2.7200020014106485`*^-11"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8199503534862733`*^9, 3.8199503982840347`*^9, 
  3.819950451124671*^9, 3.8199505136820865`*^9, 3.819951501471156*^9, 
  3.8199535846106615`*^9, 3.8199546763557444`*^9, 3.8200326040889807`*^9, 
  3.826953949652788*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Forward", "Subsection",
 CellChangeTimes->{{3.8196086995692177`*^9, 3.819608703916315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s1", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pers1", "\[Equal]", "0"}], ",", 
      RowBox[{"pers2", "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Nu]", "[", "rn", "]"}], "\[Equal]", 
       RowBox[{"\[Nu]o", "[", "rn", "]"}]}], ",", 
      RowBox[{
       RowBox[{"r", "[", "rn", "]"}], "\[Equal]", 
       RowBox[{"ro", "[", "rn", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "'"}], "[", "rn", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"ro", "'"}], "[", "rn", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Nu]", ",", "r"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]o1", "[", "rs_", "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"\[Nu]", "[", "rs", "]"}], "/.", "s1"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ro1", "[", "rs_", "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"r", "[", "rs", "]"}], "/.", "s1"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Po1", "[", "rs_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "\[Rho]0"}], " ", "+", 
    RowBox[{"p0", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Nu]o1", "[", "rs", "]"}]}], "/", "2"}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", "=", "rn"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Po1", "[", "rs", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "xx", ",", "rs0"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<P\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Nu]o1", "[", "rs", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "xx", ",", "rs0"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<\[Nu]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ro1", "[", "rs", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "xx", ",", "rs0"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<r\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8196000661062555`*^9, {3.819600182017686*^9, 3.819600218558123*^9}, {
   3.819600539484494*^9, 3.819600543251277*^9}, {3.8196006036860404`*^9, 
   3.8196006043167095`*^9}, {3.8196009387478685`*^9, 
   3.8196009853221416`*^9}, {3.819601034305726*^9, 3.8196010347767572`*^9}, 
   3.8196023526349*^9, {3.8196028081181407`*^9, 3.819602810855534*^9}, {
   3.8196028785056696`*^9, 3.819602901817107*^9}, {3.819602936012368*^9, 
   3.8196030173200197`*^9}, {3.8196030794214883`*^9, 
   3.8196030798920207`*^9}, {3.8196033658354225`*^9, 3.819603381308672*^9}, 
   3.8196034124091325`*^9, {3.8196036866683245`*^9, 3.8196037127943387`*^9}, {
   3.819603753660741*^9, 3.819603861750885*^9}, {3.819603894185177*^9, 
   3.819603905350355*^9}, {3.819604149354998*^9, 3.8196041636282687`*^9}, {
   3.8196042206598854`*^9, 3.8196042485677695`*^9}, {3.8196055430917397`*^9, 
   3.819605546105903*^9}, {3.8196055922089653`*^9, 3.819605626731885*^9}, {
   3.81960710640801*^9, 3.819607133362749*^9}, {3.819607163715796*^9, 
   3.8196071678860583`*^9}, {3.8196072908657*^9, 3.8196073371878505`*^9}, {
   3.8196075051875095`*^9, 3.8196075401823826`*^9}, {3.819607577359539*^9, 
   3.819607621378767*^9}, {3.819608718437104*^9, 3.819608812574978*^9}, 
   3.8196103813402696`*^9, {3.8196138781148734`*^9, 3.8196138788867807`*^9}, {
   3.8196160473213463`*^9, 3.8196160495826283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Nu]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAqIqT+s8Sc8Ff1KyHstBGwHSJygY3
w3LBONxf/l3PRsANs0IT7GxywQ2XRaggzUbAuSfKDVkccsGdCDItYcpGwAsy
HKdazXHBGlg9pyHHRsAqZ69Aqndxwb+tWMIJw0bAXOdRyLEnccHxcUDpt75G
wFqSNVAH0XDBjsA3yoW5RsD/0uN28XtwwVkZLY7ss0bAt16hi5MscMEj2rjY
Ra5GwHYqQEEHrW/BHwM3gbCnRsCkLVxHVwxvwaJAgsIfoUbAH1wNi9BubsFw
kZe9TJpGwDPgQM/lw23B7J4m0HaSRsBt+pLvaiRtwXCOcMS/ikbAQGpnEIx3
bMHMy+398YFGwF8F0W7WzWvBjv46eNp4RsCkNlmpkC9rwd0SZRv4b0bAgr1j
5OaDasEu3mWY4mVGwIbajPus42nBkfF2fwtcRsAkTTgTDzZpwacCaebnUEbA
Dut4aJqLaMEyNwPEeUVGwB4f2JmV7GfBuB1F3Vs6RsDHqLnLLEBnwc+EkMjL
LUbAlsi52TOfZsEJundfkiFGwLITTyVkAWbBKatLYhsVRsBntGZxMFZlwX/u
an4GB0bAQuucmWy2ZMHb2O9sVvlFwLZ3VcJECWTBClvx9+DpRcB2L6MoRl9j
wRU+visK2kXAXH0Pa7fAYsFp5ArFpMpFwNsg/q3EFGLBd21J6Dq5RcCAWgvN
QXRhwcqz2yRDqEXAcr+tKejWYME/ZMR565ZFwP150oYqLGDBG8fJlEGDRcBd
lSuAuRlfwQCmxd0PcEXA8uG281XAXcGeWvXEQlpFwNNafx/SfVzB2CPcz+VE
RcBNKnLGoEFbweWYEdzuLkXA+aRpbqfqWcHcAFjQ3RVFwPFLns6NqljBUikL
5DL9RMAcntcvrE9XwYKXcITw4ETA4EY7DB37VcFE7hWVe8NEwO8b3KBtvVTB
jdorpEymRMAxnIE29mRTwUHwo06RhETAv0hkhF4jUsGh9WhY3GJEwOZLcU0Z
6FDB9zV9pnM/RMB99AUvGCRPwWNyE/L8FUTAxqmjM72lTMG4KnFS+OtDwHS1
SjrS8UnBOM+8OCC6Q8BTbkY3jEpHwYKQzn3yg0PAyn+8pAXRRMGOL78AqktD
wKbnOxTvIULBBSiECLgGQ8A0UGvoL0E/wTJ3mtTGvELA5n1xrGHTOcFWBOb6
el5CwPsFIV3dfjTBB3pPOEztQcB/fordrwsvwSRBcQoiZ0HAm0r4CGVDJMFD
/3LucJ5AwC3ynuwvZBTBS+E0pknePsCetPfaez4UweVXAM4w0j7AoNjsaQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -47.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{-2.*^7, -233.2780340678693}, \
{-45.63044830264038, -30.821057200511763`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAqIqT+s8Sc8Ff1KyHstBGwHSJygY3
w3LBONxf/l3PRsANs0IT7GxywQ2XRaggzUbAuSfKDVkccsGdCDItYcpGwAsy
HKdazXHBGlg9pyHHRsAqZ69Aqndxwb+tWMIJw0bAXOdRyLEnccHxcUDpt75G
wFqSNVAH0XDBjsA3yoW5RsD/0uN28XtwwVkZLY7ss0bAt16hi5MscMEj2rjY
Ra5GwHYqQEEHrW/BHwM3gbCnRsCkLVxHVwxvwaJAgsIfoUbAH1wNi9BubsFw
kZe9TJpGwDPgQM/lw23B7J4m0HaSRsBt+pLvaiRtwXCOcMS/ikbAQGpnEIx3
bMHMy+398YFGwF8F0W7WzWvBjv46eNp4RsCkNlmpkC9rwd0SZRv4b0bAgr1j
5OaDasEu3mWY4mVGwIbajPus42nBkfF2fwtcRsAkTTgTDzZpwacCaebnUEbA
Dut4aJqLaMEyNwPEeUVGwB4f2JmV7GfBuB1F3Vs6RsDHqLnLLEBnwc+EkMjL
LUbAlsi52TOfZsEJundfkiFGwLITTyVkAWbBKatLYhsVRsBntGZxMFZlwX/u
an4GB0bAQuucmWy2ZMHb2O9sVvlFwLZ3VcJECWTBClvx9+DpRcB2L6MoRl9j
wRU+visK2kXAXH0Pa7fAYsFp5ArFpMpFwNsg/q3EFGLBd21J6Dq5RcCAWgvN
QXRhwcqz2yRDqEXAcr+tKejWYME/ZMR565ZFwP150oYqLGDBG8fJlEGDRcBd
lSuAuRlfwQCmxd0PcEXA8uG281XAXcGeWvXEQlpFwNNafx/SfVzB2CPcz+VE
RcBNKnLGoEFbweWYEdzuLkXA+aRpbqfqWcHcAFjQ3RVFwPFLns6NqljBUikL
5DL9RMAcntcvrE9XwYKXcITw4ETA4EY7DB37VcFE7hWVe8NEwO8b3KBtvVTB
jdorpEymRMAxnIE29mRTwUHwo06RhETAv0hkhF4jUsGh9WhY3GJEwOZLcU0Z
6FDB9zV9pnM/RMB99AUvGCRPwWNyE/L8FUTAxqmjM72lTMG4KnFS+OtDwHS1
SjrS8UnBOM+8OCC6Q8BTbkY3jEpHwYKQzn3yg0PAyn+8pAXRRMGOL78AqktD
wKbnOxTvIULBBSiECLgGQ8A0UGvoL0E/wTJ3mtTGvELA5n1xrGHTOcFWBOb6
el5CwPsFIV3dfjTBB3pPOEztQcB/fordrwsvwSRBcQoiZ0HAm0r4CGVDJMFD
/3LucJ5AwC3ynuwvZBTBS+E0pknePsCetPfaez4UweVXAM4w0j7AoNjsaQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, -47.}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> N\
one}, PlotRange -> {{-2.*^7, -233.2780340678693}, {-45.63044830264038, \
-30.821057200511763`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                              7\nInterpolatingFunction[{{-2. 10 , \
-233.278}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"r", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAqIqT+s8Sc8F+JxsD+D7UP3SJygY3
w3LBTZxt3Pzd1D8Ns0IT7GxywRqUZTBBgdU/uSfKDVkccsGaQR0n6xLWPwsy
HKdazXHBd/3Z+qCc1j8qZ69AqndxwaPv1MRoLdc/XOdRyLEnccHJTWMXDLHX
P1qSNVAH0XDBoBTY9bI82D//0uN28XtwwcmmgVlww9g/t16hi5MscME6/74g
ij/ZP3YqQEEHrW/BpCALeeXE2T+kLVxHVwxvwcsWJ5qvQNo/H1wNi9BubsE0
Wp1ZwbnaPzPgQM/lw23BhkApEzI92z9t+pLvaiRtwfkWwEBGuNs/QGpnEIx3
bMFuL94ijj7cP18F0W7WzWvBtRJYPqfD3D+kNlmpkC9rwQbBnlxFQd0/gr1j
5OaDasHnw1EciMvdP4bajPus42nBkd0ertdO3j8kTTgTDzZpwTVJORgG4N4/
Dut4aJqLaMEF3zAT83HfPx4f2JmV7GfBECG1kIr93z/HqLnLLEBnwWb0ekyU
TOA/lsi52TOfZsEQk4K/epfgP7ITTyVkAWbBb6/uTEXj4D9ntGZxMFZlwfW0
xAlxOOE/QuucmWy2ZMF66ax6AIvhP7Z3VcJECWTB+5pkZjno4T92L6MoRl9j
waq43Jr2R+I/XH0Pa7fAYsH+iyP8dKXiP9sg/q3EFGLBJeUUePIP4z+AWgvN
QXRhwdJvQdqveOM/cr+tKejWYMEe5hOQ7+TjP/150oYqLGDBBxzSDl5h5D9d
lSuAuRlfwY5JT67J3OQ/8uG281XAXcFvspUHlWvlP9Nafx/SfVzBq3QJC3X6
5T9NKnLGoEFbwf1ezPGnkOY/+aRpbqfqWcFhwP9gd0DnP/FLns6NqljBAaDL
CWHy5z8cntcvrE9XwWOqdVyTxOg/4EY7DB37VcHC6qYDZqfpP+8b3KBtvVTB
QqBCI16Q6j8xnIE29mRTwWls0HqAqOs/v0hkhF4jUsGFbWAgvszsP+ZLcU0Z
6FDBGFrCvsgN7j999AUvGCRPwRVR+ukdme8/xqmjM72lTMFOnG78M6DwP3S1
SjrS8UnBUHtM6w6r8T9TbkY3jEpHwXyJBqnw4fI/yn+8pAXRRMGOSXsRnj30
P6bnOxTvIULBv/vLIbYM9j80UGvoL0E/wZA+3lAOL/g/5n1xrGHTOcGGXo0p
djr7P/sFIV3dfjTB3U0ARvVr/z908BY4Xzkyweroqt8CDAFAYNrR1g==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.1}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{-2.*^7, -233.2780340678693}, {
                    0.31634331038787156`, 2.130864856150869}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAqIqT+s8Sc8F+JxsD+D7UP3SJygY3
w3LBTZxt3Pzd1D8Ns0IT7GxywRqUZTBBgdU/uSfKDVkccsGaQR0n6xLWPwsy
HKdazXHBd/3Z+qCc1j8qZ69AqndxwaPv1MRoLdc/XOdRyLEnccHJTWMXDLHX
P1qSNVAH0XDBoBTY9bI82D//0uN28XtwwcmmgVlww9g/t16hi5MscME6/74g
ij/ZP3YqQEEHrW/BpCALeeXE2T+kLVxHVwxvwcsWJ5qvQNo/H1wNi9BubsE0
Wp1ZwbnaPzPgQM/lw23BhkApEzI92z9t+pLvaiRtwfkWwEBGuNs/QGpnEIx3
bMFuL94ijj7cP18F0W7WzWvBtRJYPqfD3D+kNlmpkC9rwQbBnlxFQd0/gr1j
5OaDasHnw1EciMvdP4bajPus42nBkd0ertdO3j8kTTgTDzZpwTVJORgG4N4/
Dut4aJqLaMEF3zAT83HfPx4f2JmV7GfBECG1kIr93z/HqLnLLEBnwWb0ekyU
TOA/lsi52TOfZsEQk4K/epfgP7ITTyVkAWbBb6/uTEXj4D9ntGZxMFZlwfW0
xAlxOOE/QuucmWy2ZMF66ax6AIvhP7Z3VcJECWTB+5pkZjno4T92L6MoRl9j
waq43Jr2R+I/XH0Pa7fAYsH+iyP8dKXiP9sg/q3EFGLBJeUUePIP4z+AWgvN
QXRhwdJvQdqveOM/cr+tKejWYMEe5hOQ7+TjP/150oYqLGDBBxzSDl5h5D9d
lSuAuRlfwY5JT67J3OQ/8uG281XAXcFvspUHlWvlP9Nafx/SfVzBq3QJC3X6
5T9NKnLGoEFbwf1ezPGnkOY/+aRpbqfqWcFhwP9gd0DnP/FLns6NqljBAaDL
CWHy5z8cntcvrE9XwWOqdVyTxOg/4EY7DB37VcHC6qYDZqfpP+8b3KBtvVTB
QqBCI16Q6j8xnIE29mRTwWls0HqAqOs/v0hkhF4jUsGFbWAgvszsP+ZLcU0Z
6FDBGFrCvsgN7j999AUvGCRPwRVR+ukdme8/xqmjM72lTMFOnG78M6DwP3S1
SjrS8UnBUHtM6w6r8T9TbkY3jEpHwXyJBqnw4fI/yn+8pAXRRMGOSXsRnj30
P6bnOxTvIULBv/vLIbYM9j80UGvoL0E/wZA+3lAOL/g/5n1xrGHTOcGGXo0p
djr7P/sFIV3dfjTB3U0ARvVr/z908BY4Xzkyweroqt8CDAFAYNrR1g==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.1}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{-2.*^7, -233.2780340678693}, {
                    0.31634331038787156`, 2.130864856150869}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`*^7"}], ",", 
                    RowBox[{"-", "233.2780340678693`"}]}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                              7\nInterpolatingFunction[{{-2. 10 , \
-233.278}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.819608843018607*^9, 3.819610382125998*^9, 
  3.8196138798202295`*^9, 3.8196139307716627`*^9, 3.8196145966348286`*^9, 
  3.8196160503076725`*^9, 3.819689688948472*^9, 3.8199397660824766`*^9, 
  3.8199404274488535`*^9, 3.8199432604543447`*^9, 3.819943322747983*^9, 
  3.8199515018647327`*^9, 3.819953586855483*^9, 3.819954676740752*^9, 
  3.8200326059247313`*^9, 3.826953951954026*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
    FormBox["\"P\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819608843018607*^9, 3.819610382125998*^9, 
  3.8196138798202295`*^9, 3.8196139307716627`*^9, 3.8196145966348286`*^9, 
  3.8196160503076725`*^9, 3.819689688948472*^9, 3.8199397660824766`*^9, 
  3.8199404274488535`*^9, 3.8199432604543447`*^9, 3.819943322747983*^9, 
  3.8199515018647327`*^9, 3.819953586855483*^9, 3.819954676740752*^9, 
  3.8200326059247313`*^9, 3.8269539521174407`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
mEOHpsq2n6YhMAYRIhcdzeF/NlbG5A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
    FormBox["\"\[Nu]\"", TraditionalForm]},
  AxesOrigin->{0, -46.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819608843018607*^9, 3.819610382125998*^9, 
  3.8196138798202295`*^9, 3.8196139307716627`*^9, 3.8196145966348286`*^9, 
  3.8196160503076725`*^9, 3.819689688948472*^9, 3.8199397660824766`*^9, 
  3.8199404274488535`*^9, 3.8199432604543447`*^9, 3.819943322747983*^9, 
  3.8199515018647327`*^9, 3.819953586855483*^9, 3.819954676740752*^9, 
  3.8200326059247313`*^9, 3.82695395225005*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVkWk4FGofh8cyaMa+r1nGrhIi+/NYBoXKHFtaZAkha6dQdkelSKKUJDqH
SkrinJOU+SvZsw06JDulbGMZ2Xp7P/yu+7o/3J9+it6htJPsBAKh5df+z+Zd
UT/ahSMhb7c3cdWcgdzJgXmHhCKhPLfEmteSgSanjph1CkSCb/KjZ/JUBmIv
RIldvJFwNY9cZ2XPQMYi3Nt6uCIhmJU1luDGQI9ZOZL9axFQsbBbtSOUgdLo
L/aOj0aA7bfnM00FDLSPNvf7akUEtEja+HltMpBfxpKqkH0ElJRqfNGq7UFV
PZOXeKfDYWnRtVQ+qBcd6VuXnUsLB7eSxo29fH2oYOHeBFDC4ZO9nPqZf/qQ
uIS257m3YSDfNsnpRPuItFwc+eSOhIF9oaPj7MpHtCtPduC3r6Hg5BSVuv/m
fyiwKGpTVzMUiJ2eGf9o9KPx/vlLTI8QKCreLCA29aM6Dauz526fhksFElOj
xwaQ40x/Q/NAMMRpRIlnzA8gsdGMpC2+YGj+PaJf4/onZDEjW8ByDAL3Qf1s
Do1B9FijQbkzNhAShwy+RncMInr/3/zRz0/BEtrwjIv6jIyLEjwmmQHwp4aZ
iYTUEGLe8RPYoxwAW6Tw6wdbhxD/Y1VVWx9/UJCOsrtiOoz8p9mLjbP8gCA2
5nIvfxidLlBO23h3Eo5GSpgsEUZQX6BCRzLxJPRKCai89hpBcf6G8d/0fUFj
tIuzuX0EpcVoZkqe8QGzs70/t0xGkRW7N1H0b28YTSp9M1o6ioxeVY3NTXmB
bPzB3x/uGEM30sYo19W8oMZhUvffJ2NI88rONmG3E3DsVFTOcYtx9IkQU1Uv
6gmCdlHG7z6Po52SjtnzN4+BzrBIkFfsBFq97k79tHoEVG33pdIMJ9FVQ8lq
2lkPcB4/qkBhTaLoRm/WyXV3yGk2iBd9N4WGqye4jE+4gXt7U6VE9Rck2C/b
nzvsAvfVTFfZqr+iV0euxv+LnSH5nuAFI+Y02kUq/+JdQ4Nudr+tB2bf0Xrh
cenHyAlKiIPnP5TPoGTDK6a+1IMwVB8qkpMyh2qEGrvcjQ7Cla71sK0rc2hp
mvOU486D8NuhgozgG3PINz8ux0DsIHxkPZRzK5pDNuwRszwTByCrr0TUjz6H
SK3u98tSDoB0YkNr6OYcyvJU5WS9dYS/dGxulZrNo6JUaLls6QAFhM6V/rfz
aFYpM+CCvgOQUaZ9XuM8Mq49TgxVd4D2VXcbz7Z51M1aN3fmdwA9iXnE7J1H
nKcMKrb328Pg/gt11tPzyN++NPdFuD2kEU1k7gstoB2COScH7++HmEgeJ5rP
Avr7dsDP3T/tIOcQZzRDhIkc088nnWDaQSbLqv6KFBONJ2QQMyfswPnU6Iyt
PBMJB1SS51rsYNTlxuwHTSYKNSBIluXaAZ/KYICkJROpd9/araFrB6fHO60L
wpnoNm+Dl+JJW7h3XTz1GYOJdhP6xw+524LVBxEZwQEmalz87p9gbwvaBM7o
syNMtNIvHDKkYwtN0T7PnWeZiPboeEz+lg0EJ+ezu/MsIpLNSpZUrg2wXeNv
TTRbRBfiVd4JtVAh7oH+bNGTRRQj6povV0sF/6dhZbQXi+jco9SzGi+o0JrI
e4GnehFFdE+pW+RRIVP2QGBqwyLyV3ucHhZEhWah8OTW0UVEa9/l1k6mQv3i
0tPL0ktIXd5w+qqDNdS3xayQry0h1cqAt7nYGipeHGddu7mEKPtu3/1zjzUs
Teyzlrm3hLZHrh2okbUGicZTc7ZlS0ikoebFt+9WsLio0rrWsoS2Qixi96db
wco7/rUO0jJivNkvyPPBEv7QCUi/lbGMJsT55oXAEoRLzRV7bi2jlZD2dplK
S5go19OWK1xGUvLO17TvWALXX7eJbS+W0fH4Y/xufpbQVl1YXfbfMppCYbzF
WxYwO8F8n6K2gtboOTzW2hbwINU2Q6F1BZGl3L84KllAtprKl57eFSQbLt3o
JmYB1NqV+NyRFYQUCy4GrWNocr3ZRWWtoJTEh1w3GjCUDu9asKKwEJ/lK85R
TwxH9COcJ2NZyCIV2AiKCMbMG8pumq+i3dGJp1t5EDANhF667F9F24Mt/sud
N4cYY44yiusq2nCCch26OaSopTZ8P72K/pUDTx9PcwgL71bee+9XX0V//T7f
DLz2nbzbyPYDKYzXRqdLm8L29R8Xu3t+IIG++InD7KZg56Xys3zsB9pqQk6q
0yaAwq4OFi78QJ+e1arXvjSBowFCsW/41lDu+dq+eXcTEHuepPTFZg0JiNTq
O98yhoMzu9pUXq+hLYs3C9KiRtCg19H0rHodJY1xaXptGEKSlrs0sWUdcf9x
0Ltk3BBc7o76RA6sI8HG4S69ql+uIN6bt7GOlA5wVDq4GkLET1M+Ct5ANh52
Z+Ny90IAo/m4desGuhbRtTYiawAhF/uud65tIlFRGT11ogHE1ogdbuPfQrlV
PkEhM/pQMF115ZvSFipaXRpYe60PWWybzzLtt1BlnMRrEU99eJRdVnjp3hb6
mHY0nlq4B8x7aqIu2/9ECg8mOR6p6EGjVjY1zpuAW5tp+76R9cA7RvW4QhgB
RzHfZOxk6sKIUVvJUCwBd1rckqp4owsxTKPj/9wm4KRhW+1XbrqQyRZS1dtF
wGNyjzzaLutAzFEaGNiz4Uyq2H2BMB1YHLzNMeTBhk1PJ044uerAb52ej0sD
2XB2zeGwXiUdyLcDy8o0Nmx9hJQ69Go3lEXK8Ga1smEHnT7vsQFtqFt1zSa6
s+M/E57N+D/UhqN0+26jQHa82X4x6vsZbSgUueNy9wI7fhpimLHMpw3ZI/Xi
c4XsWODJ7ZfceBd4emONkVl23KV6VHDHnzvA92mC+4ssDqx5dk9eedgOSI1f
qN75kAMn1fOq6pvtgNDrk7Tx1xxYz/e1iXmvFpy7XOhLmubA2YXb/Q/xaMG3
pkjNw1RO7CY78vpMsAZUqIm8F95GxHYL2oWBphrwob3uLyVFIjZ+H5dyglcD
DMXaCqKMiFg2TNbe4Yk62FhZETcCiXj0rdtHync1EHj82Te1k4hDgj4wu4JU
gZ9RbL1SxoVPYLneRhNVqPKVANEWLuwkFvzyDVkVbvJJmmR94cJ7arclPC5V
AdrM5vfnytx4TZjKl/RNGZbL67ZeF3Lj1OpXajpBFHj4pCaI/JwHR10jkdVM
KBDH6hVV7uHBp3wPz8qSKbDqfT6k7gcPduBnVfKUKgH7ifjSu9bbsLC3ruXw
tCJMb/KaK49sw5x7E1V6qxXBZV4b3m8j4WVyB09rmiI45puVkvRI+GPV6fZ/
NBXB5/NUc+pFEs7f9ujotUAFkOnYI9dkSMYZn1noD2MF8O9593bWj4wTXthQ
zpMUwFU+fvm/HDJ+X93Y3eYsD18S6g3EV8iY5o1mLzDkoHDlUvh7Oi8+9XwH
ZaBbGmZrhohtKfy48sEdpzsB0kDd3C1+oYkfb+XwJBzelIJL6TNa5QICOCtm
/FOfqhRsFFtPfr4vgGus7t5kREuAx10FYbZgQcxlQKq/wS8BY6nUZJwjiJ3U
oxZpD8Sh5MYUPblWEE/yOh/qbBWDT1JcleYSQliwl0z6IC8KWvUXz7xnCGGP
xmjD9EoREHw4sHyCWxj/VT3l57BPBL7bRhR7mQhj44K3b5sjhOG+8o1FRokw
Trmuw7zMLQwFrIA7p4aFcXtygcK+u0LgosVX/FBaBPsGnI9tqBeE4oz4yd+z
RfBTj6+lqR6C8GRVz0CbIYKZt59WXvksAEtj0g5fxUSxjI9fyCUdfqCnyvTV
F4jikOWekcQ+EgwW0+rsO8QwR/9zcwIbCTqUhTx3UsRx7pv0vDjNbZDSs0OW
L1oc112kupyP5YZ7rflm4bsksFuwYsWPYi4YuiTLScuQwN8PbfJHdRAhL2SZ
fXpBAotJVzWeoXCCdp7inEy9JH68lamy6MABa3ECH3boS2HzseCk8LPs8KbI
kjn6SAoHPFE2DWkiQLGUR59zkTSOilX3bP+8Rk/faULP7JPFRTbDkq06P+g3
M6LIU2fkcKtAbldjCov+03fxmpnUdixfxG1Tp7lEZxcpKOk+J4+vpLcdDpyZ
pt9odlU3tVHEn+XN2nx+ffXHygXV4HJFrFvxBB8zGqdn5SfqSssq4VRr2UrX
oWH68PThmrsXlXBFmcTB+6QBukxP7Ylj80r4cNeK/g1XBr2NlUfxpFEwYbbU
iJfaQpdU6z+dUELBeSEM/vGXr+gkErnOYZKC21UV9i/rn6ZL80aEChOU8f8A
1Vk0pQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
    FormBox["\"r\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819608843018607*^9, 3.819610382125998*^9, 
  3.8196138798202295`*^9, 3.8196139307716627`*^9, 3.8196145966348286`*^9, 
  3.8196160503076725`*^9, 3.819689688948472*^9, 3.8199397660824766`*^9, 
  3.8199404274488535`*^9, 3.8199432604543447`*^9, 3.819943322747983*^9, 
  3.8199515018647327`*^9, 3.819953586855483*^9, 3.819954676740752*^9, 
  3.8200326059247313`*^9, 3.826953952415842*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perbandingan Backward vs Forward", "Subsection",
 CellChangeTimes->{{3.819608950144495*^9, 3.819608960902993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Po1", "[", "rs", "]"}], ",", " ", 
     RowBox[{"Po", "[", "rs", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<P\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward\>\"", ",", "\"\<Forward\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Nu]o1", "[", "rs", "]"}], "]"}], ",", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[Nu]o", "[", "rs", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<\[Nu]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward\>\"", ",", "\"\<Forward\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ro1", "[", "rs", "]"}], ",", 
     RowBox[{"ro", "[", "rs", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\)\>\"", ",", "\"\<r\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward\>\"", ",", "\"\<Forward\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8196089754761524`*^9, 3.819608978416909*^9}, {
  3.8196090226295977`*^9, 3.8196091570997443`*^9}, {3.8196139523340435`*^9, 
  3.8196139560928717`*^9}, {3.8199397451556187`*^9, 3.8199397493795605`*^9}, {
  3.8199397873405075`*^9, 3.8199397884815664`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
       FormBox["\"P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward\"", "\"Forward\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8196091603692*^9, 3.8196138844874673`*^9, {3.8196139337894907`*^9, 
   3.8196139568368483`*^9}, 3.81961459711687*^9, 3.8196896893888016`*^9, {
   3.8199397669393635`*^9, 3.819939789413248*^9}, 3.8199404280614195`*^9, 
   3.8199432641941338`*^9, 3.8199433234077945`*^9, 3.819951502743993*^9, 
   3.8199535909726686`*^9, 3.8199546775950236`*^9, 3.820032609457285*^9, 
   3.8269539545584536`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
f/T8GXEWjW4x7ZX4f5w7LCA=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
0mEf2hSj8sv1iVr8PyZMQFk=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
       FormBox["\"\[Nu]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward\"", "\"Forward\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8196091603692*^9, 3.8196138844874673`*^9, {3.8196139337894907`*^9, 
   3.8196139568368483`*^9}, 3.81961459711687*^9, 3.8196896893888016`*^9, {
   3.8199397669393635`*^9, 3.819939789413248*^9}, 3.8199404280614195`*^9, 
   3.8199432641941338`*^9, 3.8199433234077945`*^9, 3.819951502743993*^9, 
   3.8199535909726686`*^9, 3.8199546775950236`*^9, 3.820032609457285*^9, 
   3.8269539547904367`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
1Vk0pQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
xA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\)\"", TraditionalForm], 
       FormBox["\"r\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward\"", "\"Forward\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8196091603692*^9, 3.8196138844874673`*^9, {3.8196139337894907`*^9, 
   3.8196139568368483`*^9}, 3.81961459711687*^9, 3.8196896893888016`*^9, {
   3.8199397669393635`*^9, 3.819939789413248*^9}, 3.8199404280614195`*^9, 
   3.8199432641941338`*^9, 3.8199433234077945`*^9, 3.819951502743993*^9, 
   3.8199535909726686`*^9, 3.8199546775950236`*^9, 3.820032609457285*^9, 
   3.8269539549938965`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perbandingan Backward vs Forward", "Subsection",
 CellChangeTimes->{{3.819608950144495*^9, 3.819608960902993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Po", "[", "rs", "]"}], "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "15"}]]}], ",", " ", 
     RowBox[{
      RowBox[{"Po1", "[", "rs", "]"}], "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "15"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\) (m)\>\"", ",", 
      "\"\<P (\!\(\*SuperscriptBox[\(10\), \(\(15\)\(\\\ \)\)]\)MeV \
\!\(\*SuperscriptBox[\(fm\), \(-3\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward Ho-Matsuo\>\"", ",", "\"\<Forward Ho-Matsuo\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[Nu]o", "[", "rs", "]"}], "]"}], "*", 
      SuperscriptBox["10", "12"]}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[Nu]o1", "[", "rs", "]"}], "]"}], "*", 
      SuperscriptBox["10", "12"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\) (m)\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(e\), \
\(\[Nu]\)]\)(*\!\(\*SuperscriptBox[\(10\), \(-12\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward Ho-Matsuo\>\"", ",", "\"\<Forward Ho-Matsuo\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ro", "[", "rs", "]"}], ",", 
     RowBox[{"ro1", "[", "rs", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\) (m)\>\"", ",", "\"\<r (m)\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward Ho-Matsuo\>\"", ",", "\"\<Forward Ho-Matsuo\>\""}],
      "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvcTmfWFw6RvHoHDfIhC9SvVKOYiWNlzcAaJrNnA9
CAXS5340gekrv1S+fAHSMaprwHTB06yfIPpfRj+Y9me+vv4rkJ5WpL0VRBcZ
Su4E0RMeuu0F0XLKDw+B6GPNHCfAfL9FZ0D0m27pByD6jO/5JyB64Zc1n0C0
sG/fm29AOidU9iOIbigz3vEdSGsFZe4C0Qk/dx0C0dek/h0D0YeYH73+DaST
b0x9C6Jtejv+gejTlbvBtJT3dp0/QNrH/LEBiP7xY6YLiF5xaKkrmH+5KABE
Wz3pDQTRFSG7U0B0zuKnGSD61pP3zmplbxzbX8i4gGgArmy+PA==
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\) (m)\"", TraditionalForm], 
       FormBox[
       "\"P (\\!\\(\\*SuperscriptBox[\\(10\\), \\(\\(15\\)\\(\\\\ \
\\)\\)]\\)MeV \\!\\(\\*SuperscriptBox[\\(fm\\), \\(-3\\)]\\))\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward Ho-Matsuo\"", "\"Forward Ho-Matsuo\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8196091603692*^9, 3.8196138844874673`*^9, {3.8196139337894907`*^9, 
   3.8196139568368483`*^9}, 3.81961459711687*^9, 3.8196896893888016`*^9, {
   3.8199397669393635`*^9, 3.819939789413248*^9}, 3.8199404280614195`*^9, 
   3.819941255085086*^9, 3.8199412904110427`*^9, {3.8199414272270427`*^9, 
   3.8199414409220047`*^9}, {3.8199414896204877`*^9, 3.8199415337888627`*^9}, 
   3.8199415929389825`*^9, 3.819941743268423*^9, 3.819941802874888*^9, 
   3.8199432748980007`*^9, 3.8199433257188196`*^9, 3.819943819924011*^9, 
   3.8199454284335475`*^9, 3.8199455289656343`*^9, 3.819951505803632*^9, 
   3.8199536345836716`*^9, {3.819954004930338*^9, 3.819954029344593*^9}, 
   3.819954166466523*^9, 3.819954568850312*^9, 3.819954678295373*^9, {
   3.8199547292534547`*^9, 3.81995473629533*^9}, 3.8199548292928333`*^9, {
   3.819954990127411*^9, 3.819955015895938*^9}, 3.8200326276083546`*^9, 
   3.8200407375502872`*^9, 3.826953957321866*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
piHTqrNXdaceQuenl62kX/A/e9vpbg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
+u3TTsoP+D/1Wtln
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\) (m)\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(\[Nu]\\)]\\)(*\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\))\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-1.9999999591841497`*^7, 0.}, {0., 
      0.000016520887916333453`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward Ho-Matsuo\"", "\"Forward Ho-Matsuo\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8196091603692*^9, 3.8196138844874673`*^9, {3.8196139337894907`*^9, 
   3.8196139568368483`*^9}, 3.81961459711687*^9, 3.8196896893888016`*^9, {
   3.8199397669393635`*^9, 3.819939789413248*^9}, 3.8199404280614195`*^9, 
   3.819941255085086*^9, 3.8199412904110427`*^9, {3.8199414272270427`*^9, 
   3.8199414409220047`*^9}, {3.8199414896204877`*^9, 3.8199415337888627`*^9}, 
   3.8199415929389825`*^9, 3.819941743268423*^9, 3.819941802874888*^9, 
   3.8199432748980007`*^9, 3.8199433257188196`*^9, 3.819943819924011*^9, 
   3.8199454284335475`*^9, 3.8199455289656343`*^9, 3.819951505803632*^9, 
   3.8199536345836716`*^9, {3.819954004930338*^9, 3.819954029344593*^9}, 
   3.819954166466523*^9, 3.819954568850312*^9, 3.819954678295373*^9, {
   3.8199547292534547`*^9, 3.81995473629533*^9}, 3.8199548292928333`*^9, {
   3.819954990127411*^9, 3.819955015895938*^9}, 3.8200326276083546`*^9, 
   3.8200407375502872`*^9, 3.8269539575278125`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
xA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
1Vk0pQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\) (m)\"", TraditionalForm], 
       FormBox["\"r (m)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward Ho-Matsuo\"", "\"Forward Ho-Matsuo\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8196091603692*^9, 3.8196138844874673`*^9, {3.8196139337894907`*^9, 
   3.8196139568368483`*^9}, 3.81961459711687*^9, 3.8196896893888016`*^9, {
   3.8199397669393635`*^9, 3.819939789413248*^9}, 3.8199404280614195`*^9, 
   3.819941255085086*^9, 3.8199412904110427`*^9, {3.8199414272270427`*^9, 
   3.8199414409220047`*^9}, {3.8199414896204877`*^9, 3.8199415337888627`*^9}, 
   3.8199415929389825`*^9, 3.819941743268423*^9, 3.819941802874888*^9, 
   3.8199432748980007`*^9, 3.8199433257188196`*^9, 3.819943819924011*^9, 
   3.8199454284335475`*^9, 3.8199455289656343`*^9, 3.819951505803632*^9, 
   3.8199536345836716`*^9, {3.819954004930338*^9, 3.819954029344593*^9}, 
   3.819954166466523*^9, 3.819954568850312*^9, 3.819954678295373*^9, {
   3.8199547292534547`*^9, 3.81995473629533*^9}, 3.8199548292928333`*^9, {
   3.819954990127411*^9, 3.819955015895938*^9}, 3.8200326276083546`*^9, 
   3.8200407375502872`*^9, 3.8269539577113714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mo", "[", "rs_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"ro", "[", "rs", "]"}], 
    RowBox[{"2", "GS", " ", "MSS"}]], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"ro", "'"}], "[", "rs", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mo1", "[", "rs_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"ro1", "[", "rs", "]"}], 
    RowBox[{"2", "GS", " ", "MSS"}]], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"ro1", "'"}], "[", "rs", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"mo", "[", "rs", "]"}], "*", 
      SuperscriptBox["10", "3"]}], ",", 
     RowBox[{
      RowBox[{"mo1", "[", "rs", "]"}], "*", 
      SuperscriptBox["10", "3"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rs", ",", "rn", ",", "rs0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(r\), \(*\)]\) (m)\>\"", ",", 
      "\"\<m (\!\(\*SuperscriptBox[\(10\), \(-3\)]\) \
\!\(\*SubscriptBox[\(M\), \(Sun\)]\))\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Backward Ho-Matsuo\>\"", ",", "\"\<Forward Ho-Matsuo\>\""}],
      "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.819943448559889*^9, 3.81994346123053*^9}, {
  3.8199435266484017`*^9, 3.8199437659933863`*^9}, {3.8199438441709166`*^9, 
  3.8199438691249466`*^9}, {3.819945447516206*^9, 3.819945482321517*^9}, {
  3.819954519845889*^9, 3.8199545236671066`*^9}, {3.8199545785183907`*^9, 
  3.8199545819663305`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
V4vaPzMEUitR1GRJ1Z/8ztOPQ4ibjfQ/H1FYqg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        GrayLevel[0], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1: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
MDp4MbNoGbRz6us/BvGiUuQBAye9FbiaQqTfYONF1vQtt2gJK9AWmyN++D4P
WlQXtrz+ugKe5IjLDe+50Skh0PZa5Co8c/leFO/CjZ11S1OUzlWgZz4ruzmw
HRXmVR1e7FuDXae8A64TuZDUmPxMe3INAha7hqN7CDjNtKJ+6Oo6MFFf6jFs
IeAFz/N3ziysQ8bbxHuRChwo12KW+C95A+quGTtEXGbD/tGjRVwnNsHxjETJ
yiNWDK46+6lpcBOmbda5Qj+zYCpxds1YjYEkIFzeeF6SGU0V11/I1jGQCjeS
pX9ZMOH3tfKG5W1bSHqjZ2LOhTBirNQdv9ljW0jkp1K6AU0MaOolqc/EwkgK
vSzn1jawSskb7mP3jWUi5ZkMCbUQVyjphmHHqDNMpJbtGR2NV5coJfMLYuzH
mUlieWwmdQoLlKU2S3VNMxbSzcRWZ7+ZKUq/H09DrRsbaUDsYOupVBoljZqW
7z/HRlIteUo6fmCMsk29j0Uimp0UbyRSdnRwiFKZkx+exctBKineYZ1L6KOI
jL13cMnlIDl3/NZIPdpJSSMOM/+RIpAYZosObDVupmQ5vhbXyCCQ7gV0co1V
VFG0ix0e6M4QSG0y4maLGv4UmvSrOjVuTtL/ABi/W+o=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(*\\)]\\) (m)\"", TraditionalForm], 
       FormBox[
       "\"m (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-3\\)]\\) \
\\!\\(\\*SubscriptBox[\\(M\\), \\(Sun\\)]\\))\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Backward Ho-Matsuo\"", "\"Forward Ho-Matsuo\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.81994358562478*^9, 3.8199436284930515`*^9}, 
   3.8199437017993793`*^9, {3.8199437347693014`*^9, 3.81994376685736*^9}, 
   3.8199438699354286`*^9, 3.819945469742937*^9, 3.819945549328093*^9, 
   3.8199515065996456`*^9, 3.8199542191745305`*^9, 3.819954583522072*^9, 
   3.819954679061582*^9, 3.8199548788816285`*^9, 3.8199550275960603`*^9, 
   3.820032630862813*^9, 3.8269539592924585`*^9}]
}, Open  ]],

Cell["Keluarin datanya", "Text",
 CellChangeTimes->{{3.8199381217193165`*^9, 3.8199381254415665`*^9}, {
  3.819954649450383*^9, 3.819954651293929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "-", "a0"}]], "Input",
 CellChangeTimes->{{3.8199425395247107`*^9, 3.819942541960727*^9}}],

Cell[BoxData["2.7199931196264515`*^-10"], "Output",
 CellChangeTimes->{
  3.8199425427605085`*^9, 3.81994327719707*^9, 3.8199433263532033`*^9, 
   3.81994555544163*^9, 3.8199515068311787`*^9, {3.819954637260635*^9, 
   3.8199546795323*^9}, 3.820032639342246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "i_", "]"}], ":=", 
  RowBox[{"rn", "+", 
   RowBox[{"i", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"rs0", "-", "rn"}], ")"}], "/", 
     "1000"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"data", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], "/", "100000"}], ",", 
      RowBox[{
       RowBox[{"Po", "[", 
        RowBox[{"x", "[", "i", "]"}], "]"}], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "15"}]]}], ",", " ", 
      RowBox[{
       RowBox[{"Po1", "[", 
        RowBox[{"x", "[", "i", "]"}], "]"}], "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "15"}]]}], ",", 
      RowBox[{
       RowBox[{"mo", "[", 
        RowBox[{"x", "[", "i", "]"}], "]"}], "*", 
       SuperscriptBox["10", "3"]}], ",", " ", 
      RowBox[{
       RowBox[{"mo1", "[", 
        RowBox[{"x", "[", "i", "]"}], "]"}], "*", 
       SuperscriptBox["10", "3"]}], ",", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[Nu]o", "[", 
         RowBox[{"x", "[", "i", "]"}], "]"}], "]"}], "*", 
       SuperscriptBox["10", "12"]}], ",", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[Nu]o1", "[", 
         RowBox[{"x", "[", "i", "]"}], "]"}], "]"}], "*", 
       SuperscriptBox["10", "12"]}], ",", 
      RowBox[{"ro", "[", 
       RowBox[{"x", "[", "i", "]"}], "]"}], ",", " ", 
      RowBox[{"ro1", "[", 
       RowBox[{"x", "[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1000"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<TOV-reverse-5.1.dat\>\""}], "}"}], "]"}], ",", "data"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.819938297142826*^9, 3.819938403277028*^9}, {
   3.8199384382779083`*^9, 3.8199385364847813`*^9}, {3.8199385696440086`*^9, 
   3.8199386370187426`*^9}, 3.819938838448023*^9, {3.819938887590622*^9, 
   3.819938926192709*^9}, {3.8199396151676702`*^9, 3.819939634788108*^9}, 
   3.8199396772113276`*^9, 3.8199397573381324`*^9, {3.8199433844538965`*^9, 
   3.8199434059400682`*^9}, {3.819943496043713*^9, 3.819943496644019*^9}, {
   3.819944019933215*^9, 3.8199440388736444`*^9}, {3.819944989145363*^9, 
   3.819945026633008*^9}, {3.819945059365777*^9, 3.8199450678578424`*^9}, {
   3.8199451121684294`*^9, 3.81994514568474*^9}, {3.8199453590164146`*^9, 
   3.8199453685965486`*^9}, {3.8199454548137603`*^9, 3.819945458855818*^9}, 
   3.819951490695924*^9, {3.8199545937861824`*^9, 3.819954607340965*^9}, {
   3.8199548970861516`*^9, 3.819954938532486*^9}, {3.819955044817607*^9, 
   3.8199550478468657`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\ilham\\\\Dropbox\\\\00 \
SCGrav\\\\ceknumerik\\\\TOV-reverse-5.1.dat\"\>"], "Output",
 CellChangeTimes->{3.8199450881942*^9, 3.819945147622839*^9, 
  3.819945558117278*^9, 3.819951507458573*^9, 3.8199546087142067`*^9, 
  3.81995467995569*^9, 3.819954939965173*^9, 3.819955056110407*^9, 
  3.8200326408616953`*^9, 3.826953965896618*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Alternate local kernel",
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.6 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 207, 4, 262, "Title"],
Cell[CellGroupData[{
Cell[812, 30, 144, 2, 113, "Section"],
Cell[CellGroupData[{
Cell[981, 36, 4701, 136, 350, "Input"],
Cell[5685, 174, 4058, 102, 240, "Output"],
Cell[9746, 278, 1786, 43, 104, "Output"],
Cell[11535, 323, 2073, 49, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13645, 377, 3442, 96, 275, "Input"],
Cell[17090, 475, 5031, 136, 221, "Output"],
Cell[22124, 613, 5121, 137, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27282, 755, 141, 1, 76, "Subsection"],
Cell[27426, 758, 3585, 97, 252, "Input"],
Cell[CellGroupData[{
Cell[31036, 859, 323, 9, 48, "Input"],
Cell[31362, 870, 9027, 230, 730, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40426, 1105, 9643, 234, 1145, "Input"],
Cell[50072, 1341, 5076, 133, 269, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55197, 1480, 126, 1, 76, "Subsection"],
Cell[CellGroupData[{
Cell[55348, 1485, 4011, 119, 319, "Input"],
Cell[59362, 1606, 1283, 37, 104, "Output"],
Cell[60648, 1645, 1213, 33, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61898, 1683, 2772, 77, 293, "Input"],
Cell[64673, 1762, 1199, 34, 108, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65921, 1802, 224, 3, 77, "Subsection"],
Cell[66148, 1807, 11389, 248, 690, "Input"],
Cell[77540, 2057, 352, 10, 49, "Input"],
Cell[CellGroupData[{
Cell[77917, 2071, 347, 11, 76, "Input"],
Cell[78267, 2084, 677, 13, 37, "Message"],
Cell[78947, 2099, 310, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79294, 2110, 6689, 159, 852, "Input"],
Cell[85986, 2271, 25119, 473, 224, "Output"],
Cell[111108, 2746, 7138, 123, 388, "Output"],
Cell[118249, 2871, 6926, 120, 391, "Output"],
Cell[125178, 2993, 7523, 130, 388, "Output"],
Cell[132704, 3125, 2287, 31, 47, "Output"],
Cell[134994, 3158, 2290, 31, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137321, 3194, 167, 3, 86, "Input"],
Cell[137491, 3199, 114, 1, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137642, 3205, 135, 1, 61, "Subsubsection"],
Cell[CellGroupData[{
Cell[137802, 3210, 169, 3, 47, "Input"],
Cell[137974, 3215, 260, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138271, 3223, 99, 1, 47, "Input"],
Cell[138373, 3226, 250, 4, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138660, 3235, 2630, 75, 313, "Input"],
Cell[141293, 3312, 719, 11, 47, "Output"],
Cell[142015, 3325, 174387, 2870, 394, "Output"],
Cell[316405, 6197, 188043, 3094, 394, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504485, 9296, 334, 7, 77, "Input"],
Cell[504822, 9305, 366, 8, 47, "Output"],
Cell[505191, 9315, 374, 8, 55, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[505626, 9330, 97, 1, 77, "Subsection"],
Cell[CellGroupData[{
Cell[505748, 9335, 4218, 103, 280, "Input"],
Cell[509969, 9440, 23282, 448, 224, "Output"],
Cell[533254, 9890, 5317, 98, 388, "Output"],
Cell[538574, 9990, 5175, 96, 388, "Output"],
Cell[543752, 10088, 5694, 105, 388, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[549495, 10199, 120, 1, 77, "Subsection"],
Cell[CellGroupData[{
Cell[549640, 10204, 2837, 79, 193, "Input"],
Cell[552480, 10285, 18806, 364, 390, "Output"],
Cell[571289, 10651, 18270, 356, 390, "Output"],
Cell[589562, 11009, 19572, 378, 390, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[609183, 11393, 120, 1, 77, "Subsection"],
Cell[CellGroupData[{
Cell[609328, 11398, 3513, 97, 299, "Input"],
Cell[612844, 11497, 19494, 374, 376, "Output"],
Cell[632341, 11873, 25115, 468, 380, "Output"],
Cell[657459, 12343, 20143, 385, 376, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677639, 12733, 1964, 57, 229, "Input"],
Cell[679606, 12792, 19650, 378, 380, "Output"]
}, Open  ]],
Cell[699271, 13173, 151, 2, 47, "Text"],
Cell[CellGroupData[{
Cell[699447, 13179, 118, 2, 47, "Input"],
Cell[699568, 13183, 262, 4, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699867, 13192, 2858, 72, 180, "Input"],
Cell[702728, 13266, 368, 5, 47, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
